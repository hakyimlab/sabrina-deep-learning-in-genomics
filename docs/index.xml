<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>deep-learning-in-genomics</title>
<link>https://sabrinami.quarto.pub/deep-learning-in-genomics/index.html</link>
<atom:link href="https://sabrinami.quarto.pub/deep-learning-in-genomics/index.xml" rel="self" type="application/rss+xml"/>
<description>Sabrina&#39;s blog for Deep Learning in Genomics course</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Fri, 11 Aug 2023 00:00:00 GMT</lastBuildDate>
<item>
  <title>Correlation of Enformer CAGE predictions and observed expression across all rn7 genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index.html</link>
  <description><![CDATA[ 




<section id="reference-genome" class="level3">
<h3 class="anchored" data-anchor-id="reference-genome">Reference Genome</h3>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">predictions_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/personalized_Br_selected_genes/predictions_2023-08-11/enformer_predictions"</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb2-2">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_196040/1709712298.py:2: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index.html</guid>
  <pubDate>Fri, 11 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Debugging Enformer predictions for eQTL genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/debugging.html</link>
  <description><![CDATA[ 




<section id="read-genotypes" class="level2">
<h2 class="anchored" data-anchor-id="read-genotypes">Read Genotypes</h2>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"></span>
<span id="cb1-4">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_147902/538256472.py:4: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000054549'</span></span>
<span id="cb3-2">gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene_annot)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>geneSymbol         Lss
chromosome          20
start         12092774
end           12118762
strand               -
tss           12118762
Name: ENSRNOG00000054549, dtype: object</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/debugging.html</guid>
  <pubDate>Fri, 11 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing predicted vs observed gene expression for rat genes selected for variation in expression across Br population, number of eQTLs, and elastic net prediction performance</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/index.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq </span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval </span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/personalized_Br_selected_genes/predictions_2023-08-11/enformer_predictions"</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb2-4">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb2-7">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().splitlines()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_135100/534672817.py:4: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<section id="initialize-dataframes-with-observed-expression" class="level3">
<h3 class="anchored" data-anchor-id="initialize-dataframes-with-observed-expression">Initialize Dataframes with Observed Expression</h3>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">pred_vs_obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-3">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb4-4">    pred_vs_obs[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
</section>
<section id="quantify-gene-expression" class="level2">
<h2 class="anchored" data-anchor-id="quantify-gene-expression">Quantify Gene Expression</h2>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb5-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb5-5">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb5-6">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-7">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-8">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> pred_vs_obs[gene].index:</span>
<span id="cb5-10">        haplo1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb5-11">        haplo2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype2/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb5-12">        predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (haplo1[interval][()] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo2[interval][()]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb5-13">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(predictions[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">447</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb5-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb5-15">        pred_vs_obs[gene].loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span>
<span id="cb5-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_135100/1897498957.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000054549
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_predicted_vs_observed(gene):</span>
<span id="cb8-2">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[gene]</span>
<span id="cb8-3"></span>
<span id="cb8-4">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>]</span>
<span id="cb8-5">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]</span>
<span id="cb8-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb8-7">    plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-8"></span>
<span id="cb8-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb8-10">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb8-11">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb8-12">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb8-13"></span>
<span id="cb8-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb8-15">    plt.show()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb9-2">    plot_predicted_vs_observed(gene)</span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/index_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/index.html</guid>
  <pubDate>Fri, 11 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Enformer across all rn7 genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/running-enformer-across-all-rat-genes.html</link>
  <description><![CDATA[ 




<section id="collect-gene-intervals" class="level2">
<h2 class="anchored" data-anchor-id="collect-gene-intervals">Collect Gene Intervals</h2>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gene annotation</span></span>
<span id="cb2-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb2-3">annot_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_206323/2449699668.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geneSymbol</th>
<th data-quarto-table-cell-role="th">chromosome</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">strand</th>
<th data-quarto-table-cell-role="th">tss</th>
<th data-quarto-table-cell-role="th">description</th>
<th data-quarto-table-cell-role="th">hasEqtl</th>
<th data-quarto-table-cell-role="th">expr_BLA</th>
<th data-quarto-table-cell-role="th">expr_Brain</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">sqtl_BLA</th>
<th data-quarto-table-cell-role="th">sqtl_Brain</th>
<th data-quarto-table-cell-role="th">sqtl_Eye</th>
<th data-quarto-table-cell-role="th">sqtl_IL</th>
<th data-quarto-table-cell-role="th">sqtl_LHb</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc2</th>
<th data-quarto-table-cell-role="th">sqtl_OFC</th>
<th data-quarto-table-cell-role="th">sqtl_PL</th>
<th data-quarto-table-cell-role="th">sqtl_PL2</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">geneId</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000066169</td>
<td>ENSRNOG00000066169</td>
<td>1</td>
<td>36112690</td>
<td>36122387</td>
<td>-</td>
<td>36122387</td>
<td>NaN</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000070168</td>
<td>Olr56</td>
<td>1</td>
<td>157231467</td>
<td>157232417</td>
<td>+</td>
<td>157231467</td>
<td>olfactory receptor family 51 subfamily F membe...</td>
<td>True</td>
<td>False</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070901</td>
<td>Irgq</td>
<td>1</td>
<td>80123925</td>
<td>80131881</td>
<td>+</td>
<td>80123925</td>
<td>immunity-related GTPase Q</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
</tbody>
</table>

<p>3 rows × 68 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb4-2">obs_gene_expr.head()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_206323/3189498692.py:1: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv("/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed", sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">#chr</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">000789972A</th>
<th data-quarto-table-cell-role="th">0007899884</th>
<th data-quarto-table-cell-role="th">000789FF64</th>
<th data-quarto-table-cell-role="th">00079298B1</th>
<th data-quarto-table-cell-role="th">00079299B5</th>
<th data-quarto-table-cell-role="th">0007929A79</th>
<th data-quarto-table-cell-role="th">0007929B36</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">0007899761</th>
<th data-quarto-table-cell-role="th">0007899866</th>
<th data-quarto-table-cell-role="th">00078A00E6</th>
<th data-quarto-table-cell-role="th">0007929938</th>
<th data-quarto-table-cell-role="th">0007929956</th>
<th data-quarto-table-cell-role="th">00079FF7D6</th>
<th data-quarto-table-cell-role="th">0007899826</th>
<th data-quarto-table-cell-role="th">0007929917</th>
<th data-quarto-table-cell-role="th">00077E82E3</th>
<th data-quarto-table-cell-role="th">00078A18A7</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000065394</td>
<td>1</td>
<td>31563</td>
<td>31564</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065356</td>
<td>1</td>
<td>41634</td>
<td>41635</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070568</td>
<td>1</td>
<td>76833</td>
<td>76834</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.01</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065706</td>
<td>1</td>
<td>184235</td>
<td>184236</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.18</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000069644</td>
<td>1</td>
<td>272252</td>
<td>272253</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
</tbody>
</table>

<p>5 rows × 343 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">obs_gene_expr[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#chr'</span>].unique()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>array([1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 3, 4, 5, 6, 7, 8,
       9, '9', 'JACYVU010000238.1', 'JACYVU010000315.1',
       'JACYVU010000319.1', 'JACYVU010000493.1', 'JACYVU010000587.1',
       'JACYVU010000589.1', 'JACYVU010000619.1', 'JACYVU010000634.1',
       'JACYVU010000642.1', 'JACYVU010000653.1', 'JACYVU010000665.1',
       'JACYVU010000706.1', 'JACYVU010000731.1', 'JACYVU010000732.1',
       'JACYVU010000738.1', 'JACYVU010000744.1', 'JACYVU010000754.1',
       'MT', 'MU150189.1', 'MU150193.1', 'MU150196.1', 'MU150200.1',
       'MU150203.1', 'MU150220.1', 'MU150222.1', 'MU150223.1', 'X', 'Y'],
      dtype=object)</code></pre>
</div>
</div>
<p>We want to filter to genes on chromosomes 1 through 20 and X and Y.</p>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">keys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>]</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb8-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> obs_gene_expr.index:</span>
<span id="cb8-5">        gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-6">        chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>])</span>
<span id="cb8-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> chromosome <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> keys:</span>
<span id="cb8-8">            tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb8-9">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-10">            f.write(interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb8-11">            </span></code></pre></div>
</div>
<section id="sample-individuals" class="level3">
<h3 class="anchored" data-anchor-id="sample-individuals">Sample Individuals</h3>
<p>We “randomly” sampled three rats until we had a set that had at least some variety in color and sex.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">rat_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.RatGTEx_rats.tsv"</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rat_id"</span>)</span>
<span id="cb9-2">all_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.columns.tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb9-3">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(all_individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb9-4">rat_info.loc[sample]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="31">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">coatcolor</th>
<th data-quarto-table-cell-role="th">tissues</th>
<th data-quarto-table-cell-role="th">sex</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">rat_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">00079FE6B4</td>
<td>BLACKHOOD</td>
<td>Brain</td>
<td>F</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">0007899981</td>
<td>BROWNHOOD</td>
<td>Brain</td>
<td>M</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">00078A19B2</td>
<td>BROWN</td>
<td>Brain</td>
<td>M</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/individuals.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb10-2">    f.write(sample.join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span></code></pre></div>
</div>
</section>
</section>
<section id="run-enformer-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="run-enformer-pipeline">Run Enformer Pipeline</h2>
<p>Run personalized for sampled rats:</p>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline

python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/all_genes_personalized_config.json
</code></pre>
<p>Run on reference genome:</p>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline

python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/all_genes_reference_config.json</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/running-enformer-across-all-rat-genes.html</guid>
  <pubDate>Thu, 10 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Selecting Rat genes for Enformer CAGE predictions</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-selecting-genes/selecting-well-predicted-gene-regions.html</link>
  <description><![CDATA[ 




<section id="calculate-gene-expression-variance-across-individuals" class="level2">
<h2 class="anchored" data-anchor-id="calculate-gene-expression-variance-across-individuals">Calculate gene expression variance across individuals</h2>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Read in expression data</span></span>
<span id="cb2-2">tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-3">iqn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.iqn.bed"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_238845/1386399847.py:2: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  tpm = pd.read_csv("/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed", header = 0, sep="\t",  index_col= 'gene_id')
/tmp/ipykernel_238845/1386399847.py:3: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  iqn = pd.read_csv("/home/s1mi/enformer_rat_data/Brain.rn7.expr.iqn.bed", header = 0, sep="\t",  index_col= 'gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">tpm_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].var(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-2">np.average(tpm_var)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>1003.8945129200853</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">iqn_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iqn.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].var(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-2">np.average(iqn_var)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>0.6306594759954833</code></pre>
</div>
</div>
<p>We first subset to genes in the top decile for both TPM and IQN variance.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">tpm_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm_var.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb8-2">iqn_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iqn_var.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb8-3">high_tpm_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(tpm[tpm_var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> tpm_threshold].index)</span>
<span id="cb8-4">high_iqn_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(iqn[iqn_var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> iqn_threshold].index)</span>
<span id="cb8-5">high_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> high_tpm_var_genes.intersection(high_iqn_var_genes)</span>
<span id="cb8-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(high_var_genes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes with high variance"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>167 genes with high variance</code></pre>
</div>
</div>
</section>
<section id="count-eqtls" class="level2">
<h2 class="anchored" data-anchor-id="count-eqtls">Count eQTLs</h2>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">eqtl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/Brain.rn7.cis_qtl_signif.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-2">eqtl.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th">variant_id</th>
<th data-quarto-table-cell-role="th">tss_distance</th>
<th data-quarto-table-cell-role="th">af</th>
<th data-quarto-table-cell-role="th">ma_samples</th>
<th data-quarto-table-cell-role="th">ma_count</th>
<th data-quarto-table-cell-role="th">pval_nominal</th>
<th data-quarto-table-cell-role="th">slope</th>
<th data-quarto-table-cell-role="th">slope_se</th>
<th data-quarto-table-cell-role="th">pval_nominal_threshold</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002359</td>
<td>695174</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002361</td>
<td>695176</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002408</td>
<td>695223</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002450</td>
<td>695265</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002464</td>
<td>695279</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> eqtl[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>].value_counts()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">counts.describe()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>count    11238.000000
mean      2312.935398
std       1490.079008
min          1.000000
25%       1160.250000
50%       2236.000000
75%       3277.750000
max      10799.000000
Name: gene_id, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">eqtl_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb14-2">eqtl_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts[counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> eqtl_threshold].index</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(eqtl_genes)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Index(['ENSRNOG00000031024', 'ENSRNOG00000000451', 'ENSRNOG00000032708',
       'ENSRNOG00000000455', 'ENSRNOG00000021507', 'ENSRNOG00000009389',
       'ENSRNOG00000066838', 'ENSRNOG00000000432', 'ENSRNOG00000039396',
       'ENSRNOG00000002232',
       ...
       'ENSRNOG00000016364', 'ENSRNOG00000008471', 'ENSRNOG00000043350',
       'ENSRNOG00000012337', 'ENSRNOG00000005248', 'ENSRNOG00000068325',
       'ENSRNOG00000012868', 'ENSRNOG00000068200', 'ENSRNOG00000005610',
       'ENSRNOG00000008356'],
      dtype='object', length=1124)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> high_var_genes.intersection(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(eqtl_genes))</span>
<span id="cb17-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gene_list), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"candidate genes for enformer prediction experiments"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>17 candidate genes for enformer prediction experiments</code></pre>
</div>
</div>
</section>
<section id="check-elastic-net-prediction-performance" class="level2">
<h2 class="anchored" data-anchor-id="check-elastic-net-prediction-performance">Check Elastic Net Prediction Performance</h2>
<p>Now that we have a manageable number of genes, we can individual check that these genes have sufficient prediction performance.</p>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">model_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/highestR2genes.csv"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>)</span>
<span id="cb19-2">model_genes.loc[[gene <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_genes.index]]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">genename</th>
<th data-quarto-table-cell-role="th">pred.perf.R2</th>
<th data-quarto-table-cell-role="th">n.snps.in.model</th>
<th data-quarto-table-cell-role="th">pred.perf.pval</th>
<th data-quarto-table-cell-role="th">cor</th>
<th data-quarto-table-cell-role="th">pred.perf.qval</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">gene</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000009734</td>
<td>Akr1b8</td>
<td>0.050379</td>
<td>4</td>
<td>6.577101e-04</td>
<td>0.224453</td>
<td>4.811327e-04</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000001311</td>
<td>Rab36</td>
<td>0.559618</td>
<td>2</td>
<td>6.036613e-42</td>
<td>0.748076</td>
<td>7.693936e-41</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000010079</td>
<td>Ca3</td>
<td>0.003307</td>
<td>2</td>
<td>3.884876e-01</td>
<td>0.057507</td>
<td>1.439053e-01</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000028436</td>
<td>Rprml</td>
<td>0.228241</td>
<td>3</td>
<td>2.407910e-14</td>
<td>0.477745</td>
<td>5.222104e-14</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000032908</td>
<td>Acaa1a</td>
<td>0.548779</td>
<td>2</td>
<td>9.394297e-41</td>
<td>0.740796</td>
<td>1.111821e-39</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000050647</td>
<td>Hspa1b</td>
<td>0.078443</td>
<td>6</td>
<td>1.847947e-05</td>
<td>0.280077</td>
<td>1.706734e-05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000012235</td>
<td>Ppp1r17</td>
<td>0.370200</td>
<td>2</td>
<td>2.229702e-24</td>
<td>0.608441</td>
<td>9.825564e-24</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000048258</td>
<td>Cisd2</td>
<td>0.661901</td>
<td>2</td>
<td>6.783282e-55</td>
<td>0.813573</td>
<td>2.391336e-53</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000054549</td>
<td>Lss</td>
<td>0.124023</td>
<td>3</td>
<td>4.970816e-08</td>
<td>0.352169</td>
<td>6.169430e-08</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000004430</td>
<td>Cep131</td>
<td>0.650722</td>
<td>2</td>
<td>2.657264e-53</td>
<td>0.806673</td>
<td>8.153414e-52</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>All of the genes found in the model have positive correlation. For now, we will keep all 17 genes in our list to run Enformer on.</p>
</section>
<section id="run-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="run-pipeline">Run Pipeline</h2>
<section id="write-metadata" class="level3">
<h3 class="anchored" data-anchor-id="write-metadata">Write Metadata</h3>
<p>First, write our <code>metadata/intervals.txt</code> file with the 17 genes we have narrowed down to.</p>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_intervals(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb20-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb20-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb20-4">            gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb20-5">            tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb20-6">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb20-7">            f.write(interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb21-4">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(gene_list))</span>
<span id="cb21-5">write_intervals(gene_list, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_238845/487979158.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
</div>
<p>Use all 340 individuals:</p>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>bcftools query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_rat_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Brain.rn7.vcf.gz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> metadata<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>individuals.txt</span></code></pre></div>
</div>
</section>
<section id="submit-jobs" class="level3">
<h3 class="anchored" data-anchor-id="submit-jobs">Submit Jobs</h3>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline
python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-10-selecting-genes/personalized_config.json
</code></pre>


</section>
</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-selecting-genes/selecting-well-predicted-gene-regions.html</guid>
  <pubDate>Thu, 10 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Debugging the issue of low variance in Enformer CAGE prediction</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks.html</link>
  <description><![CDATA[ 




<section id="setup" class="level3">
<h3 class="anchored" data-anchor-id="setup">Setup</h3>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq </span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-13">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_Br_genes/predictions_2023-08-08/enformer_predictions"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb2-2">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb2-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/rn7_genome.fasta'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"></span>
<span id="cb3-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_14448/515731113.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `Enformer`, `EnformerScoreVariantsNormalized`, `EnformerScoreVariantsPCANormalized`,</span></span>
<span id="cb5-2">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb5-5"></span>
<span id="cb5-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb5-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb5-8"></span>
<span id="cb5-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-10">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb5-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb5-12"></span>
<span id="cb5-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb5-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb5-15">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb5-16">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb5-17"></span>
<span id="cb5-18">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb5-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb5-20">      tape.watch(input_sequence)</span>
<span id="cb5-21">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb5-22">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb5-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb5-24"></span>
<span id="cb5-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb5-26">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-28"></span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsRaw:</span>
<span id="cb5-31"></span>
<span id="cb5-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb5-33">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(tfhub_url)</span>
<span id="cb5-34">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> organism</span>
<span id="cb5-35"></span>
<span id="cb5-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-37">    ref_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb5-38">    alt_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb5-39"></span>
<span id="cb5-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> alt_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ref_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-41"></span>
<span id="cb5-42"></span>
<span id="cb5-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsNormalized:</span>
<span id="cb5-44"></span>
<span id="cb5-45">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb5-46">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb5-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transforms only compatible with organism=human'</span></span>
<span id="cb5-48">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb5-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-50">      transform_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb5-51">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_pipeline.steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># StandardScaler.</span></span>
<span id="cb5-52"></span>
<span id="cb5-53">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-54">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb5-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)</span>
<span id="cb5-56"></span>
<span id="cb5-57"></span>
<span id="cb5-58"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsPCANormalized:</span>
<span id="cb5-59"></span>
<span id="cb5-60">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb5-61">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, num_top_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>):</span>
<span id="cb5-62">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb5-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-64">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb5-65">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_top_features</span>
<span id="cb5-66"></span>
<span id="cb5-67">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-68">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb5-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)[:, :<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features]</span>
<span id="cb5-70"></span>
<span id="cb5-71"></span>
<span id="cb5-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(avsec): Add feature description: Either PCX, or full names.</span></span>
<span id="cb5-73"></span>
<span id="cb5-74"></span>
<span id="cb5-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `variant_centered_sequences`</span></span>
<span id="cb5-76"></span>
<span id="cb5-77"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb5-78"></span>
<span id="cb5-79">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb5-80">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb5-81">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb5-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import pd.Interval as Interval</span></span>
<span id="cb5-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb5-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb5-85">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb5-86">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb5-87">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb5-88">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb5-89">                                    )</span>
<span id="cb5-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb5-91">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb5-92">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb5-93">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb5-94">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb5-95">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-96">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb5-98"></span>
<span id="cb5-99">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb5-101"></span>
<span id="cb5-102"></span>
<span id="cb5-103"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb5-104">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span>
<span id="cb5-105"></span>
<span id="cb5-106"></span>
<span id="cb5-107"></span>
<span id="cb5-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `plot_tracks`</span></span>
<span id="cb5-109"></span>
<span id="cb5-110"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb5-111">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-112">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb5-113">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb5-114">    ax.set_title(title)</span>
<span id="cb5-115">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-116">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb5-117">  plt.tight_layout()</span>
<span id="cb5-118"></span>
<span id="cb5-119"></span>
<span id="cb5-120">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_track(title, y, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb5-121">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height))</span>
<span id="cb5-122">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb5-123">    ax.set_title(title)</span>
<span id="cb5-124">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-125">    ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb5-126">    plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path)</span>
<span id="cb6-2"></span>
<span id="cb6-3">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> compute_tss_bin(output_window_coords_resized, tss_position, output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>, bin_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, rc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb7-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Computes the bin index of the enformer output bin containing the TSS</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Inputs:</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_window_coords_resized: Kipoiseq interval for the output window of Enformer, should already be resized to the model output window size</span></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_position: absolute location of TSS</span></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_length: Length of output window in base pairs</span></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    bin_size: Length of output bins in base pairs</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Outputs:</span></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_bin: Index of bin containing TSS</span></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb7-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb7-13">        relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(tss_position) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_window_coords_resized.start)</span>
<span id="cb7-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb7-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position)</span></span>
<span id="cb7-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(output_window_coords_resized.start)</span></span>
<span id="cb7-17">        sys.exit()</span>
<span id="cb7-18"></span>
<span id="cb7-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> output_length:</span>
<span id="cb7-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position, "appears to be out of bounds for output window: ",output_window_coords_resized)</span></span>
<span id="cb7-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> </span>
<span id="cb7-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-23">        center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> bin_length</span>
<span id="cb7-24"></span>
<span id="cb7-25">        </span>
<span id="cb7-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> rc:</span>
<span id="cb7-27">            number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin_length)</span>
<span id="cb7-28">            new_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> center</span>
<span id="cb7-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(new_center)</span></span>
<span id="cb7-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,new_center,new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(center)</span></span>
<span id="cb7-33">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,center,center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
</section>
<section id="check-reference-genome-for-peaks" class="level2">
<h2 class="anchored" data-anchor-id="check-reference-genome-for-peaks">Check reference genome for peaks</h2>
<p>We selected 7 genes based of prediction performance in elastic training, and ran Enformer on 340 individuals centered at the TSS for each gene. Since we did not see any association between predicted and observed expression, we run Enformer with the reference genome to consider their relative expression levels compared in a transcriptome-wide context.</p>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb8-2">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().splitlines()</span>
<span id="cb8-3"></span>
<span id="cb8-4">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb8-7">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-8">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>], gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>])</span>
<span id="cb8-9">    sequence_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> one_hot_encode(fasta_extractor.extract(tss.resize(SEQUENCE_LENGTH)))</span>
<span id="cb8-10">    prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(sequence_one_hot[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb8-11">    CAGE_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prediction[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb8-12">    plot_track(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene, np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> CAGE_predictions[gene]), tss.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>))</span>
<span id="cb8-13">    </span>
<span id="cb8-14">    </span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-7.png" class="img-fluid"></p>
</div>
</div>
<p>Several genes have peaks at the center of the interval, where we fixed the TSS. This indicates that Enformer is correctly identifying TSS, even if some genes don’t show peaks at the TSS.</p>
</section>
<section id="variance-across-interval" class="level2">
<h2 class="anchored" data-anchor-id="variance-across-interval">Variance across Interval</h2>
<p>We have two genes with CAGE:Brain peaks at the TSS, now we take a closer look at the predictions generated from the pipeline compared to the original usage notebook.</p>
<div class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">genes_of_interest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>]</span>
<span id="cb9-2">individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb9-3"></span>
<span id="cb9-4"></span>
<span id="cb9-5">old_predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-26/enformer_predictions"</span></span>
<span id="cb9-6">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb9-7"></span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes_of_interest:</span>
<span id="cb9-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb9-11">    predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals)</span>
<span id="cb9-12">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb9-13">    interval_obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>], gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>])</span>
<span id="cb9-14">    tss_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compute_tss_bin(interval_obj.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>])</span>
<span id="cb9-15">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb9-17">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>old_predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb9-18">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb9-19">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[tss_bins, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb9-20">        predictions[gene].loc[individual, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000020624
ENSRNOG00000058006</code></pre>
</div>
</div>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes_of_interest:</span>
<span id="cb11-2">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb11-3">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb11-4">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb11-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb11-6">        interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb11-7">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb11-8">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb11-9">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">447</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">449</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb11-10">        predictions[gene].loc[individual,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span></code></pre></div>
</div>
<div class="cell" data-execution_count="64">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes_of_interest:</span>
<span id="cb12-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb12-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old Range:"</span>, predictions[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].unique())</span>
<span id="cb12-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New Range:"</span>, predictions[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].unique())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000020624
Old Range: [4.09390497 4.09556913 4.09526396]
New Range: [6.03277731 6.03283596]
ENSRNOG00000058006
Old Range: [0.0266992  0.0266884  0.02666909]
New Range: [0.01251906 0.01252023]</code></pre>
</div>
</div>
</section>
<section id="conclusions" class="level2">
<h2 class="anchored" data-anchor-id="conclusions">Conclusions</h2>
<p>For both genes, centering enformer predictions at the TSS, rather than the start and end of genes, reduces variation in CAGE predictions. It is unclear to me why shifting the center increases CAGE values around the TSS for one gene but decreases them for the other gene. I think I should focus on picking genes with (1) more variation in observed expression, (2) CAGE peaks at the TSS, and (3) high R2 in elasticnet models, and continue centering our intervals around the start and end of our genes.</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks.html</guid>
  <pubDate>Wed, 09 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Generating plots of Enformer CAGE predictions centered at TSS</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression.html</link>
  <description><![CDATA[ 




<p>Last time, we tried to generate plots of predicted vs observed expression, but we saw very little variance in the enformer predictions, resulting in the plots showing no association between the two. I reran the enformer pipeline again but with more genes and centering intervals at gene TSS. The steps are documented <a href="https://github.com/hakyimlab/sabrina-deep-learning-in-genomics/blob/main/posts/running-enformer-on-rat-genes-at-TSS/pipeline.ipynb">here</a></p>
<p>In this notebook, I started to develop a pipeline to generate plots. We observed that only around half of genes showed tracks that peak where we’d expect in the center. In addition, there was even less variance in predicted expression across the population than when we centered intervals around the start and end of the gene.</p>
<p>Overall, it looks like centering intervals at the TSS leads worsened prediction performance because expression levels looked more uniform.</p>
<p>Tomorrow, I will calculate variance in gene expression across individuals for each gene to refine the gene selection process. Hopefully, using genes with high R2 performance in elastic net models and high variation across individuals will all us to try to capture more variance in CAGE prediction.</p>
<div class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq </span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval </span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-11"></span>
<span id="cb1-12"></span>
<span id="cb1-13">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_Br_genes/predictions_2023-08-08/enformer_predictions"</span></span></code></pre></div>
</div>
<section id="read-observed-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="read-observed-gene-expression">Read Observed Gene Expression</h3>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb2-2">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb2-5">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().splitlines()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_15456/2188858492.py:2: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">pred_vs_obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-3">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb4-4">    pred_vs_obs[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
</section>
<section id="quantify-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="quantify-gene-expression">Quantify Gene Expression</h3>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb5-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb5-5">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb5-6">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-7">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-8">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> pred_vs_obs[gene].index:</span>
<span id="cb5-10">        predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb5-11">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions[interval][()]</span>
<span id="cb5-12">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">447</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb5-13">        pred_vs_obs[gene].loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_15456/1723122919.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000001342
ENSRNOG00000020624
ENSRNOG00000058006
ENSRNOG00000060045
ENSRNOG00000047706
ENSRNOG00000029386
ENSRNOG00000011944</code></pre>
</div>
</div>
</section>
<section id="plot-tracks" class="level3">
<h3 class="anchored" data-anchor-id="plot-tracks">Plot Tracks</h3>
<p>Collect all predictions along 896 bins for CAGE:Brain track.</p>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb8-4">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-5">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb8-6">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb8-7">    gene_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb8-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(predictions_dir):</span>
<span id="cb8-9">        interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-10">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb8-11">        gene_predictions[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb8-12">    predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_predictions</span></code></pre></div>
</div>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb9-2">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb9-4">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb9-5">    ax.set_title(title)</span>
<span id="cb9-6">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-7">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb9-8">  plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_individual_tracks(gene):</span>
<span id="cb10-2">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb10-3">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb10-4">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb10-5"></span>
<span id="cb10-6">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, start, end)</span>
<span id="cb10-7">    tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb10-8">    individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(pred_vs_obs[gene].index)</span>
<span id="cb10-9">    sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb10-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample:</span>
<span id="cb10-11">        tracks[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictions[gene][individual][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb10-12">    plot_tracks(tracks, target_interval)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb11-2">    plot_individual_tracks(gene)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-7.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="57">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_predicted_vs_observed(gene):</span>
<span id="cb12-2">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[gene]</span>
<span id="cb12-3"></span>
<span id="cb12-4">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>]</span>
<span id="cb12-5">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]</span>
<span id="cb12-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb12-7">    plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb12-8"></span>
<span id="cb12-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb12-10">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb12-11">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb12-12">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb12-13"></span>
<span id="cb12-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb12-15">    plt.show()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="58">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb13-2">    plot_predicted_vs_observed(gene)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-7.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression.html</guid>
  <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Preparing pipeline inputs for Enformer predictions centered at canonical TSS”</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/pipeline.html</link>
  <description><![CDATA[ 




<section id="write-gene-intervals" class="level3">
<h3 class="anchored" data-anchor-id="write-gene-intervals">Write Gene Intervals</h3>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3">model_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"highestR2genes.csv"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-4">model_genes.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">gene</th>
<th data-quarto-table-cell-role="th">genename</th>
<th data-quarto-table-cell-role="th">pred.perf.R2</th>
<th data-quarto-table-cell-role="th">n.snps.in.model</th>
<th data-quarto-table-cell-role="th">pred.perf.pval</th>
<th data-quarto-table-cell-role="th">cor</th>
<th data-quarto-table-cell-role="th">pred.perf.qval</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ENSRNOG00000001342</td>
<td>Wdr66</td>
<td>0.844361</td>
<td>3</td>
<td>7.502608e-93</td>
<td>0.918891</td>
<td>1.243114e-89</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>ENSRNOG00000020624</td>
<td>Acadsb</td>
<td>0.829218</td>
<td>3</td>
<td>2.602032e-88</td>
<td>0.910614</td>
<td>2.155665e-85</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>ENSRNOG00000060523</td>
<td>AABR07044362.6</td>
<td>0.820292</td>
<td>8</td>
<td>8.068512e-86</td>
<td>0.905700</td>
<td>4.456263e-83</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>ENSRNOG00000058006</td>
<td>Sncg</td>
<td>0.816705</td>
<td>6</td>
<td>7.472730e-85</td>
<td>0.903717</td>
<td>3.095408e-82</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>ENSRNOG00000060045</td>
<td>Pi4ka</td>
<td>0.815282</td>
<td>3</td>
<td>1.784460e-84</td>
<td>0.902930</td>
<td>5.913374e-82</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gene annotation</span></span>
<span id="cb2-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb2-3">annot_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_164253/1218160640.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geneSymbol</th>
<th data-quarto-table-cell-role="th">chromosome</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">strand</th>
<th data-quarto-table-cell-role="th">tss</th>
<th data-quarto-table-cell-role="th">description</th>
<th data-quarto-table-cell-role="th">hasEqtl</th>
<th data-quarto-table-cell-role="th">expr_BLA</th>
<th data-quarto-table-cell-role="th">expr_Brain</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">sqtl_BLA</th>
<th data-quarto-table-cell-role="th">sqtl_Brain</th>
<th data-quarto-table-cell-role="th">sqtl_Eye</th>
<th data-quarto-table-cell-role="th">sqtl_IL</th>
<th data-quarto-table-cell-role="th">sqtl_LHb</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc2</th>
<th data-quarto-table-cell-role="th">sqtl_OFC</th>
<th data-quarto-table-cell-role="th">sqtl_PL</th>
<th data-quarto-table-cell-role="th">sqtl_PL2</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">geneId</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000066169</td>
<td>ENSRNOG00000066169</td>
<td>1</td>
<td>36112690</td>
<td>36122387</td>
<td>-</td>
<td>36122387</td>
<td>NaN</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000070168</td>
<td>Olr56</td>
<td>1</td>
<td>157231467</td>
<td>157232417</td>
<td>+</td>
<td>157231467</td>
<td>olfactory receptor family 51 subfamily F membe...</td>
<td>True</td>
<td>False</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070901</td>
<td>Irgq</td>
<td>1</td>
<td>80123925</td>
<td>80131881</td>
<td>+</td>
<td>80123925</td>
<td>immunity-related GTPase Q</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
</tbody>
</table>

<p>3 rows × 68 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_intervals(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-4">            gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb4-5">            tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb4-6">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb4-7">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb4-8">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-9">            f.write(interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [gene <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> annot_df.index]</span>
<span id="cb5-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-3">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(gene_list))</span>
<span id="cb5-4">write_intervals(gene_list, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>)</span></code></pre></div>
</div>
</section>
<section id="write-individuals-list" class="level3">
<h3 class="anchored" data-anchor-id="write-individuals-list">Write Individuals List</h3>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>bcftools query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_rat_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Brain.rn7.vcf.gz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> metadata<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>individuals.txt</span></code></pre></div>
</div>
<p>I added these parameters to the config file: <code>/home/s1mi/Github/deep-learning-in-genomics/posts/running-enformer-on-rat-genes-at-TSS/run_on_polaris_personalized.json</code></p>
</section>
<section id="run-enformer" class="level3">
<h3 class="anchored" data-anchor-id="run-enformer">Run Enformer</h3>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline
python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/running-enformer-on-rat-genes-at-TSS/run_on_polaris_personalized.json
</code></pre>
</section>
<section id="concatenate-predictions" class="level3">
<h3 class="anchored" data-anchor-id="concatenate-predictions">Concatenate Predictions</h3>
<div class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> concatenate_predictions(predictions_dir, output_path):</span>
<span id="cb8-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_file:</span>
<span id="cb8-6">        individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb8-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb8-8">            group <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_file.create_group(individual)</span>
<span id="cb8-9"></span>
<span id="cb8-10">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(predictions_dir, individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype1"</span>)</span>
<span id="cb8-11">            filenames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>)</span>
<span id="cb8-12"></span>
<span id="cb8-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> filenames:</span>
<span id="cb8-14">                interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb8-15">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(os.path.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_file:</span>
<span id="cb8-16">                    group.create_dataset(interval, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_file[interval][()], shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"></span>
<span id="cb9-2">predictions_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Github/deep-learning-in-genomics/posts/running-enformer-on-rat-genes-at-TSS/predictions_folder/personalized_Br_genes/predictions_2023-08-08/enformer_predictions"</span></span>
<span id="cb9-3">concatenate_predictions(predictions_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Br_2023-08-08_predictions.h5"</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/pipeline.html</guid>
  <pubDate>Tue, 08 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>CAGE Brain plots for three well-predicted genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain_plots-at-TSS/index.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make sure the GPU is enabled</span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Start the colab kernel with GPU: Runtime -&gt; Change runtime type -&gt; GPU'</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>2023-08-11 15:54:08.579990: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-08-11 15:54:14.184182: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /soft/compilers/cudatoolkit/cuda-11.8.0/extras/CUPTI/lib64:/soft/compilers/cudatoolkit/cuda-11.8.0/lib64:/soft/libraries/trt/TensorRT-8.5.2.2.Linux.x86_64-gnu.cuda-11.8.cudnn8.6/lib:/soft/libraries/nccl/nccl_2.16.2-1+cuda11.8_x86_64/lib:/soft/libraries/cudnn/cudnn-11-linux-x64-v8.6.0.163/lib:/opt/cray/pe/gcc/11.2.0/snos/lib64:/opt/cray/pe/papi/6.0.0.14/lib64:/opt/cray/libfabric/1.11.0.4.125/lib64:/dbhome/db2cat/sqllib/lib64:/dbhome/db2cat/sqllib/lib64/gskit:/dbhome/db2cat/sqllib/lib32:${LD_LIBRARY_PATH}
2023-08-11 15:54:14.185125: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /soft/compilers/cudatoolkit/cuda-11.8.0/extras/CUPTI/lib64:/soft/compilers/cudatoolkit/cuda-11.8.0/lib64:/soft/libraries/trt/TensorRT-8.5.2.2.Linux.x86_64-gnu.cuda-11.8.cudnn8.6/lib:/soft/libraries/nccl/nccl_2.16.2-1+cuda11.8_x86_64/lib:/soft/libraries/cudnn/cudnn-11-linux-x64-v8.6.0.163/lib:/opt/cray/pe/gcc/11.2.0/snos/lib64:/opt/cray/pe/papi/6.0.0.14/lib64:/opt/cray/libfabric/1.11.0.4.125/lib64:/dbhome/db2cat/sqllib/lib64:/dbhome/db2cat/sqllib/lib64/gskit:/dbhome/db2cat/sqllib/lib32:${LD_LIBRARY_PATH}
2023-08-11 15:54:14.185137: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gzip</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb3-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx</span>
<span id="cb3-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl</span>
<span id="cb3-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb3-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb4-2">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb4-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/rn7_genome.fasta'</span></span>
<span id="cb4-4"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">targets_txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/calico/basenji/master/manuscripts/cross2020/targets_human.txt'</span></span>
<span id="cb5-2">df_targets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(targets_txt, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `Enformer`, `EnformerScoreVariantsNormalized`, `EnformerScoreVariantsPCANormalized`,</span></span>
<span id="cb6-2">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb6-5"></span>
<span id="cb6-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb6-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb6-8"></span>
<span id="cb6-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb6-10">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb6-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb6-12"></span>
<span id="cb6-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb6-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb6-15">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb6-16">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb6-17"></span>
<span id="cb6-18">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb6-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb6-20">      tape.watch(input_sequence)</span>
<span id="cb6-21">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb6-22">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb6-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb6-24"></span>
<span id="cb6-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb6-26">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-28"></span>
<span id="cb6-29"></span>
<span id="cb6-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsRaw:</span>
<span id="cb6-31"></span>
<span id="cb6-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb6-33">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(tfhub_url)</span>
<span id="cb6-34">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> organism</span>
<span id="cb6-35"></span>
<span id="cb6-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb6-37">    ref_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb6-38">    alt_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb6-39"></span>
<span id="cb6-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> alt_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ref_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-41"></span>
<span id="cb6-42"></span>
<span id="cb6-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsNormalized:</span>
<span id="cb6-44"></span>
<span id="cb6-45">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb6-46">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb6-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transforms only compatible with organism=human'</span></span>
<span id="cb6-48">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb6-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb6-50">      transform_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb6-51">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_pipeline.steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># StandardScaler.</span></span>
<span id="cb6-52"></span>
<span id="cb6-53">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb6-54">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb6-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)</span>
<span id="cb6-56"></span>
<span id="cb6-57"></span>
<span id="cb6-58"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsPCANormalized:</span>
<span id="cb6-59"></span>
<span id="cb6-60">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb6-61">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, num_top_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>):</span>
<span id="cb6-62">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb6-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb6-64">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb6-65">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_top_features</span>
<span id="cb6-66"></span>
<span id="cb6-67">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb6-68">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb6-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)[:, :<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features]</span>
<span id="cb6-70"></span>
<span id="cb6-71"></span>
<span id="cb6-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(avsec): Add feature description: Either PCX, or full names.</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `variant_centered_sequences`</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb7-4"></span>
<span id="cb7-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb7-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb7-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb7-8"></span>
<span id="cb7-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb7-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb7-11">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb7-12">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb7-13">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb7-14">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb7-15">                                    )</span>
<span id="cb7-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb7-17">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb7-18">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb7-19">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb7-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb7-21">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-22">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb7-24"></span>
<span id="cb7-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb7-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb7-27"></span>
<span id="cb7-28"></span>
<span id="cb7-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> variant_generator(vcf_file, gzipped<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb7-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Yields a kipoiseq.dataclasses.Variant for each row in VCF file."""</span></span>
<span id="cb7-31">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _open(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb7-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> gzip.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(vcf_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rt'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gzipped <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(vcf_file)</span>
<span id="cb7-33"></span>
<span id="cb7-34">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> _open(vcf_file) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb7-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> f:</span>
<span id="cb7-36">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> line.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#'</span>):</span>
<span id="cb7-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb7-38">      chrom, pos, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, ref, alt_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> line.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb7-39">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split ALT alleles and return individual variants as output.</span></span>
<span id="cb7-40">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> alt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> alt_list.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">','</span>):</span>
<span id="cb7-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> kipoiseq.dataclasses.Variant(chrom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chrom, pos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pos,</span>
<span id="cb7-42">                                           ref<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ref, alt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>alt, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span>
<span id="cb7-43"></span>
<span id="cb7-44"></span>
<span id="cb7-45"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb7-46">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span>
<span id="cb7-47"></span>
<span id="cb7-48"></span>
<span id="cb7-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> variant_centered_sequences(vcf_file, sequence_length, gzipped<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb7-50">                               chr_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>):</span>
<span id="cb7-51">  seq_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.extractors.VariantSeqExtractor(</span>
<span id="cb7-52">    reference_sequence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>FastaStringExtractor(fasta_file))</span>
<span id="cb7-53"></span>
<span id="cb7-54">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> variant_generator(vcf_file, gzipped<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gzipped):</span>
<span id="cb7-55">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(chr_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> variant.chrom,</span>
<span id="cb7-56">                        variant.pos, variant.pos)</span>
<span id="cb7-57">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval.resize(sequence_length)</span>
<span id="cb7-58">    center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval.center() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> interval.start</span>
<span id="cb7-59"></span>
<span id="cb7-60">    reference <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq_extractor.extract(interval, [], anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>center)</span>
<span id="cb7-61">    alternate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq_extractor.extract(interval, [variant], anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>center)</span>
<span id="cb7-62"></span>
<span id="cb7-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inputs'</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>: one_hot_encode(reference),</span>
<span id="cb7-64">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>: one_hot_encode(alternate)},</span>
<span id="cb7-65">           <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'metadata'</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chrom'</span>: chr_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> variant.chrom,</span>
<span id="cb7-66">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pos'</span>: variant.pos,</span>
<span id="cb7-67">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>: variant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb7-68">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>: variant.ref,</span>
<span id="cb7-69">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>: variant.alt}}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `plot_tracks`</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb8-4">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb8-6">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb8-7">    ax.set_title(title)</span>
<span id="cb8-8">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-9">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb8-10">  plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path)</span>
<span id="cb9-2"></span>
<span id="cb9-3">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>]</span>
<span id="cb10-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb10-3">gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene_list].iloc[:, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_102315/2838342331.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb12-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span></code></pre></div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span></span>
<span id="cb13-2">chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb13-3">start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33261476</span></span>
<span id="cb13-4">end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33293932</span></span>
<span id="cb13-5">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-26/enformer_predictions"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_annot.index:</span>
<span id="cb14-4">    chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]</span>
<span id="cb14-5">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]</span>
<span id="cb14-6">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]</span>
<span id="cb14-7">    gene_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb14-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(predictions_dir):</span>
<span id="cb14-9">        interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb14-10">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb14-11">        gene_predictions[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb14-12">    predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_predictions</span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene_annot)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                            geneSymbol chromosome      start        end  \
geneId                                                                    
ENSRNOG00000001342  ENSRNOG00000001342         12   33261476   33293932   
ENSRNOG00000020624              Acadsb          1  186188987  186230379   
ENSRNOG00000058006                Sncg         16    9700514    9705368   

                   strand        tss  
geneId                                
ENSRNOG00000001342      -   33293932  
ENSRNOG00000020624      +  186188987  
ENSRNOG00000058006      -    9705368  </code></pre>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title Plot tracks</span></span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'ENSRNOG00000001342'</span></span>
<span id="cb17-4">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33261476</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33293932</span>).resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>)</span>
<span id="cb17-5">tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb17-6">individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(predictions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>].keys())</span>
<span id="cb17-7">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb17-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample:</span>
<span id="cb17-9">    tracks[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>][individual][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb17-10">plot_tracks(tracks, target_interval)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain_plots-at-TSS/index_files/figure-html/cell-15-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>We sampled 3 rats to plot CAGE expression around ENSRNOG00000001342. The TSS is at 33293932, where we see a small peak at the edge of the plot. But the biggest peak lies somewhere in the middle of the gene, which we’ll have to investigate futher. We’ll also check the other two genes.</p>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ENSRNOG00000020624</span></span>
<span id="cb18-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr1'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">186188987</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">186230379</span>).resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>)</span>
<span id="cb18-3">tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb18-4">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb18-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample:</span>
<span id="cb18-6">    tracks[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>][individual][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb18-7">plot_tracks(tracks, target_interval)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain_plots-at-TSS/index_files/figure-html/cell-16-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>The peak at the start lines up with the TSS for ENSRNOG00000020624 (pos: 186230379). The second, smaller peak could be another TSS.</p>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ENSRNOG00000058006</span></span>
<span id="cb19-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr16'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9700514</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9705368</span>).resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>)</span>
<span id="cb19-3">tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb19-4">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb19-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample:</span>
<span id="cb19-6">    tracks[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>][individual][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb19-7">plot_tracks(tracks, target_interval)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain_plots-at-TSS/index_files/figure-html/cell-17-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>The TSS for ENSRNOG00000058006 is at the end (9705368), which is roughly the peak in the plot. In summary, two out of three genes have CAGE peaks where we expected at the TSS.</p>
<p>This probably means Enformer is correctly identifying TSS, and the low CAGE values around the TSS for the first gene indicate that ENSRNOG00000001342 is not expressed in brain tissue.</p>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain_plots-at-TSS/index.html</guid>
  <pubDate>Fri, 04 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>First attempt of comparing predicted vs observed gene expression</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-03-comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_156512/1612639889.py:5: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000060045'</span>]</span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(obs_gene_expr.loc[gene_list])</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">pred_vs_obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb3-6">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb3-7">    pred_vs_obs[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> compute_tss_bin(output_window_coords_resized, tss_position, output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>, bin_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, rc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb4-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Computes the bin index of the enformer output bin containing the TSS</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Inputs:</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_window_coords_resized: Kipoiseq interval for the output window of Enformer, should already be resized to the model output window size</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_position: absolute location of TSS</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_length: Length of output window in base pairs</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    bin_size: Length of output bins in base pairs</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Outputs:</span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_bin: Index of bin containing TSS</span></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb4-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb4-13">        relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(tss_position) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_window_coords_resized.start)</span>
<span id="cb4-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb4-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position)</span></span>
<span id="cb4-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(output_window_coords_resized.start)</span></span>
<span id="cb4-17">        sys.exit()</span>
<span id="cb4-18"></span>
<span id="cb4-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> output_length:</span>
<span id="cb4-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position, "appears to be out of bounds for output window: ",output_window_coords_resized)</span></span>
<span id="cb4-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> </span>
<span id="cb4-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-23">        center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> bin_length</span>
<span id="cb4-24"></span>
<span id="cb4-25">        </span>
<span id="cb4-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> rc:</span>
<span id="cb4-27">            number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin_length)</span>
<span id="cb4-28">            new_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> center</span>
<span id="cb4-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(new_center)</span></span>
<span id="cb4-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,new_center,new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb4-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(center)</span></span>
<span id="cb4-33">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,center,center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(annot_df.loc[gene_list])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                            geneSymbol chromosome      start        end  \
geneId                                                                    
ENSRNOG00000001342  ENSRNOG00000001342         12   33261476   33293932   
ENSRNOG00000020624              Acadsb          1  186188987  186230379   
ENSRNOG00000058006                Sncg         16    9700514    9705368   
ENSRNOG00000060045               Pi4ka         11   83609069   83724080   

                   strand        tss  \
geneId                                 
ENSRNOG00000001342      -   33293932   
ENSRNOG00000020624      +  186188987   
ENSRNOG00000058006      -    9705368   
ENSRNOG00000060045      +   83609069   

                                                     description  hasEqtl  \
geneId                                                                      
ENSRNOG00000001342     cilia and flagella associated protein 251     True   
ENSRNOG00000020624  acyl-CoA dehydrogenase, short/branched chain     True   
ENSRNOG00000058006                              synuclein, gamma     True   
ENSRNOG00000060045           phosphatidylinositol 4-kinase alpha     True   

                    expr_BLA  expr_Brain  ...  sqtl_BLA  sqtl_Brain  sqtl_Eye  \
geneId                                    ...                                   
ENSRNOG00000001342      True        True  ...     False        True     False   
ENSRNOG00000020624      True        True  ...      True        True     False   
ENSRNOG00000058006      True        True  ...     False        True     False   
ENSRNOG00000060045      True        True  ...     False       False     False   

                    sqtl_IL  sqtl_LHb  sqtl_NAcc  sqtl_NAcc2  sqtl_OFC  \
geneId                                                                   
ENSRNOG00000001342    False     False      False       False     False   
ENSRNOG00000020624    False     False      False        True     False   
ENSRNOG00000058006    False     False      False       False     False   
ENSRNOG00000060045    False     False      False       False     False   

                    sqtl_PL  sqtl_PL2  
geneId                                 
ENSRNOG00000001342    False     False  
ENSRNOG00000020624    False      True  
ENSRNOG00000058006    False     False  
ENSRNOG00000060045    False     False  

[4 rows x 68 columns]</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_156512/3990301426.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating fasta files</span></span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># same as above, really</span></span>
<span id="cb8-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb8-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb8-5">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-26/enformer_predictions"</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb8-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb8-10">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-11">    interval_obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>], gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>])</span>
<span id="cb8-12">    tss_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compute_tss_bin(interval_obj.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>])</span>
<span id="cb8-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tss_bins <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb8-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Skipping"</span>, gene)</span>
<span id="cb8-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb8-16">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> pred_vs_obs[gene].index:</span>
<span id="cb8-18">        predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb8-19">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions[interval][()]</span>
<span id="cb8-20">        extra_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  [tss_bins[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tss_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [tss_bins[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb8-21">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[tss_bins, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb8-22">        pred_vs_obs[gene].loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span>
<span id="cb8-23"></span>
<span id="cb8-24">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000001342
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
ENSRNOG00000020624
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
[5.7819533  4.290507   7.8848658  0.10634203 0.05630142]
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
ENSRNOG00000058006
[1.4247483e+01 5.7383850e-02 1.2978141e-02 9.7031957e-03 1.5117653e-02]
[1.42411528e+01 5.73353358e-02 1.29730888e-02 9.69883148e-03
 1.51052885e-02]
[1.4247483e+01 5.7383850e-02 1.2978141e-02 9.7031957e-03 1.5117653e-02]
[1.4247483e+01 5.7383850e-02 1.2978141e-02 9.7031957e-03 1.5117653e-02]
[1.4247483e+01 5.7383850e-02 1.2978141e-02 9.7031957e-03 1.5117653e-02]
ENSRNOG00000060045
Skipping ENSRNOG00000060045</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pred_vs_obs)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'ENSRNOG00000001342':            observed  predicted
000789972A     7.53   0.005984
0007899884    11.35   0.005984
000789FF64     9.33   0.005984
00079298B1     9.88   0.005984
00079299B5      9.9   0.005984
...             ...        ...
00079FF7D6     7.63   0.005984
0007899826     2.83   0.005984
0007929917     8.29   0.005984
00077E82E3    10.05   0.005985
00078A18A7     6.73   0.005984

[340 rows x 2 columns], 'ENSRNOG00000020624':            observed  predicted
000789972A    44.43   4.095569
0007899884    50.12   4.093905
000789FF64    62.47   4.095569
00079298B1    64.97   4.095569
00079299B5    57.53   4.095569
...             ...        ...
00079FF7D6     53.3   4.093905
0007899826    52.88   4.093905
0007929917    54.19   4.093905
00077E82E3    74.91   4.095569
00078A18A7     50.0   4.093905

[340 rows x 2 columns], 'ENSRNOG00000058006':            observed  predicted
000789972A    75.75   0.026688
0007899884    98.29   0.026669
000789FF64     26.2   0.026688
00079298B1    91.46   0.026688
00079299B5     34.1   0.026688
...             ...        ...
00079FF7D6    80.28   0.026669
0007899826   133.57   0.026669
0007929917    59.49   0.026669
00077E82E3    43.07   0.026669
00078A18A7    45.07   0.026669

[340 rows x 2 columns], 'ENSRNOG00000060045':            observed  predicted
000789972A    87.16        0.0
0007899884     87.5        0.0
000789FF64    94.36        0.0
00079298B1    89.63        0.0
00079299B5    87.33        0.0
...             ...        ...
00079FF7D6    94.34        0.0
0007899826    85.75        0.0
0007929917    80.93        0.0
00077E82E3    80.16        0.0
00078A18A7    79.55        0.0

[340 rows x 2 columns]}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb12-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>]</span>
<span id="cb12-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>])</span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zscore</span>
<span id="cb12-6">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>]</span>
<span id="cb12-7">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]</span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb12-9">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb12-10"></span>
<span id="cb12-11"></span>
<span id="cb12-12"></span>
<span id="cb12-13"></span>
<span id="cb12-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb12-15">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb12-16">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb12-17">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb12-18"></span>
<span id="cb12-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb12-20">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>000789972A    44.43
0007899884    50.12
000789FF64    62.47
00079298B1    64.97
00079299B5    57.53
              ...  
00079FF7D6     53.3
0007899826    52.88
0007929917    54.19
00077E82E3    74.91
00078A18A7     50.0
Name: observed, Length: 340, dtype: object</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-03-comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression_files/figure-html/cell-8-output-2.png" class="img-fluid"></p>
</div>
</div>
<section id="how-we-could-improve-plots" class="level3">
<h3 class="anchored" data-anchor-id="how-we-could-improve-plots">How we could improve plots:</h3>
<ul>
<li>Use all 340 individuals (instead of the 80 that I moved to Box before polaris shut down)</li>
<li>Rerun predictions with sequences centered at TSS (instead of gene start and end)</li>
<li>The upside is that the Enformer predictions so far agree with basic expectations:
<ul>
<li>There is variation in predicted gene expression between individuals (although slim)</li>
<li>CAGE expression peaks around TSS and tapers off</li>
</ul></li>
</ul>
</section>
<section id="extra-plots" class="level3">
<h3 class="anchored" data-anchor-id="extra-plots">Extra Plots</h3>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predixcan = '/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/data-Github/rat-genomic-analysis/PTRS-Analysis/RatXcan/Results/Br_EN__predict.txt'</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pred_gene_expr = pd.read_csv(predixcan, sep="\t", header=0, index_col='IID')</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pred_gene_expr = pred_gene_expr.loc[individuals]</span></span>
<span id="cb14-4"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="112">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pred_gene_expr[[gene]].join(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>], how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            ENSRNOG00000060045  predicted
00077E90D8            1.286916   4.095569
00078997FE            0.011189   4.095569
00079FF7D6            2.644286   4.093905
00078A1A62            0.009481   4.093905
000792A3F9            2.646413   4.093905
...                        ...        ...
00078A072C            0.009487   4.093905
000792A07E            1.288204   4.095264
000792A420            1.370338   4.093905
00078997BF            0.009408   4.093905
00077E7666            0.010847   4.095569

[80 rows x 2 columns]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gene = 'ENSRNOG00000020624'</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df = pred_vs_obs[gene]</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df = pred_gene_expr[[gene]].join(df['predicted'], how = 'inner')</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(df)</span></span>
<span id="cb17-5"></span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from scipy.stats import zscore</span></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x = zscore(df[gene])</span></span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y = zscore(df['predicted'])</span></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # Create the dot plot</span></span>
<span id="cb17-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.scatter(x, y, color='blue', marker='o', s=100)</span></span>
<span id="cb17-11"></span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>NameError: name 'pred_gene_expr' is not defined</code></pre>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>]</span>
<span id="cb19-2"></span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zscore</span>
<span id="cb19-5">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>])</span>
<span id="cb19-6">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb19-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb19-8">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb19-9"></span>
<span id="cb19-10"></span>
<span id="cb19-11"></span>
<span id="cb19-12"></span>
<span id="cb19-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb19-14">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb19-15">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb19-16">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb19-17"></span>
<span id="cb19-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb19-19">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>TypeError: loop of ufunc does not support argument 0 of type numpy.float64 which has no callable sqrt method</code></pre>
</div>
</div>
<div class="cell" data-execution_count="90">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb21-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>]</span>
<span id="cb21-3"></span>
<span id="cb21-4"></span>
<span id="cb21-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zscore</span>
<span id="cb21-6">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>])</span>
<span id="cb21-7">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb21-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb21-9">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb21-10"></span>
<span id="cb21-11"></span>
<span id="cb21-12"></span>
<span id="cb21-13"></span>
<span id="cb21-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb21-15">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb21-16">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb21-17">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb21-18"></span>
<span id="cb21-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb21-20">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-03-comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression_files/figure-html/cell-13-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-03-comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression.html</guid>
  <pubDate>Thu, 03 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Enformer pipeline on 3 well-predicted genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-26-running-enformer-on-high-R2-rat-gene-target-intervals/index.html</link>
  <description><![CDATA[ 




<section id="select-well-predicted-genes" class="level3">
<h3 class="anchored" data-anchor-id="select-well-predicted-genes">Select Well-Predicted Genes</h3>
<p>We used R2 values from <a href="https://sabrina-mi.github.io/PTRS-Rat-Analysis/Br_EN_Validation">ElasticNet training</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-26-running-enformer-on-high-R2-rat-gene-target-intervals/WellPredGenes.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Well-Predicted Genes</figcaption>
</figure>
</div>
</section>
<section id="collect-gene-intervals" class="level3">
<h3 class="anchored" data-anchor-id="collect-gene-intervals">Collect Gene Intervals</h3>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2">gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb1-3">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000060045'</span>]</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_intervals(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb1-8">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb1-9">            row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot.loc[gene]</span>
<span id="cb1-10">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-11">            f.write(interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13">write_intervals(gene_list, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>)</span>
<span id="cb1-14"></span>
<span id="cb1-15">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000001342
ENSRNOG00000020624
ENSRNOG00000058006
ENSRNOG00000060045</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_71445/1580764274.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  gene_annot = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
</div>
</section>
<section id="concatenate-h5-outputs" class="level3">
<h3 class="anchored" data-anchor-id="concatenate-h5-outputs">Concatenate h5 outputs</h3>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">predictions_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-26/enformer_predictions"</span></span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> concatenate_predictions(predictions_dir, output_path):</span>
<span id="cb5-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_file:</span>
<span id="cb5-3">        individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb5-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb5-5">            group <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_file.create_group(individual)</span>
<span id="cb5-6"></span>
<span id="cb5-7">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(predictions_dir, individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype1"</span>)</span>
<span id="cb5-8">            filenames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>)</span>
<span id="cb5-9"></span>
<span id="cb5-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> filenames:</span>
<span id="cb5-11">                interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb5-12">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(os.path.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_file:</span>
<span id="cb5-13">                    group.create_dataset(interval, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_file[interval][()], shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>))</span>
<span id="cb5-14">            </span>
<span id="cb5-15"></span>
<span id="cb5-16"></span>
<span id="cb5-17">    </span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">concatenate_predictions(predictions_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/Br_enformer_predictions.h5"</span>)</span></code></pre></div>
</div>
</section>
<section id="calculate-predicted-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="calculate-predicted-gene-expression">Calculate predicted gene expression</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   temp_predictions = [prediction_1[:, 5110], prediction_2[:, 5110]] # CAGE predictions we are interested in</span></span>
<span id="cb7-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   individual_prediction[individual] = temp_predictions</span></span>
<span id="cb7-3"></span>
<span id="cb7-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   # Calculate TSS CAGE expression which correspond to column 5110 of the predictions above</span></span>
<span id="cb7-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   temp_list = list()</span></span>
<span id="cb7-6"></span>
<span id="cb7-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   pred_prepared_1 = prepare_for_quantify_prediction_per_TSS(predictions=prediction_1, gene=gene, tss_df=tss_dataframe)</span></span>
<span id="cb7-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   tss_predictions_1 = quantify_prediction_per_TSS(low_range = window_coords.start, TSS=pred_prepared_1['gene_TSS'], cage_predictions=pred_prepared_1['cage_predictions'])</span></span>
<span id="cb7-9"></span>
<span id="cb7-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   pred_prepared_2 = prepare_for_quantify_prediction_per_TSS(predictions=prediction_2, gene=gene, tss_df=tss_dataframe)</span></span>
<span id="cb7-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   tss_predictions_2 = quantify_prediction_per_TSS(low_range = window_coords.start, TSS=pred_prepared_2['gene_TSS'], cage_predictions=pred_prepared_2['cage_predictions'])</span></span>
<span id="cb7-12"></span>
<span id="cb7-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   temp_list.append(tss_predictions_1)</span></span>
<span id="cb7-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   temp_list.append(tss_predictions_2) # results here are a dictionary for each TSS for each haplotype</span></span>
<span id="cb7-15"></span>
<span id="cb7-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   individual_results[individual] = temp_list # save for the individual</span></span>
<span id="cb7-17"></span>
<span id="cb7-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gene_output[gene] = individual_results</span></span>
<span id="cb7-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gene_predictions[gene] = individual_prediction</span></span>
<span id="cb7-20"></span>
<span id="cb7-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> calculate_gene_expression(matrix, target_interval, tss):</span>
<span id="cb7-22">    window_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_interval.resize(SEQUENCE_LENGTH)</span>
<span id="cb7-23">    low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> window_coords.start</span>
<span id="cb7-24">    CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> matrix[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb7-25">    </span>
<span id="cb7-26">    bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">768</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)</span>
<span id="cb7-27">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> tss:</span>
<span id="cb7-29">      bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb7-30">      count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(cage_predictions)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb7-32">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb7-33">    cage_preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-26-running-enformer-on-high-R2-rat-gene-target-intervals/index.html</guid>
  <pubDate>Wed, 26 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Running the Enformer Pipeline locally</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-locally/run_locally.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">SCRIPTS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Github/shared_folder/enformer_pipeline/scripts/"</span> </span>
<span id="cb1-2">MODULES<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SCRIPTS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modules/"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Collecting cyvcf2
  Downloading cyvcf2-0.30.22-cp39-cp39-macosx_10_9_x86_64.whl (3.2 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.2/3.2 MB 5.3 MB/s eta 0:00:0000:0100:01
Requirement already satisfied: numpy in /Users/sabrinami/miniconda3/envs/tf/lib/python3.9/site-packages (from cyvcf2) (1.24.3)
Collecting coloredlogs (from cyvcf2)
  Using cached coloredlogs-15.0.1-py2.py3-none-any.whl (46 kB)
Requirement already satisfied: click in /Users/sabrinami/miniconda3/envs/tf/lib/python3.9/site-packages (from cyvcf2) (8.1.4)
Collecting humanfriendly&gt;=9.1 (from coloredlogs-&gt;cyvcf2)
  Downloading humanfriendly-10.0-py2.py3-none-any.whl (86 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 86.8/86.8 kB 1.4 MB/s eta 0:00:00a 0:00:01
Installing collected packages: humanfriendly, coloredlogs, cyvcf2
Successfully installed coloredlogs-15.0.1 cyvcf2-0.30.22 humanfriendly-10.0
Note: you may need to restart the kernel to use updated packages.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys, json, re</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating dataframes</span></span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##import parsl ## local runs, no parsl</span></span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> date</span>
<span id="cb3-6"></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># some locations and folders</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># whereis_script = os.path.dirname(__file__) #os.path.dirname(sys.argv[0]) # or os.path.dirname(__file__)</span></span>
<span id="cb3-10">script_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SCRIPTS</span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch_utils_path = os.path.join(script_path, 'modules')</span></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sys.path.append(batch_utils_path)</span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## MODULES should be the location of the modules</span></span>
<span id="cb3-15">sys.path.append(MODULES)</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> loggerUtils</span>
<span id="cb3-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> directives</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> enformer_predict(parameters):</span>
<span id="cb4-3"></span>
<span id="cb4-4">    params_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters</span>
<span id="cb4-5"></span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isabs(params_path):</span>
<span id="cb4-7">        params_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.abspath(params_path)</span>
<span id="cb4-8"></span>
<span id="cb4-9">    p_two <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(script_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'modules'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictUtils_two.py'</span>)</span>
<span id="cb4-10"></span>
<span id="cb4-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>params_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-12">        parameters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb4-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The rest of the script remains the same</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">        prediction_data_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_data_name'</span>]</span>
<span id="cb4-16">        prediction_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_id'</span>]</span>
<span id="cb4-17">        run_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> date.today().strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-18"></span>
<span id="cb4-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sub_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb4-20">            project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'project_dir'</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictions_folder'</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'predictions_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sub_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb4-22">            project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'project_dir'</span>], <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'predictions_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-24">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERROR - `sub_dir` argument must be a boolean, either true or false'</span>)</span>
<span id="cb4-25"></span>
<span id="cb4-26">        interval_list_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'interval_list_file'</span>]</span>
<span id="cb4-27">        predictions_log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(project_dir, parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictions_log_dir'</span>])</span>
<span id="cb4-28">        job_log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(project_dir, parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'write_log'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logdir'</span>])</span>
<span id="cb4-29">        n_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_regions"</span>]</span>
<span id="cb4-30">        batch_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'batch_regions'</span>])</span>
<span id="cb4-31">        use_parsl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'use_parsl'</span>]</span>
<span id="cb4-32">        parsl_parameters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'parsl_parameters'</span>]</span>
<span id="cb4-33">        sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence_source'</span>]</span>
<span id="cb4-34">        exclude_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exclude_regions"</span>]</span>
<span id="cb4-35">        reverse_complement <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reverse_complement"</span>]</span>
<span id="cb4-36">    </span>
<span id="cb4-37">        metadata_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'metadata_dir'</span>]</span>
<span id="cb4-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(metadata_dir):</span>
<span id="cb4-39">            os.makedirs(metadata_dir)</span>
<span id="cb4-40"></span>
<span id="cb4-41">        output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(project_dir, parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'output_dir'</span>])</span>
<span id="cb4-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(output_dir):</span>
<span id="cb4-43">            os.makedirs(output_dir)</span>
<span id="cb4-44"></span>
<span id="cb4-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_regions) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb4-46">            n_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_regions) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-48">            n_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n_regions) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(n_regions, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-49"></span>
<span id="cb4-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># personalized parameters </span></span>
<span id="cb4-51">        individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'individuals'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-52">        vcf_files_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vcf_files'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-53"></span>
<span id="cb4-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span>:</span>
<span id="cb4-55">             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use only the chromosomes that have been made available in the config file vcf params</span></span>
<span id="cb4-56">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Sequence source is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sequence_source<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. Using a reference genome + vcf files.'</span>)</span>
<span id="cb4-57">            chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(vcf_files_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'files'</span>].keys())</span>
<span id="cb4-58"></span>
<span id="cb4-59">            batch_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch_individuals"</span>]</span>
<span id="cb4-60">            n_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_individuals'</span>])</span>
<span id="cb4-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of chromosomes (if the sequence source is reference)</span></span>
<span id="cb4-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>:</span>
<span id="cb4-63">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Sequence source is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sequence_source<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. Using a reference genome.'</span>)</span>
<span id="cb4-64">            chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>)]</span>
<span id="cb4-65">            chromosomes.extend([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chrX'</span>])</span>
<span id="cb4-66"></span>
<span id="cb4-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> reverse_complement:</span>
<span id="cb4-68">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Predicting on reverse complements too'</span>)</span>
<span id="cb4-69"></span>
<span id="cb4-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # write the params_path to a config.json file in a predefined folder</span></span>
<span id="cb4-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tmp_config_data = {'params_path': params_path}</span></span>
<span id="cb4-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tmp_config_file = os.path.join(batch_utils_path, f'tmp_config_{prediction_data_name}_{prediction_id}.json')</span></span>
<span id="cb4-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with open(tmp_config_file, mode='w') as cj:</span></span>
<span id="cb4-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     json.dump(tmp_config_data, cj)</span></span>
<span id="cb4-75"></span>
<span id="cb4-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modify parsl parameters to add the working directory</span></span>
<span id="cb4-77">    parsl_parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'working_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> project_dir</span>
<span id="cb4-78"></span>
<span id="cb4-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(job_log_dir):</span>
<span id="cb4-80">        os.makedirs(job_log_dir)</span>
<span id="cb4-81"></span>
<span id="cb4-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set parsl directives</span></span>
<span id="cb4-83">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_parsl:</span>
<span id="cb4-84">        directives.parsl_directives(use_parsl, parsl_parameters)</span>
<span id="cb4-85">    </span>
<span id="cb4-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># importing this module does not work; best to execute it here</span></span>
<span id="cb4-87">    predict_utils_one <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(script_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'modules'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictUtils_one.py'</span>)</span>
<span id="cb4-88">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exec</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(predict_utils_one).read(), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>(), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>())</span>
<span id="cb4-89"></span>
<span id="cb4-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># decorate the prediction function with or without parsl</span></span>
<span id="cb4-91">    prediction_fxn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> return_prediction_function(use_parsl)</span>
<span id="cb4-92"></span>
<span id="cb4-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># determine what individuals to predict on and all that</span></span>
<span id="cb4-94">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span>:</span>
<span id="cb4-95">        </span>
<span id="cb4-96">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>):</span>
<span id="cb4-97">            id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals</span>
<span id="cb4-98">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb4-99">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'str'</span>)):</span>
<span id="cb4-100">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isfile(individuals):</span>
<span id="cb4-101">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb4-102">                    id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(individuals, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:]</span>
<span id="cb4-103">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> n_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-104">                    id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(individuals, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:(n_individuals)]</span>
<span id="cb4-105">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-106">                id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [individuals]</span>
<span id="cb4-107">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(id_list)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals to predict on'</span>)</span>
<span id="cb4-108"></span>
<span id="cb4-109">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>:</span>
<span id="cb4-110">        id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [prediction_data_name]</span>
<span id="cb4-111">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found one reference set named </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>id_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> to predict on'</span>)</span>
<span id="cb4-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'random'</span>:</span>
<span id="cb4-113">        id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [prediction_data_name]</span>
<span id="cb4-114">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Prediction will be on a randomly generated set'</span>)</span>
<span id="cb4-115"></span>
<span id="cb4-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set log files to be put in a folder and touch the log files per sample</span></span>
<span id="cb4-117">    prediction_logfiles_folder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_log_dir</span>
<span id="cb4-118">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(prediction_logfiles_folder):</span>
<span id="cb4-119">        os.makedirs(prediction_logfiles_folder)</span>
<span id="cb4-120">        </span>
<span id="cb4-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of intervals to be predicted on</span></span>
<span id="cb4-122">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(interval_list_file, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>).dropna(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#.drop_duplicates(subset=['region', 'sample', 'status', 'sequence_source'], keep='last')</span></span>
<span id="cb4-123">    list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:(n_regions)] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a list of queries</span></span>
<span id="cb4-124">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(list_of_regions)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> regions to be split into batches with at most </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>batch_regions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> regions in each batch.'</span>)</span>
<span id="cb4-125"></span>
<span id="cb4-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># filter the list of chromosomes to be compatible with the available regions</span></span>
<span id="cb4-127">    chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>([r.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> list_of_regions]))</span>
<span id="cb4-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(f'INFO - Chromosomes to predict on are: {chromosomes}')</span></span>
<span id="cb4-129"></span>
<span id="cb4-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># should some regions be excluded?</span></span>
<span id="cb4-131">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> exclude_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb4-132">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seach for the invalid_regions.csv file</span></span>
<span id="cb4-133">        exclude_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(job_log_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'invalid_queries.csv'</span>)</span>
<span id="cb4-134">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isfile(exclude_file):</span>
<span id="cb4-135">            exclude_these_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(exclude_file)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'region'</span>].tolist()</span>
<span id="cb4-136">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found regions to be excluded from the input regions.'</span>)</span>
<span id="cb4-137">            list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [l <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> list_of_regions <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> exclude_these_regions]  </span>
<span id="cb4-138">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Updated number of regions to predict on is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(list_of_regions)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-139">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-140">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - No regions to exclude yet. You either did not supply a file, this is the first run, or there are truly no regions to exclude'</span>)</span>
<span id="cb4-141">            exclude_these_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-142">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-143">        exclude_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-144">    </span>
<span id="cb4-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch the samples too</span></span>
<span id="cb4-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if you have 1000 individuals, it may be too much</span></span>
<span id="cb4-147">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(id_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:</span>
<span id="cb4-148">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> batch_individuals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb4-149">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(batch_individuals, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb4-150">                sample_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(generate_batch_n_elems(id_list, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> batch_individuals)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5 samples in each batch</span></span>
<span id="cb4-151">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - There are more than 10 individuals. Predictions will be done for every </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>batch_individuals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals.'</span>)</span>
<span id="cb4-152">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-153">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'ERROR - argument `batch_individuals` is not a str type. You supplied a </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(batch_individuals)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-154">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-155">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - You have multiple individuals/samples and have not supplied how to batch them. For efficient use of resources, use the `batch_individuals` argument.'</span>)</span>
<span id="cb4-156">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-157">        sample_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [id_list] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put the list in a list</span></span>
<span id="cb4-158">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - There seem to be just one sample i.e. </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_batches<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. No need to batch.'</span>)</span>
<span id="cb4-159"></span>
<span id="cb4-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to make this fast, pass multiple regions to one parsl app</span></span>
<span id="cb4-161">    sample_app_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-162">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sample_list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample_batches:</span>
<span id="cb4-163">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> chromosome <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chromosomes:</span>
<span id="cb4-164">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(chromosome)</span></span>
<span id="cb4-165">            chr_list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [r <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> list_of_regions <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> r.startswith(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_"</span>)]</span>
<span id="cb4-166">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span>:</span>
<span id="cb4-167">                chr_vcf_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(vcf_files_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'folder'</span>], vcf_files_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'files'</span>][chromosome])</span>
<span id="cb4-168">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>:</span>
<span id="cb4-169">                chr_vcf_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-170"></span>
<span id="cb4-171">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> chr_list_of_regions:</span>
<span id="cb4-172">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'WARNING - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> sites are not available.'</span>)</span>
<span id="cb4-173">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb4-174"></span>
<span id="cb4-175">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I want many regions to be put in a parsl app</span></span>
<span id="cb4-176">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(chr_list_of_regions) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> batch_regions:</span>
<span id="cb4-177">                region_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_batch_n_elems(chr_list_of_regions, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_regions) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch_regions total batches</span></span>
<span id="cb4-178">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-179">                region_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [chr_list_of_regions]</span>
<span id="cb4-180">            </span>
<span id="cb4-181">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-182">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> region_list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> region_batches:</span>
<span id="cb4-183">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(len(sample_list))</span></span>
<span id="cb4-184">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(f'{len(region_list)} regions in {chromosome} for {len(sample_list)} samples')</span></span>
<span id="cb4-185">                sample_app_futures.append(prediction_fxn(batch_regions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(region_list), samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sample_list), path_to_vcf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chr_vcf_file, batch_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count, script_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>script_path, output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir, prediction_logfiles_folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_logfiles_folder, sequence_source<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sequence_source, tmp_config_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params_path, p_two<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p_two))   </span>
<span id="cb4-186"></span>
<span id="cb4-187">                count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> </span>
<span id="cb4-188"></span>
<span id="cb4-189">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_parsl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb4-190">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Executing parsl futures for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_app_futures)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> parsl apps'</span>)</span>
<span id="cb4-191">        exec_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample_app_futures] </span>
<span id="cb4-192">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(sample_app_futures)</span></span>
<span id="cb4-193">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Finished predictions for all'</span>)</span>
<span id="cb4-194">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> use_parsl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb4-195">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Finished predictions for: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_app_futures<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> ...'</span>)</span>
<span id="cb4-196"></span>
<span id="cb4-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># just so I don't have to deal with having too many resources, I can request a small amount of resource</span></span>
<span id="cb4-198">    check_fxn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> return_check_function(use_parsl)</span>
<span id="cb4-199">    SUMMARY_FILE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(job_log_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.summary'</span>)</span>
<span id="cb4-200">    summary_exec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-201">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sample <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> id_list:</span>
<span id="cb4-202">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isfile(os.path.join(prediction_logfiles_folder, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_log.csv"</span>)):</span>
<span id="cb4-203">            summary_exec.append(check_fxn(sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample, predictions_folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir, log_folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_logfiles_folder, interval_list_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>interval_list_file, exclude_csv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exclude_file, sequence_source<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sequence_source))</span>
<span id="cb4-204"></span>
<span id="cb4-205">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_parsl:</span>
<span id="cb4-206">        summary_exec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> summary_exec]</span>
<span id="cb4-207">        parsl.clear() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># end parsl</span></span>
<span id="cb4-208"></span>
<span id="cb4-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#summary_exec = list(set(summary_exec))</span></span>
<span id="cb4-210">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, qr <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(summary_exec):</span>
<span id="cb4-211">        loggerUtils.write_logger(log_msg_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qr[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logtype'</span>], logfile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SUMMARY_FILE, message<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qr[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logmessage'</span>])</span>
<span id="cb4-212"></span>
<span id="cb4-213">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># regex the summary file and save the failed ones e.t.c to csv</span></span>
<span id="cb4-214">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- there is a better way to do this but for now, this will do</span></span>
<span id="cb4-215"></span>
<span id="cb4-216">    warning_pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"^\[WARNING.*For\s(\w+|\d+).*"</span></span>
<span id="cb4-217">    success_pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"^\[INFO.*For\s(\w+|\d+).*"</span></span>
<span id="cb4-218">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(SUMMARY_FILE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-219">        lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(f.readlines()))</span>
<span id="cb4-220">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(line)</span></span>
<span id="cb4-221">    warning_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [re.search(warning_pattern, l).group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lines <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> re.search(warning_pattern, l) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb4-222">    success_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [re.search(success_pattern, l).group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lines <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> re.search(success_pattern, l) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb4-223"></span>
<span id="cb4-224">    pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(warning_result))).to_csv(os.path.join(metadata_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.unsuccessful_predictions.csv'</span>), index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-225"></span>
<span id="cb4-226">    pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(success_result))).to_csv(os.path.join(metadata_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.successful_predictions.csv'</span>), index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-227"></span>
<span id="cb4-228">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># collect the successfule predictions</span></span>
<span id="cb4-229">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># successful_predictions = list(set([q['sample'] for q in summary_exec if q['logtype'] == 'INFO']))</span></span>
<span id="cb4-230">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unsuccessful_predictions = list(set([q['sample'] for q in summary_exec if q['logtype'] == 'WARNING']))</span></span>
<span id="cb4-231">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pd.DataFrame({'successful_predictions':successful_predictions}).to_csv(os.path.join(metadata_dir, f'{prediction_data_name}_{prediction_id}_{run_date}.successful_predictions.csv'), index=False, header=False)</span></span>
<span id="cb4-232">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pd.DataFrame({'unsuccessful_predictions':unsuccessful_predictions}).to_csv(os.path.join(metadata_dir, f'{prediction_data_name}_{prediction_id}_{run_date}.unsuccessful_predictions.csv'), index=False, header=False)</span></span>
<span id="cb4-233"></span>
<span id="cb4-234">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Check </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>SUMMARY_FILE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for a summary of the entire run.'</span>)</span>
<span id="cb4-235">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Check `</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metadata_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">` for successful and unsucessful predictions.'</span>)</span>
<span id="cb4-236"></span>
<span id="cb4-237">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># == After predictions are complete, a json file will be written out to help with aggregation</span></span>
<span id="cb4-238">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Writing `aggregation_config_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.json` file to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metadata_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-239">    agg_dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictions_folder'</span>: project_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer_prediction_path'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_logfiles_folder'</span>:prediction_logfiles_folder, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_data_name'</span>:prediction_data_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence_source'</span>: sequence_source, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run_date'</span>:run_date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_id'</span>:prediction_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'individuals'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'random'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> individuals, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_individuals'</span>:n_individuals <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>}</span>
<span id="cb4-240"></span>
<span id="cb4-241">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metadata_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/aggregation_config_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.json'</span>, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>)) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> wj:</span>
<span id="cb4-242">        json.dump(agg_dt, wj)</span>
<span id="cb4-243"></span>
<span id="cb4-244">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove temporatry config file</span></span>
<span id="cb4-245">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(f"INFO - Cleaning up: Removing temporary config file at {tmp_config_file}")</span></span>
<span id="cb4-246">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># os.remove(tmp_config_file)</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">enformer_predict(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run_locally.json'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>INFO - Sequence source is reference. Using a reference genome.
INFO - Found one reference set named reference_enformer_minimal to predict on
INFO - Found 2 regions to be split into batches with at most 5 regions in each batch.
INFO - No regions to exclude yet. You either did not supply a file, this is the first run, or there are truly no regions to exclude
INFO - There seem to be just one sample i.e. [['reference_enformer_minimal']]. No need to batch.
Using this config file: /Users/sabrinami/Github/shared_folder/enformer_pipeline/run_locally.json
Sample reference_enformer_minimal chr1_65419_71585 haplotype0 predictions are of the correct shape:  (896, 5313)
Sample reference_enformer_minimal chr1_65419_71585 haplotypes predictions have been saved.
Sample reference_enformer_minimal chr1_65419_71585 haplotypes predictions have been logged.
Sample reference_enformer_minimal chr1_450740_451678 haplotype0 predictions are of the correct shape:  (896, 5313)
Sample reference_enformer_minimal chr1_450740_451678 haplotypes predictions have been saved.
Sample reference_enformer_minimal chr1_450740_451678 haplotypes predictions have been logged.
[INFO] (time) to predict on batch 0 is 90.45835176800006
INFO - Finished predictions for: [[0, 0]] ...
INFO - Check /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/reference_enformer_minimal_some_regions/predictions_2023-07-24/job_logs/reference_enformer_minimal_some_regions_2023-07-24.summary for a summary of the entire run.
INFO - Check `/Users/sabrinami/Github/shared_folder/enformer_pipeline/metadata` for successful and unsucessful predictions.
INFO - Writing `aggregation_config_reference_enformer_minimal_some_regions.json` file to /Users/sabrinami/Github/shared_folder/enformer_pipeline/metadata</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>WARNING:kipoi_utils.external.related.mixins:Unrecognized fields for DataLoaderDescription: {'postprocessing'}. Available fields are {'info', 'output_schema', 'type', 'args', 'dependencies', 'writers', 'path', 'defined_as'}
WARNING:kipoi_utils.external.related.mixins:Unrecognized fields for DataLoaderDescription: {'postprocessing'}. Available fields are {'info', 'output_schema', 'type', 'args', 'dependencies', 'writers', 'path', 'defined_as'}
WARNING:kipoi_utils.external.related.mixins:Unrecognized fields for DataLoaderDescription: {'postprocessing'}. Available fields are {'info', 'output_schema', 'type', 'args', 'dependencies', 'writers', 'path', 'defined_as'}
[INFO: 07/24/2023 10:43:13 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_65419_71585]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_65419_71585]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[WARNING: 07/24/2023 10:44:42 AM] WARNING - For reference_enformer_minimal, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
WARNING:summary_log:WARNING - For reference_enformer_minimal, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb8-2">file_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/reference_enformer_minimal_some_regions/predictions_2023-07-24/enformer_predictions/reference_enformer_minimal/haplotype0/chr1_65419_71585_predictions.h5"</span></span>
<span id="cb8-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb8-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List all the groups and datasets in the file</span></span>
<span id="cb8-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Groups and Datasets in the HDF5 file:"</span>)</span>
<span id="cb8-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb8-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(name)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Groups and Datasets in the HDF5 file:
chr1_65419_71585</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb10-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 2: Access datasets and attributes within the file</span></span>
<span id="cb10-3">    dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr1_65419_71585"</span></span>
<span id="cb10-4">    dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>[dataset_name]</span>
<span id="cb10-5"></span>
<span id="cb10-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Read the entire dataset into a NumPy array</span></span>
<span id="cb10-7">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[()]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.shape)</span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(896, 5313)
[[0.5291589  0.5204935  0.57351285 ... 0.00935043 0.01473221 0.01198051]
 [0.65397567 0.6207656  0.7431343  ... 0.01434602 0.02783546 0.02128439]
 [0.5326947  0.5510576  0.767584   ... 0.01038613 0.03195343 0.0286333 ]
 ...
 [0.00713983 0.0077101  0.00634603 ... 0.00115762 0.01039891 0.00428226]
 [0.00585703 0.00676019 0.00490488 ... 0.0047263  0.0377146  0.01976843]
 [0.00355603 0.00391064 0.00305343 ... 0.00085077 0.00762693 0.00313292]]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">enformer_predict(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run_local_personalized.json'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>INFO - Sequence source is personalized. Using a reference genome + vcf files.
INFO - Found 2 individuals to predict on
INFO - Found 2 regions to be split into batches with at most 5 regions in each batch.
INFO - No regions to exclude yet. You either did not supply a file, this is the first run, or there are truly no regions to exclude
INFO - There seem to be just one sample i.e. [['HG00096', 'HG00097']]. No need to batch.
Using this config file: /Users/sabrinami/Github/shared_folder/enformer_pipeline/run_local_personalized.json
Sample HG00096 chr1_65419_71585 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_65419_71585 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_65419_71585 haplotypes predictions have been saved.
Sample HG00096 chr1_65419_71585 haplotypes predictions have been logged.
Sample HG00097 chr1_65419_71585 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_65419_71585 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_65419_71585 haplotypes predictions have been saved.
Sample HG00097 chr1_65419_71585 haplotypes predictions have been logged.
Sample HG00096 chr1_450740_451678 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_450740_451678 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_450740_451678 haplotypes predictions have been saved.
Sample HG00096 chr1_450740_451678 haplotypes predictions have been logged.
Sample HG00097 chr1_450740_451678 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_450740_451678 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_450740_451678 haplotypes predictions have been saved.
Sample HG00097 chr1_450740_451678 haplotypes predictions have been logged.
[INFO] (time) to predict on batch 0 is 1503.2652588659985
INFO - Finished predictions for: [[0, 0, 0, 0]] ...
INFO - Check /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-24/job_logs/personalized_enformer_minimal_some_regions_2023-07-24.summary for a summary of the entire run.
INFO - Check `/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline/metadata` for successful and unsucessful predictions.
INFO - Writing `aggregation_config_personalized_enformer_minimal_some_regions.json` file to /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline/metadata</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
/Users/sabrinami/Github/shared_folder/enformer_pipeline/scripts/modules/sequencesUtils.py:177: UserWarning: no intervals found for b'/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/Reference-Data/1000G/vcf_snps_only/ALL.chr1.shapeit2_integrated_SNPs_v2a_27022019.GRCh38.phased.vcf.gz' at chr1:-128105-265111
  variants_dictionary['positions'] = tuple(variant.POS for variant in cyvcf2_object(query))
[E::hts_parse_region] Coordinates must be &gt; 0
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00096, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00096, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
WARNING:summary_log:WARNING - For HG00096, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
WARNING:summary_log:WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb16-2">file_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-24/enformer_predictions/HG00096/haplotype1/chr1_65419_71585_predictions.h5"</span></span>
<span id="cb16-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb16-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List all the groups and datasets in the file</span></span>
<span id="cb16-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Groups and Datasets in the HDF5 file:"</span>)</span>
<span id="cb16-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb16-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(name)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Groups and Datasets in the HDF5 file:
chr1_65419_71585</code></pre>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb18-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 2: Access datasets and attributes within the file</span></span>
<span id="cb18-3">    dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr1_65419_71585"</span></span>
<span id="cb18-4">    dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>[dataset_name]</span>
<span id="cb18-5"></span>
<span id="cb18-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Read the entire dataset into a NumPy array</span></span>
<span id="cb18-7">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[()]</span>
<span id="cb18-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.shape)</span>
<span id="cb18-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(896, 5313)
[[0.5291589  0.5204935  0.57351285 ... 0.00935043 0.01473221 0.01198051]
 [0.65397567 0.6207656  0.7431343  ... 0.01434602 0.02783546 0.02128439]
 [0.5326947  0.5510576  0.767584   ... 0.01038613 0.03195343 0.0286333 ]
 ...
 [0.00713983 0.0077101  0.00634603 ... 0.00115762 0.01039891 0.00428226]
 [0.00585703 0.00676019 0.00490488 ... 0.0047263  0.0377146  0.01976843]
 [0.00355603 0.00391064 0.00305343 ... 0.00085077 0.00762693 0.00313292]]</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-locally/run_locally.html</guid>
  <pubDate>Tue, 25 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing Enformer results on an arbitrary interval in different positions relative to window coordinates</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-21-comparing-enformer-predictions-in-overlapping-intervals/results.html</link>
  <description><![CDATA[ 




<section id="check-predictions-for-a-single-individual-region-and-haplotype" class="level3">
<h3 class="anchored" data-anchor-id="check-predictions-for-a-single-individual-region-and-haplotype">Check predictions for a single individual, region, and haplotype</h3>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Libraries</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb2-2">    lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.readlines()</span>
<span id="cb2-3">    intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [line.strip().strip(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'"'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lines]</span>
<span id="cb2-4"></span>
<span id="cb2-5">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_test/predictions_folder/reference_enformer_minimal_chr2_region/predictions_2023-07-20/enformer_predictions/reference_enformer_minimal/haplotype0/"</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb3-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> intervals:</span>
<span id="cb3-3">        f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_predictions.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb3-4">        predictions[interval] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[interval][()]</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-21-comparing-enformer-predictions-in-overlapping-intervals/results.html</guid>
  <pubDate>Fri, 21 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Splitting Br VCF by chromosome</title>
  <dc:creator>Sabrina </dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/preparing-rat-vcfs-for-enformer/index.html</link>
  <description><![CDATA[ 




<section id="install-bcftools" class="level2">
<h2 class="anchored" data-anchor-id="install-bcftools">Install bcftools</h2>
<pre><code>module load gcc/11.2.0
cd Github
INSTALL_DIR=/home/s1mi/bin
git clone https://github.com/madler/zlib.git
cd zlib
./configure --prefix=$INSTALL_DIR
make
make install

cd ..
curl -L 'https://sourceforge.net/projects/bzip2/files/bzip2-1.0.6.tar.gz' &gt; bzip2-1.0.6.tar.gz
tar xvzf bzip2-1.0.6.tar.gz
cd bzip2-1.0.6
make -f Makefile-libbz2_so

cd ..
curl -L 'https://tukaani.org/xz/xz-5.2.4.tar.gz' &gt; xz-5.2.4.tar.gz
tar xvzf xz-5.2.4.tar.gz
cd xz-5.2.4
./configure --prefix=$INSTALL_DIR
make
make install

cd ..
git clone --recurse-submodules https://github.com/samtools/htslib.git
cd htslib/
autoconf
autoheader
./configure --prefix=$INSTALL_DIR CPPFLAGS="-I$INSTALL_DIR/include" LDFLAGS="-L$INSTALL_DIR/lib -Wl,-R$INSTALL_DIR/lib"
make
make install

cd ..
git clone https://github.com/samtools/bcftools.git
cd bcftools
autoconf
autoheader
./configure --prefix=$INSTALL_DIR CPPFLAGS="-I$INSTALL_DIR/include" LDFLAGS="-L$INSTALL_DIR/lib -Wl,-R$INSTALL_DIR/lib"
</code></pre>
</section>
<section id="split-vcf-by-chromosome" class="level2">
<h2 class="anchored" data-anchor-id="split-vcf-by-chromosome">Split VCF by chromosome</h2>
<p>First, by chromosome number:</p>
<pre><code>bcftools index -t /home/s1mi/enformer_rat_data/Brain.rn7.vcf.gz

# Get list of samples
bcftools query -l /home/s1mi/enformer_rat_data/Brain.rn7.vcf.gz &gt; /home/s1mi/enformer_rat_pipeline/metadata/individuals.txt


# Split VCF by chromosome
vcf_in=/home/s1mi/enformer_rat_data/Brain.rn7.vcf.gz

vcf_out_prefix=/home/s1mi/enformer_rat_data/BrainVCFs/chr

for i in {1..20}
do
    echo "Working on chromosome ${i}..."
    bcftools view ${vcf_in} --regions ${i} -o ${vcf_out_prefix}${i}.vcf.gz -Oz
done


# Index VCFs
for i in {1..20}
do
    echo "Indexing chromosome ${i}..."
    bcftools index -t /home/s1mi/enformer_rat_data/BrainVCFs/chr${i}.vcf.gz
done
</code></pre>
<p>Then separately for sex chromosomes:</p>
<pre><code>vcf_in=/home/s1mi/enformer_rat_data/Brain.rn7.vcf.gz
vcf_out_prefix=/home/s1mi/enformer_rat_data/BrainVCFs/chr

bcftools view ${vcf_in} --regions X -o ${vcf_out_prefix}X.vcf.gz -Oz
bcftools view ${vcf_in} --regions Y -o ${vcf_out_prefix}Y.vcf.gz -Oz

bcftools index -t /home/s1mi/enformer_rat_data/BrainVCFs/chrX.vcf.gz
bcftools index -t /home/s1mi/enformer_rat_data/BrainVCFs/chrY.vcf.gz
</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/preparing-rat-vcfs-for-enformer/index.html</guid>
  <pubDate>Thu, 20 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Annotate ENCODE targets table with system, cell, organ informations</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/annotating-targets-table/annotate_targets.html</link>
  <description><![CDATA[ 




<section id="import-library-and-read-in-targets-dataframe" class="level3">
<h3 class="anchored" data-anchor-id="import-library-and-read-in-targets-dataframe">Import library and read in targets dataframe</h3>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests, json</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download Targets</span></span>
<span id="cb2-2">targets_txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/calico/basenji/master/manuscripts/cross2020/targets_human.txt'</span></span>
<span id="cb2-3">df_targets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(targets_txt, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
</section>
<section id="query-encode-database" class="level3">
<h3 class="anchored" data-anchor-id="query-encode-database">Query ENCODE database</h3>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Force return from the server in JSON format</span></span>
<span id="cb3-2">headers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accept'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'application/json'</span>}</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_json(accession_id):</span>
<span id="cb3-5"></span>
<span id="cb3-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This URL locates the ENCODE biosample with accession number ENCBS000AAA</span></span>
<span id="cb3-7">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.encodeproject.org/files/'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> accession_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/?format=json'</span></span>
<span id="cb3-8">    </span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GET the object</span></span>
<span id="cb3-10">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(url, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>headers)</span>
<span id="cb3-11">    </span>
<span id="cb3-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the JSON response as a Python dictionary</span></span>
<span id="cb3-13">    encff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.json()</span>
<span id="cb3-14"></span>
<span id="cb3-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> encff</span></code></pre></div>
</div>
</section>
<section id="extract-fields" class="level3">
<h3 class="anchored" data-anchor-id="extract-fields">Extract fields</h3>
<p>We want to query system, cell, and organ information.</p>
<div class="cell" data-execution_count="60">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">sys_col, cell_col, org_col, dev_col, syn_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ([] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>):</span>
<span id="cb4-4">    accession_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_targets[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'identifier'</span>][i]</span>
<span id="cb4-5">    encff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_json(accession_id)</span>
<span id="cb4-6"></span>
<span id="cb4-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'biosample_ontology'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> encff.keys():</span>
<span id="cb4-8"></span>
<span id="cb4-9">        sys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> encff[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'biosample_ontology'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'system_slims'</span>]</span>
<span id="cb4-10">        sys_col.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>.join(sys) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sys) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span>)</span>
<span id="cb4-11"></span>
<span id="cb4-12">        cell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> encff[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'biosample_ontology'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_slims'</span>]</span>
<span id="cb4-13">        cell_col.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>.join(cell) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(cell) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span>)</span>
<span id="cb4-14"></span>
<span id="cb4-15">        org <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> encff[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'biosample_ontology'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'organ_slims'</span>]</span>
<span id="cb4-16">        org_col.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>.join(org) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(org) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span>)</span>
<span id="cb4-17"></span>
<span id="cb4-18">        dev <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> encff[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'biosample_ontology'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'developmental_slims'</span>]</span>
<span id="cb4-19">        dev_col.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>.join(dev) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(org) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span>)</span>
<span id="cb4-20">    </span>
<span id="cb4-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-22">        </span>
<span id="cb4-23">        sys_col.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span>)</span>
<span id="cb4-24">        cell_col.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span>)</span>
<span id="cb4-25">        org_col.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span>)</span>
<span id="cb4-26">        dev_col.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span>)</span>
<span id="cb4-27">        </span>
<span id="cb4-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(i)</span>
<span id="cb4-29"></span>
<span id="cb4-30"></span>
<span id="cb4-31"></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000</code></pre>
</div>
</div>
<div class="cell" data-execution_count="61">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(sys_col)</span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(cell_col)</span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(org_col)</span>
<span id="cb6-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(dev_col)</span>
<span id="cb6-5"></span>
<span id="cb6-6">df_targets[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'system'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sys_col</span>
<span id="cb6-7">df_targets[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_col</span>
<span id="cb6-8">df_targets [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'organ'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> org_col</span>
<span id="cb6-9">df_targets[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'developmental'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dev_col</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['central nervous system', 'central nervous system', 'NA', 'reproductive system', 'integumental system', 'integumental system', 'integumental system', 'respiratory system', 'integumental system', 'central nervous system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'NA', 'NA', 'NA', 'circulatory system', 'excretory system', 'reproductive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'circulatory system, reproductive system', 'NA', 'integumental system', 'integumental system', 'immune system', 'immune system', 'immune system', 'reproductive system', 'reproductive system', 'exocrine system, integumental system', 'central nervous system', 'integumental system', 'immune system', 'integumental system', 'skeletal system', 'musculature', 'exocrine system, integumental system', 'excretory system', 'respiratory system', 'integumental system', 'respiratory system', 'integumental system', 'digestive system', 'integumental system', 'circulatory system', 'central nervous system', 'reproductive system', 'immune system, skeletal system', 'immune system, skeletal system', 'skeletal system, immune system', 'digestive system', 'immune system', 'NA', 'immune system', 'immune system, skeletal system', 'integumental system', 'integumental system', 'immune system', 'immune system', 'immune system', 'immune system', 'NA', 'musculature, circulatory system', 'NA', 'NA', 'musculature, circulatory system', 'NA', 'central nervous system', 'central nervous system', 'central nervous system', 'reproductive system', 'central nervous system, circulatory system', 'central nervous system', 'central nervous system, circulatory system', 'circulatory system', 'circulatory system', 'musculature, circulatory system', 'sensory system', 'central nervous system, circulatory system', 'digestive system', 'digestive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'integumental system, reproductive system', 'reproductive system', 'digestive system', 'sensory system', 'immune system', 'integumental system, exocrine system', 'integumental system, exocrine system', 'circulatory system, integumental system', 'integumental system, circulatory system', 'integumental system, circulatory system', 'integumental system, immune system, circulatory system', 'immune system, circulatory system, integumental system', 'integumental system, circulatory system', 'circulatory system, respiratory system', 'circulatory system, respiratory system', 'NA', 'circulatory system', 'circulatory system', 'skeletal system', 'respiratory system', 'excretory system', 'excretory system', 'excretory system, circulatory system', 'sensory system', 'musculature', 'musculature', 'circulatory system, reproductive system', 'reproductive system', 'immune system', 'immune system', 'immune system', 'immune system', 'musculature', 'musculature', 'reproductive system', 'central nervous system', 'exocrine system, integumental system', 'integumental system, exocrine system', 'exocrine system, integumental system', 'immune system', 'skeletal system, immune system', 'central nervous system', 'respiratory system', 'integumental system', 'integumental system, reproductive system', 'integumental system', 'respiratory system', 'reproductive system', 'endocrine system', 'reproductive system', 'integumental system', 'excretory system', 'respiratory system', 'central nervous system', 'central nervous system', 'musculature', 'integumental system, exocrine system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'sensory system', 'respiratory system', 'respiratory system', 'NA', 'integumental system', 'musculature', 'respiratory system', 'central nervous system', 'integumental system', 'respiratory system', 'integumental system', 'musculature', 'integumental system, reproductive system', 'excretory system', 'central nervous system', 'excretory system', 'NA', 'excretory system', 'immune system', 'immune system', 'excretory system', 'central nervous system', 'musculature', 'musculature', 'reproductive system', 'integumental system, reproductive system', 'excretory system', 'excretory system', 'digestive system', 'excretory system', 'immune system', 'digestive system', 'reproductive system', 'musculature', 'endocrine system', 'circulatory system', 'digestive system', 'musculature', 'circulatory system', 'excretory system', 'circulatory system', 'musculature', 'respiratory system', 'circulatory system', 'endocrine system', 'excretory system', 'digestive system', 'digestive system', 'skeletal system', 'integumental system', 'excretory system', 'digestive system', 'excretory system', 'NA', 'excretory system', 'musculature', 'NA', 'digestive system', 'central nervous system', 'digestive system', 'excretory system', 'NA', 'immune system', 'sensory system', 'excretory system', 'reproductive system', 'digestive system', 'digestive system', 'digestive system', 'excretory system', 'excretory system', 'respiratory system', 'musculature', 'respiratory system', 'central nervous system', 'NA', 'endocrine system, exocrine system, digestive system', 'integumental system, reproductive system', 'NA', 'digestive system', 'circulatory system', 'excretory system', 'central nervous system', 'endocrine system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'immune system, endocrine system', 'respiratory system', 'NA', 'musculature', 'immune system', 'musculature', 'musculature', 'musculature', 'digestive system', 'musculature', 'circulatory system', 'excretory system', 'integumental system', 'NA', 'NA', 'excretory system', 'integumental system', 'central nervous system', 'digestive system', 'circulatory system', 'immune system', 'endocrine system', 'musculature', 'musculature', 'immune system, digestive system', 'NA', 'digestive system', 'digestive system', 'respiratory system', 'integumental system', 'digestive system', 'integumental system', 'musculature', 'endocrine system', 'central nervous system', 'respiratory system', 'NA', 'integumental system, exocrine system', 'musculature', 'reproductive system', 'reproductive system', 'NA', 'digestive system', 'immune system', 'integumental system, reproductive system', 'excretory system', 'excretory system', 'excretory system', 'excretory system', 'integumental system, reproductive system', 'excretory system', 'respiratory system', 'respiratory system', 'excretory system', 'excretory system', 'musculature', 'immune system', 'musculature', 'skeletal system', 'NA', 'reproductive system', 'central nervous system', 'circulatory system', 'immune system', 'digestive system', 'musculature', 'musculature', 'excretory system', 'musculature', 'musculature', 'respiratory system', 'immune system', 'excretory system', 'musculature', 'circulatory system', 'central nervous system', 'musculature', 'circulatory system', 'immune system, skeletal system', 'immune system', 'musculature', 'excretory system', 'central nervous system', 'respiratory system', 'circulatory system', 'excretory system', 'immune system', 'immune system, digestive system', 'integumental system', 'NA', 'excretory system', 'circulatory system', 'excretory system', 'immune system, endocrine system', 'central nervous system', 'central nervous system', 'musculature', 'musculature', 'musculature', 'musculature', 'integumental system', 'central nervous system', 'NA', 'endocrine system, exocrine system, digestive system', 'excretory system', 'circulatory system', 'digestive system', 'immune system', 'integumental system', 'immune system', 'immune system', 'central nervous system', 'integumental system', 'integumental system, reproductive system', 'musculature', 'integumental system, exocrine system', 'digestive system', 'circulatory system', 'peripheral nervous system', 'NA', 'musculature', 'circulatory system', 'immune system', 'excretory system', 'endocrine system', 'NA', 'central nervous system', 'NA', 'excretory system', 'immune system', 'skeletal system, immune system', 'musculature', 'reproductive system', 'digestive system', 'skeletal system', 'excretory system', 'reproductive system', 'NA', 'reproductive system', 'excretory system', 'musculature', 'musculature', 'integumental system, reproductive system', 'respiratory system', 'respiratory system', 'digestive system', 'respiratory system', 'skeletal system', 'immune system', 'musculature', 'immune system, digestive system', 'immune system', 'respiratory system', 'digestive system', 'immune system', 'digestive system', 'respiratory system', 'immune system', 'sensory system', 'central nervous system', 'musculature', 'respiratory system', 'respiratory system', 'respiratory system', 'immune system', 'respiratory system', 'NA', 'central nervous system', 'immune system', 'reproductive system', 'excretory system', 'circulatory system', 'digestive system', 'digestive system', 'central nervous system', 'respiratory system', 'digestive system', 'central nervous system', 'digestive system', 'NA', 'musculature', 'excretory system', 'musculature', 'reproductive system', 'digestive system', 'NA', 'excretory system', 'NA', 'digestive system', 'musculature, skeletal system', 'circulatory system', 'circulatory system', 'excretory system', 'respiratory system', 'immune system, endocrine system', 'reproductive system', 'excretory system', 'immune system, endocrine system', 'reproductive system', 'reproductive system', 'excretory system', 'reproductive system', 'reproductive system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'integumental system', 'sensory system, digestive system', 'integumental system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'NA', 'immune system', 'digestive system', 'immune system', 'central nervous system', 'reproductive system', 'excretory system', 'respiratory system', 'central nervous system', 'musculature', 'respiratory system', 'excretory system', 'NA', 'immune system', 'digestive system', 'central nervous system', 'NA', 'endocrine system', 'NA', 'excretory system', 'excretory system', 'digestive system', 'immune system', 'central nervous system', 'musculature', 'excretory system', 'immune system, skeletal system', 'skeletal system', 'sensory system', 'musculature', 'integumental system', 'central nervous system', 'digestive system', 'respiratory system', 'immune system', 'immune system', 'excretory system', 'respiratory system', 'respiratory system', 'immune system', 'digestive system', 'immune system', 'excretory system', 'integumental system', 'reproductive system', 'central nervous system', 'musculature', 'excretory system', 'endocrine system', 'immune system', 'circulatory system', 'digestive system', 'integumental system', 'excretory system', 'immune system', 'NA', 'central nervous system', 'immune system, digestive system', 'respiratory system', 'immune system, endocrine system', 'immune system', 'digestive system', 'reproductive system', 'immune system', 'endocrine system', 'endocrine system', 'musculature', 'musculature', 'immune system', 'circulatory system', 'central nervous system', 'reproductive system', 'NA', 'immune system', 'immune system', 'integumental system, reproductive system', 'digestive system', 'endocrine system', 'reproductive system', 'NA', 'reproductive system', 'immune system', 'circulatory system', 'immune system, skeletal system', 'circulatory system', 'integumental system, exocrine system', 'excretory system', 'musculature', 'NA', 'peripheral nervous system', 'excretory system', 'sensory system, digestive system', 'digestive system', 'excretory system', 'digestive system', 'excretory system', 'excretory system', 'integumental system', 'central nervous system', 'excretory system', 'circulatory system', 'immune system, endocrine system', 'digestive system', 'sensory system', 'digestive system', 'excretory system', 'musculature', 'central nervous system', 'exocrine system, integumental system', 'digestive system', 'excretory system', 'NA', 'digestive system', 'digestive system', 'reproductive system', 'respiratory system', 'circulatory system', 'skeletal system', 'central nervous system', 'NA', 'excretory system', 'digestive system', 'musculature, skeletal system', 'sensory system', 'NA', 'respiratory system', 'central nervous system', 'musculature', 'excretory system', 'central nervous system', 'immune system, endocrine system', 'immune system', 'musculature, circulatory system', 'immune system', 'NA', 'respiratory system', 'respiratory system', 'respiratory system', 'endocrine system', 'excretory system', 'immune system, digestive system', 'excretory system', 'circulatory system', 'reproductive system', 'NA', 'circulatory system', 'endocrine system', 'digestive system', 'central nervous system', 'respiratory system', 'digestive system', 'musculature', 'integumental system', 'endocrine system', 'endocrine system', 'musculature', 'excretory system', 'excretory system', 'digestive system', 'excretory system', 'excretory system', 'musculature', 'immune system, endocrine system', 'immune system', 'endocrine system', 'central nervous system', 'circulatory system', 'excretory system', 'excretory system', 'circulatory system', 'NA', 'immune system', 'excretory system', 'respiratory system', 'digestive system', 'digestive system', 'excretory system', 'central nervous system', 'respiratory system', 'musculature', 'NA', 'musculature', 'respiratory system', 'excretory system', 'digestive system', 'NA', 'musculature, digestive system', 'digestive system', 'circulatory system', 'central nervous system', 'central nervous system', 'respiratory system', 'musculature', 'musculature', 'excretory system', 'respiratory system', 'excretory system', 'immune system, digestive system', 'excretory system', 'reproductive system', 'reproductive system', 'respiratory system', 'immune system, endocrine system', 'central nervous system', 'NA', 'respiratory system', 'NA', 'digestive system', 'central nervous system', 'excretory system', 'skeletal system', 'reproductive system', 'digestive system', 'excretory system', 'respiratory system', 'central nervous system', 'excretory system, circulatory system', 'reproductive system', 'excretory system', 'circulatory system', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'exocrine system, integumental system', 'exocrine system, integumental system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'reproductive system, circulatory system', 'reproductive system, circulatory system', 'reproductive system, circulatory system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'reproductive system, circulatory system', 'reproductive system, circulatory system', 'integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'NA', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'musculature', 'musculature', 'musculature', 'musculature', 'musculature', 'musculature', 'musculature', 'musculature', 'NA', 'musculature', 'musculature', 'musculature', 'musculature', 'musculature', 'musculature', 'musculature', 'musculature', 'musculature', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'musculature', 'central nervous system', 'central nervous system', 'central nervous system', 'immune system', 'immune system', 'musculature', 'musculature', 'musculature', 'reproductive system', 'immune system', 'immune system', 'immune system', 'skeletal system', 'skeletal system', 'skeletal system', 'skeletal system', 'skeletal system', 'skeletal system', 'integumental system', 'integumental system', 'integumental system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'immune system', 'NA', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'NA', 'musculature', 'reproductive system', 'reproductive system', 'skeletal system', 'skeletal system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'musculature', 'endocrine system, exocrine system, digestive system', 'integumental system', 'integumental system', 'integumental system', 'respiratory system', 'respiratory system', 'respiratory system', 'central nervous system', 'central nervous system', 'immune system', 'immune system', 'exocrine system, integumental system', 'reproductive system, circulatory system', 'reproductive system, circulatory system', 'integumental system', 'respiratory system', 'skeletal system', 'respiratory system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'respiratory system', 'respiratory system', 'immune system', 'reproductive system, circulatory system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'skeletal system', 'musculature', 'immune system', 'NA', 'immune system', 'respiratory system', 'NA', 'NA', 'NA', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'immune system', 'NA', 'NA', 'immune system', 'immune system', 'immune system', 'immune system', 'NA', 'NA', 'NA', 'immune system', 'respiratory system', 'respiratory system', 'immune system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'immune system', 'NA', 'NA', 'NA', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'NA', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'respiratory system', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'reproductive system', 'reproductive system', 'NA', 'reproductive system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'central nervous system', 'respiratory system', 'exocrine system, integumental system', 'respiratory system', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'NA', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'reproductive system', 'immune system', 'NA', 'NA', 'immune system', 'immune system', 'exocrine system, integumental system', 'reproductive system', 'NA', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'exocrine system, integumental system', 'immune system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'central nervous system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'immune system', 'central nervous system', 'immune system', 'immune system', 'NA', 'digestive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'immune system', 'immune system', 'exocrine system, integumental system', 'immune system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'NA', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'immune system', 'NA', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'central nervous system', 'central nervous system', 'central nervous system', 'central nervous system', 'central nervous system', 'respiratory system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'central nervous system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'reproductive system, circulatory system', 'reproductive system, circulatory system', 'exocrine system, integumental system', 'reproductive system', 'central nervous system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'central nervous system', 'respiratory system', 'respiratory system', 'respiratory system', 'reproductive system', 'immune system', 'immune system', 'immune system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'immune system', 'immune system', 'immune system', 'immune system', 'respiratory system', 'respiratory system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'digestive system', 'digestive system', 'central nervous system', 'exocrine system, integumental system', 'immune system', 'immune system', 'immune system', 'central nervous system, peripheral nervous system', 'immune system', 'exocrine system, integumental system', 'immune system', 'immune system', 'immune system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'NA', 'NA', 'reproductive system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'central nervous system', 'respiratory system', 'integumental system', 'immune system, digestive system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'respiratory system', 'integumental system', 'integumental system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'integumental system', 'integumental system', 'digestive system', 'digestive system', 'integumental system', 'integumental system', 'circulatory system', 'circulatory system', 'central nervous system', 'central nervous system', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'digestive system', 'digestive system', 'digestive system', 'digestive system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'musculature, circulatory system', 'NA', 'musculature, circulatory system', 'NA', 'NA', 'musculature, circulatory system', 'musculature, circulatory system', 'NA', 'NA', 'musculature, circulatory system', 'NA', 'musculature, circulatory system', 'NA', 'NA', 'NA', 'central nervous system', 'central nervous system', 'central nervous system', 'central nervous system', 'circulatory system, central nervous system', 'circulatory system, central nervous system', 'circulatory system', 'circulatory system', 'circulatory system', 'musculature, circulatory system', 'musculature, circulatory system', 'circulatory system, central nervous system', 'circulatory system, central nervous system', 'digestive system', 'digestive system', 'digestive system', 'digestive system', 'excretory system', 'reproductive system', 'reproductive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'reproductive system, integumental system', 'reproductive system, integumental system', 'reproductive system', 'reproductive system', 'immune system', 'immune system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'circulatory system', 'circulatory system', 'respiratory system', 'respiratory system', 'excretory system', 'excretory system', 'excretory system', 'excretory system', 'sensory system', 'sensory system', 'reproductive system, circulatory system', 'reproductive system, circulatory system', 'reproductive system, circulatory system', 'reproductive system', 'reproductive system', 'immune system', 'immune system', 'immune system', 'immune system', 'reproductive system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'immune system', 'immune system', 'immune system, skeletal system', 'immune system, skeletal system', 'reproductive system, integumental system', 'reproductive system, integumental system', 'integumental system', 'integumental system', 'respiratory system', 'respiratory system', 'endocrine system', 'excretory system', 'excretory system', 'respiratory system', 'respiratory system', 'respiratory system', 'central nervous system', 'central nervous system', 'central nervous system', 'central nervous system', 'musculature', 'sensory system', 'sensory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'respiratory system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'central nervous system', 'central nervous system', 'central nervous system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'immune system', 'NA', 'NA', 'digestive system', 'digestive system', 'excretory system', 'excretory system', 'reproductive system, circulatory system', 'reproductive system, circulatory system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'reproductive system', 'endocrine system', 'endocrine system', 'endocrine system', 'endocrine system', 'circulatory system', 'circulatory system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system, skeletal system', 'immune system, skeletal system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'excretory system', 'excretory system', 'immune system', 'endocrine system', 'endocrine system', 'central nervous system', 'central nervous system', 'central nervous system', 'central nervous system', 'central nervous system, peripheral nervous system', 'respiratory system', 'excretory system', 'respiratory system', 'musculature, circulatory system', 'circulatory system', 'digestive system', 'musculature', 'respiratory system', 'digestive system', 'musculature, digestive system', 'NA', 'digestive system', 'immune system', 'excretory system', 'respiratory system', 'NA', 'digestive system', 'immune system', 'immune system', 'immune system, digestive system', 'immune system', 'NA', 'excretory system', 'NA', 'exocrine system, integumental system', 'immune system', 'integumental system', 'endocrine system, exocrine system, digestive system', 'immune system', 'excretory system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'immune system, skeletal system', 'digestive system', 'central nervous system', 'integumental system', 'immune system', 'immune system', 'immune system', 'excretory system', 'immune system', 'immune system', 'NA', 'reproductive system, integumental system', 'endocrine system', 'immune system', 'central nervous system', 'immune system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'immune system', 'central nervous system', 'exocrine system, integumental system', 'immune system', 'excretory system', 'immune system', 'exocrine system, integumental system', 'immune system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'NA', 'excretory system', 'reproductive system, integumental system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'immune system', 'central nervous system', 'excretory system', 'central nervous system', 'circulatory system', 'musculature', 'immune system', 'digestive system', 'immune system', 'musculature, digestive system', 'integumental system', 'reproductive system, integumental system', 'respiratory system', 'immune system', 'reproductive system', 'excretory system', 'central nervous system', 'exocrine system, integumental system', 'circulatory system', 'reproductive system', 'immune system', 'immune system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'immune system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'integumental system', 'digestive system', 'respiratory system', 'immune system', 'endocrine system', 'immune system', 'endocrine system, exocrine system, digestive system', 'integumental system', 'endocrine system', 'digestive system', 'NA', 'NA', 'NA', 'NA', 'musculature, digestive system', 'central nervous system', 'immune system', 'NA', 'NA', 'reproductive system', 'immune system', 'integumental system', 'endocrine system, exocrine system, digestive system', 'immune system', 'respiratory system', 'NA', 'immune system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'digestive system', 'central nervous system', 'respiratory system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'excretory system', 'central nervous system', 'central nervous system', 'digestive system', 'exocrine system, integumental system', 'immune system', 'immune system', 'excretory system', 'NA', 'central nervous system, peripheral nervous system', 'immune system', 'integumental system', 'digestive system', 'reproductive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'NA', 'immune system', 'NA', 'digestive system', 'reproductive system', 'NA', 'immune system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'immune system', 'endocrine system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'respiratory system', 'digestive system', 'digestive system', 'NA', 'respiratory system', 'exocrine system, integumental system', 'digestive system', 'NA', 'immune system', 'exocrine system, integumental system', 'central nervous system', 'digestive system', 'digestive system', 'central nervous system', 'immune system', 'immune system', 'exocrine system, digestive system', 'immune system', 'immune system', 'integumental system', 'endocrine system', 'digestive system', 'exocrine system, integumental system', 'NA', 'endocrine system', 'respiratory system', 'central nervous system', 'NA', 'excretory system', 'excretory system', 'immune system', 'circulatory system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'reproductive system', 'exocrine system, integumental system', 'respiratory system', 'reproductive system, integumental system', 'respiratory system', 'circulatory system', 'immune system', 'respiratory system', 'central nervous system', 'digestive system', 'central nervous system', 'circulatory system', 'central nervous system', 'excretory system', 'musculature', 'endocrine system, exocrine system, digestive system', 'immune system, skeletal system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'immune system', 'immune system', 'immune system', 'digestive system', 'circulatory system', 'reproductive system', 'musculature, digestive system', 'central nervous system', 'excretory system', 'immune system', 'immune system', 'reproductive system, integumental system', 'digestive system', 'circulatory system', 'excretory system', 'immune system, skeletal system', 'excretory system', 'central nervous system', 'excretory system', 'immune system', 'immune system', 'immune system', 'immune system, digestive system', 'digestive system', 'immune system', 'reproductive system, integumental system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system, skeletal system', 'NA', 'digestive system', 'circulatory system', 'digestive system', 'central nervous system', 'musculature, digestive system', 'immune system', 'immune system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'immune system', 'endocrine system', 'immune system', 'circulatory system', 'immune system, digestive system', 'immune system', 'musculature', 'endocrine system, exocrine system, digestive system', 'respiratory system', 'digestive system', 'immune system', 'musculature, digestive system', 'NA', 'exocrine system, integumental system', 'reproductive system, integumental system', 'immune system', 'musculature', 'excretory system', 'immune system', 'musculature, digestive system', 'immune system', 'immune system', 'digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'excretory system', 'digestive system', 'central nervous system', 'immune system', 'endocrine system', 'excretory system', 'exocrine system, integumental system', 'musculature, digestive system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'integumental system', 'exocrine system, integumental system', 'excretory system', 'musculature, digestive system', 'NA', 'reproductive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'excretory system', 'immune system', 'musculature', 'NA', 'excretory system', 'reproductive system, integumental system', 'central nervous system', 'immune system', 'respiratory system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'musculature', 'digestive system', 'immune system', 'excretory system', 'immune system', 'central nervous system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'musculature', 'NA', 'immune system', 'central nervous system', 'immune system, digestive system', 'musculature', 'excretory system', 'immune system', 'endocrine system', 'digestive system', 'immune system', 'circulatory system', 'immune system', 'reproductive system, integumental system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'exocrine system, integumental system', 'circulatory system', 'immune system', 'integumental system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'endocrine system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'reproductive system', 'central nervous system', 'immune system', 'central nervous system', 'exocrine system, integumental system', 'central nervous system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'reproductive system, integumental system', 'immune system', 'endocrine system, exocrine system, digestive system', 'NA', 'immune system', 'immune system, digestive system', 'NA', 'exocrine system, integumental system', 'musculature, digestive system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'reproductive system', 'central nervous system', 'immune system', 'digestive system', 'digestive system', 'reproductive system, integumental system', 'reproductive system', 'circulatory system', 'central nervous system', 'central nervous system', 'respiratory system', 'immune system', 'respiratory system', 'integumental system', 'central nervous system, peripheral nervous system', 'endocrine system, exocrine system, digestive system', 'immune system', 'excretory system', 'central nervous system', 'central nervous system', 'excretory system', 'exocrine system, integumental system', 'NA', 'central nervous system', 'immune system', 'exocrine system, integumental system', 'central nervous system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'musculature', 'circulatory system', 'digestive system', 'NA', 'immune system', 'musculature', 'immune system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'integumental system', 'digestive system', 'digestive system', 'reproductive system', 'exocrine system, integumental system', 'excretory system', 'exocrine system, integumental system', 'NA', 'immune system', 'NA', 'NA', 'NA', 'immune system', 'immune system', 'immune system', 'excretory system', 'immune system', 'immune system', 'central nervous system', 'reproductive system', 'reproductive system', 'excretory system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'reproductive system', 'immune system', 'immune system', 'central nervous system', 'musculature', 'reproductive system', 'NA', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'musculature, digestive system', 'digestive system', 'musculature', 'integumental system', 'central nervous system', 'excretory system', 'excretory system', 'reproductive system', 'digestive system', 'integumental system', 'musculature', 'digestive system', 'immune system', 'digestive system', 'central nervous system', 'musculature', 'circulatory system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'central nervous system', 'integumental system', 'respiratory system', 'integumental system', 'NA', 'immune system', 'peripheral nervous system', 'integumental system', 'immune system', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'digestive system', 'immune system', 'peripheral nervous system', 'immune system', 'reproductive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'immune system', 'exocrine system, integumental system', 'immune system', 'NA', 'immune system, digestive system', 'musculature', 'digestive system', 'NA', 'immune system', 'immune system', 'immune system', 'immune system', 'NA', 'immune system', 'excretory system', 'respiratory system', 'immune system', 'immune system', 'digestive system', 'integumental system', 'circulatory system', 'immune system', 'immune system', 'immune system', 'excretory system', 'immune system', 'musculature, digestive system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'immune system', 'digestive system', 'digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'NA', 'reproductive system, integumental system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'reproductive system, integumental system', 'immune system', 'integumental system', 'immune system', 'circulatory system', 'exocrine system, integumental system', 'central nervous system', 'immune system', 'digestive system', 'NA', 'integumental system', 'exocrine system, integumental system', 'circulatory system', 'digestive system', 'musculature, digestive system', 'immune system', 'endocrine system', 'exocrine system, integumental system', 'immune system', 'immune system', 'immune system', 'immune system', 'excretory system', 'digestive system', 'immune system', 'digestive system', 'musculature', 'respiratory system', 'central nervous system', 'endocrine system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'immune system', 'musculature', 'reproductive system', 'immune system, skeletal system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'excretory system', 'immune system', 'musculature, digestive system', 'NA', 'NA', 'NA', 'immune system, skeletal system', 'immune system', 'endocrine system', 'immune system', 'immune system', 'musculature', 'immune system', 'immune system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'musculature', 'excretory system', 'immune system', 'excretory system', 'reproductive system', 'NA', 'reproductive system', 'central nervous system', 'immune system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'immune system', 'NA', 'circulatory system', 'immune system', 'exocrine system, integumental system', 'immune system, digestive system', 'reproductive system', 'respiratory system', 'exocrine system, integumental system', 'NA', 'immune system', 'central nervous system, peripheral nervous system', 'immune system', 'integumental system', 'immune system', 'exocrine system, integumental system', 'NA', 'immune system', 'digestive system', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'musculature', 'digestive system', 'circulatory system', 'reproductive system', 'digestive system', 'immune system', 'endocrine system', 'reproductive system', 'endocrine system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'immune system', 'musculature, digestive system', 'immune system', 'musculature', 'exocrine system, integumental system', 'immune system', 'endocrine system', 'digestive system', 'respiratory system', 'central nervous system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'respiratory system', 'musculature', 'endocrine system, exocrine system, digestive system', 'excretory system', 'immune system', 'excretory system', 'exocrine system, integumental system', 'immune system', 'integumental system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'digestive system', 'NA', 'immune system', 'integumental system', 'immune system', 'integumental system', 'NA', 'NA', 'musculature, digestive system', 'excretory system', 'musculature, digestive system', 'excretory system', 'excretory system', 'endocrine system', 'excretory system', 'immune system', 'immune system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'reproductive system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'NA', 'immune system', 'immune system', 'digestive system', 'immune system', 'immune system', 'excretory system', 'NA', 'immune system', 'excretory system', 'excretory system', 'NA', 'endocrine system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'digestive system', 'excretory system', 'digestive system', 'excretory system', 'musculature, digestive system', 'immune system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'immune system', 'circulatory system', 'NA', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'immune system', 'exocrine system, integumental system', 'excretory system', 'circulatory system', 'excretory system', 'immune system, digestive system', 'exocrine system, integumental system', 'endocrine system', 'integumental system', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'immune system', 'integumental system', 'digestive system', 'integumental system', 'NA', 'digestive system', 'excretory system', 'immune system', 'musculature', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'immune system', 'immune system', 'integumental system', 'digestive system', 'excretory system', 'respiratory system', 'NA', 'immune system', 'exocrine system, integumental system', 'excretory system', 'immune system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'integumental system', 'NA', 'immune system', 'digestive system', 'musculature', 'digestive system', 'digestive system', 'immune system', 'digestive system', 'reproductive system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'respiratory system', 'circulatory system', 'reproductive system', 'immune system', 'reproductive system', 'endocrine system', 'immune system, digestive system', 'integumental system', 'musculature', 'NA', 'immune system', 'endocrine system, exocrine system, digestive system', 'integumental system', 'excretory system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'central nervous system', 'immune system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'endocrine system', 'central nervous system', 'digestive system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'central nervous system', 'NA', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'musculature', 'central nervous system', 'NA', 'NA', 'central nervous system', 'immune system', 'reproductive system, integumental system', 'integumental system', 'immune system', 'digestive system', 'immune system', 'integumental system', 'central nervous system', 'reproductive system', 'NA', 'NA', 'exocrine system, integumental system', 'endocrine system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'reproductive system, integumental system', 'immune system', 'reproductive system', 'immune system', 'digestive system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'musculature, circulatory system', 'integumental system', 'digestive system', 'NA', 'musculature, digestive system', 'immune system', 'NA', 'reproductive system', 'digestive system', 'excretory system', 'central nervous system', 'central nervous system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'digestive system', 'reproductive system', 'digestive system', 'NA', 'musculature, circulatory system', 'integumental system', 'immune system', 'exocrine system, integumental system', 'immune system', 'central nervous system', 'respiratory system', 'musculature', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'exocrine system, integumental system', 'immune system', 'excretory system', 'reproductive system', 'digestive system', 'NA', 'circulatory system', 'NA', 'excretory system', 'excretory system', 'respiratory system', 'immune system', 'immune system', 'musculature, digestive system', 'reproductive system, integumental system', 'immune system', 'central nervous system', 'integumental system', 'digestive system', 'central nervous system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'immune system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'central nervous system', 'immune system', 'respiratory system', 'excretory system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'endocrine system', 'immune system', 'central nervous system', 'integumental system', 'immune system', 'exocrine system, integumental system', 'digestive system', 'respiratory system', 'integumental system', 'NA', 'excretory system', 'excretory system', 'integumental system', 'immune system', 'NA', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'digestive system', 'immune system', 'endocrine system, immune system', 'excretory system', 'NA', 'integumental system', 'central nervous system', 'NA', 'musculature', 'immune system', 'reproductive system', 'endocrine system, immune system', 'central nervous system', 'excretory system', 'NA', 'NA', 'digestive system', 'immune system', 'digestive system', 'excretory system', 'immune system', 'reproductive system, integumental system', 'NA', 'endocrine system, immune system', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'exocrine system, digestive system', 'immune system', 'central nervous system', 'NA', 'musculature', 'reproductive system', 'digestive system', 'central nervous system', 'integumental system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'peripheral nervous system', 'central nervous system, peripheral nervous system', 'NA', 'endocrine system, exocrine system, digestive system', 'NA', 'reproductive system', 'immune system', 'immune system', 'NA', 'excretory system', 'immune system', 'integumental system', 'circulatory system', 'exocrine system, integumental system', 'central nervous system', 'reproductive system', 'respiratory system', 'central nervous system', 'excretory system', 'digestive system', 'respiratory system', 'immune system', 'digestive system', 'digestive system', 'NA', 'circulatory system', 'central nervous system', 'reproductive system', 'endocrine system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'NA', 'NA', 'immune system', 'immune system', 'circulatory system', 'NA', 'NA', 'immune system, skeletal system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'integumental system', 'digestive system', 'digestive system', 'excretory system', 'musculature', 'musculature', 'exocrine system, integumental system', 'immune system', 'digestive system', 'immune system', 'immune system', 'excretory system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'NA', 'digestive system', 'immune system', 'endocrine system', 'immune system', 'endocrine system, exocrine system, digestive system', 'NA', 'endocrine system', 'immune system', 'endocrine system', 'digestive system', 'circulatory system', 'immune system', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'immune system, skeletal system', 'endocrine system, exocrine system, digestive system', 'musculature, digestive system', 'musculature, digestive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'digestive system', 'immune system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'circulatory system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'musculature', 'reproductive system, integumental system', 'musculature, digestive system', 'integumental system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'NA', 'reproductive system, integumental system', 'musculature', 'NA', 'immune system', 'exocrine system, integumental system', 'excretory system', 'NA', 'immune system', 'central nervous system', 'immune system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'immune system', 'immune system', 'NA', 'endocrine system, exocrine system, digestive system', 'excretory system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'integumental system', 'musculature, digestive system', 'immune system', 'reproductive system', 'digestive system', 'NA', 'central nervous system', 'immune system', 'central nervous system', 'NA', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'NA', 'NA', 'excretory system', 'digestive system', 'central nervous system', 'circulatory system', 'central nervous system', 'reproductive system', 'immune system', 'musculature, digestive system', 'immune system', 'exocrine system, integumental system', 'immune system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'integumental system', 'excretory system', 'NA', 'NA', 'immune system', 'excretory system', 'exocrine system, integumental system', 'excretory system', 'excretory system', 'central nervous system', 'reproductive system, integumental system', 'NA', 'musculature, digestive system', 'NA', 'musculature', 'circulatory system', 'digestive system', 'immune system', 'immune system', 'integumental system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'immune system', 'endocrine system', 'NA', 'excretory system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'endocrine system', 'immune system', 'central nervous system', 'exocrine system, integumental system', 'digestive system', 'central nervous system', 'immune system, digestive system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'immune system', 'immune system', 'reproductive system, integumental system', 'circulatory system', 'central nervous system', 'reproductive system, integumental system', 'integumental system', 'excretory system', 'central nervous system', 'musculature', 'central nervous system', 'digestive system', 'excretory system', 'endocrine system, immune system', 'immune system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'respiratory system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'digestive system', 'central nervous system', 'integumental system', 'NA', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'immune system', 'exocrine system, integumental system', 'immune system', 'reproductive system', 'immune system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'reproductive system', 'central nervous system', 'immune system, digestive system', 'reproductive system', 'NA', 'central nervous system', 'immune system', 'musculature', 'immune system', 'NA', 'immune system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'reproductive system', 'central nervous system, peripheral nervous system', 'integumental system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'NA', 'immune system', 'reproductive system', 'central nervous system', 'NA', 'immune system', 'exocrine system, integumental system', 'respiratory system', 'immune system', 'NA', 'NA', 'digestive system', 'central nervous system, peripheral nervous system', 'immune system', 'immune system', 'reproductive system', 'NA', 'endocrine system', 'digestive system', 'central nervous system, peripheral nervous system', 'central nervous system', 'endocrine system', 'endocrine system, immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system, digestive system', 'NA', 'endocrine system', 'central nervous system', 'immune system', 'NA', 'NA', 'musculature', 'immune system', 'immune system', 'immune system', 'endocrine system', 'immune system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'respiratory system', 'musculature', 'musculature, digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'circulatory system', 'immune system', 'exocrine system, integumental system', 'reproductive system, integumental system', 'digestive system', 'excretory system', 'central nervous system', 'central nervous system', 'excretory system', 'excretory system', 'NA', 'immune system, digestive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'immune system', 'reproductive system', 'immune system, digestive system', 'digestive system', 'excretory system', 'immune system, skeletal system', 'immune system', 'central nervous system', 'reproductive system', 'immune system', 'musculature', 'exocrine system, integumental system', 'central nervous system', 'immune system', 'respiratory system', 'endocrine system', 'NA', 'central nervous system', 'immune system', 'immune system', 'NA', 'exocrine system, integumental system', 'NA', 'musculature', 'digestive system', 'musculature', 'digestive system', 'respiratory system', 'immune system', 'immune system', 'NA', 'immune system', 'integumental system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'integumental system', 'immune system', 'skeletal system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'exocrine system, integumental system', 'respiratory system', 'immune system', 'endocrine system', 'immune system, digestive system', 'NA', 'NA', 'NA', 'immune system', 'circulatory system', 'digestive system', 'endocrine system', 'peripheral nervous system', 'musculature', 'exocrine system, integumental system', 'immune system', 'immune system', 'immune system', 'respiratory system', 'digestive system', 'digestive system', 'immune system', 'NA', 'immune system', 'circulatory system', 'excretory system', 'central nervous system', 'NA', 'immune system', 'immune system', 'NA', 'excretory system', 'immune system', 'respiratory system', 'NA', 'immune system', 'NA', 'excretory system', 'NA', 'immune system', 'circulatory system', 'immune system', 'reproductive system', 'NA', 'circulatory system', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'musculature, digestive system', 'excretory system', 'central nervous system', 'immune system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'respiratory system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'immune system', 'NA', 'digestive system', 'digestive system', 'immune system', 'excretory system', 'immune system, digestive system', 'central nervous system', 'NA', 'immune system', 'central nervous system', 'immune system, skeletal system', 'musculature', 'NA', 'NA', 'immune system', 'excretory system', 'exocrine system, integumental system', 'endocrine system', 'digestive system', 'excretory system', 'reproductive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'central nervous system', 'musculature', 'digestive system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'respiratory system', 'immune system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'excretory system', 'reproductive system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'exocrine system, integumental system', 'reproductive system', 'immune system', 'excretory system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'immune system', 'integumental system', 'immune system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'immune system, digestive system', 'respiratory system', 'excretory system', 'immune system', 'integumental system', 'excretory system', 'exocrine system, integumental system', 'peripheral nervous system', 'respiratory system', 'immune system', 'NA', 'central nervous system', 'digestive system', 'NA', 'NA', 'respiratory system', 'immune system', 'reproductive system', 'immune system', 'digestive system', 'skeletal system', 'musculature, digestive system', 'exocrine system, digestive system', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'NA', 'central nervous system', 'excretory system', 'digestive system', 'reproductive system', 'central nervous system', 'central nervous system', 'peripheral nervous system', 'integumental system', 'immune system', 'endocrine system, immune system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'reproductive system', 'excretory system', 'endocrine system', 'reproductive system', 'reproductive system', 'respiratory system', 'excretory system', 'NA', 'immune system, digestive system', 'immune system', 'immune system', 'excretory system', 'NA', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'endocrine system', 'digestive system', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'endocrine system', 'central nervous system', 'immune system', 'NA', 'NA', 'central nervous system', 'central nervous system, peripheral nervous system', 'exocrine system, integumental system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'digestive system', 'immune system', 'immune system, digestive system', 'NA', 'immune system', 'integumental system', 'NA', 'respiratory system', 'endocrine system', 'immune system', 'endocrine system', 'endocrine system', 'reproductive system', 'musculature', 'exocrine system, integumental system', 'immune system', 'central nervous system', 'central nervous system', 'central nervous system', 'immune system', 'immune system', 'reproductive system', 'immune system', 'reproductive system', 'NA', 'NA', 'excretory system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'immune system', 'reproductive system, integumental system', 'reproductive system', 'NA', 'reproductive system', 'NA', 'skeletal system', 'integumental system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'immune system', 'integumental system', 'NA', 'NA', 'excretory system', 'endocrine system, exocrine system, digestive system', 'NA', 'excretory system', 'exocrine system, integumental system', 'immune system', 'excretory system', 'digestive system', 'musculature', 'exocrine system, integumental system', 'circulatory system', 'digestive system', 'excretory system', 'integumental system', 'exocrine system, integumental system', 'reproductive system, integumental system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'exocrine system, integumental system', 'immune system', 'NA', 'musculature, digestive system', 'central nervous system, peripheral nervous system', 'endocrine system', 'immune system', 'reproductive system, integumental system', 'central nervous system', 'reproductive system', 'immune system', 'respiratory system', 'excretory system', 'digestive system', 'respiratory system', 'respiratory system', 'musculature', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'integumental system', 'musculature', 'endocrine system, exocrine system, digestive system', 'NA', 'excretory system', 'exocrine system, integumental system', 'excretory system', 'NA', 'immune system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'musculature', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system, skeletal system', 'skeletal system', 'exocrine system, integumental system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'musculature', 'excretory system', 'immune system', 'respiratory system', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'musculature', 'endocrine system, exocrine system, digestive system', 'NA', 'reproductive system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'NA', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'immune system', 'central nervous system, peripheral nervous system', 'endocrine system, exocrine system, digestive system', 'immune system', 'musculature, digestive system', 'immune system', 'excretory system', 'NA', 'excretory system', 'integumental system', 'excretory system', 'central nervous system', 'immune system, skeletal system', 'digestive system', 'immune system', 'excretory system', 'skeletal system', 'respiratory system', 'musculature', 'central nervous system', 'respiratory system', 'respiratory system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'circulatory system', 'integumental system', 'immune system', 'excretory system', 'NA', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'immune system', 'exocrine system, integumental system', 'immune system', 'immune system', 'excretory system', 'reproductive system', 'circulatory system', 'immune system, skeletal system', 'immune system', 'digestive system', 'NA', 'immune system', 'respiratory system', 'respiratory system', 'central nervous system', 'excretory system', 'excretory system', 'musculature, digestive system', 'central nervous system', 'exocrine system, integumental system', 'digestive system', 'immune system', 'central nervous system', 'immune system', 'immune system', 'NA', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'NA', 'exocrine system, integumental system', 'digestive system', 'exocrine system, integumental system', 'NA', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'immune system', 'immune system', 'endocrine system', 'digestive system', 'excretory system', 'integumental system', 'reproductive system, integumental system', 'central nervous system', 'immune system, skeletal system', 'excretory system', 'musculature, digestive system', 'integumental system', 'exocrine system, integumental system', 'musculature', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'reproductive system', 'digestive system', 'immune system, skeletal system', 'integumental system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'respiratory system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'NA', 'central nervous system', 'digestive system', 'immune system', 'excretory system', 'immune system', 'NA', 'reproductive system', 'integumental system', 'reproductive system', 'respiratory system', 'immune system', 'excretory system', 'integumental system', 'central nervous system', 'central nervous system', 'immune system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'peripheral nervous system', 'exocrine system, integumental system', 'immune system', 'central nervous system', 'immune system', 'reproductive system', 'NA', 'endocrine system, exocrine system, digestive system', 'NA', 'central nervous system', 'exocrine system, integumental system', 'digestive system', 'reproductive system', 'immune system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'respiratory system', 'NA', 'immune system, digestive system', 'digestive system', 'central nervous system', 'digestive system', 'immune system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'musculature, digestive system', 'reproductive system, circulatory system', 'immune system', 'reproductive system', 'respiratory system', 'NA', 'immune system', 'respiratory system', 'immune system', 'peripheral nervous system', 'immune system', 'immune system, skeletal system', 'musculature', 'endocrine system', 'integumental system', 'integumental system', 'endocrine system', 'digestive system', 'exocrine system, integumental system', 'immune system', 'NA', 'immune system, skeletal system', 'respiratory system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'immune system', 'endocrine system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'integumental system', 'exocrine system, integumental system', 'musculature', 'digestive system', 'central nervous system', 'central nervous system', 'central nervous system', 'NA', 'excretory system', 'circulatory system', 'NA', 'immune system', 'immune system', 'excretory system', 'NA', 'NA', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'musculature', 'NA', 'endocrine system', 'exocrine system, integumental system', 'immune system, skeletal system', 'reproductive system', 'immune system', 'integumental system', 'immune system', 'immune system', 'NA', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'excretory system', 'immune system', 'central nervous system', 'immune system, skeletal system', 'NA', 'endocrine system, exocrine system, digestive system', 'excretory system', 'excretory system', 'integumental system', 'immune system', 'endocrine system', 'immune system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'reproductive system', 'musculature, digestive system', 'immune system, digestive system', 'immune system', 'central nervous system, peripheral nervous system', 'digestive system', 'central nervous system', 'immune system', 'NA', 'immune system', 'integumental system', 'reproductive system', 'musculature', 'reproductive system', 'peripheral nervous system', 'NA', 'NA', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'central nervous system', 'NA', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'reproductive system', 'respiratory system', 'immune system', 'respiratory system', 'digestive system', 'endocrine system', 'immune system', 'central nervous system', 'excretory system', 'reproductive system', 'excretory system', 'integumental system', 'immune system', 'exocrine system, integumental system', 'endocrine system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system, digestive system', 'reproductive system, integumental system', 'circulatory system', 'immune system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'reproductive system, integumental system', 'endocrine system, exocrine system, digestive system', 'immune system', 'central nervous system', 'immune system', 'central nervous system', 'immune system', 'immune system', 'digestive system', 'reproductive system', 'central nervous system', 'immune system, skeletal system', 'immune system', 'immune system', 'immune system', 'NA', 'excretory system', 'immune system', 'excretory system', 'integumental system', 'immune system', 'excretory system', 'immune system', 'immune system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'NA', 'NA', 'immune system, skeletal system', 'reproductive system', 'immune system', 'immune system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'respiratory system', 'exocrine system, integumental system', 'exocrine system, integumental system', 'digestive system', 'immune system', 'respiratory system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system, skeletal system', 'central nervous system', 'immune system', 'respiratory system', 'respiratory system', 'immune system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'exocrine system, integumental system', 'digestive system', 'digestive system', 'immune system', 'digestive system', 'endocrine system', 'endocrine system, exocrine system, digestive system', 'immune system', 'digestive system', 'reproductive system', 'excretory system', 'immune system', 'central nervous system', 'circulatory system', 'reproductive system', 'digestive system', 'endocrine system, immune system', 'digestive system', 'reproductive system', 'immune system', 'immune system', 'reproductive system', 'endocrine system', 'musculature', 'central nervous system', 'musculature, circulatory system', 'immune system', 'endocrine system, exocrine system, digestive system', 'central nervous system, peripheral nervous system', 'reproductive system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'NA', 'endocrine system, exocrine system, digestive system', 'musculature, digestive system', 'integumental system', 'immune system', 'immune system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'endocrine system', 'immune system', 'reproductive system', 'respiratory system', 'reproductive system', 'digestive system', 'immune system, digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'reproductive system', 'immune system', 'excretory system', 'central nervous system', 'digestive system', 'central nervous system', 'NA', 'musculature, digestive system', 'endocrine system, exocrine system, digestive system', 'NA', 'NA', 'exocrine system, integumental system', 'immune system', 'NA', 'respiratory system', 'integumental system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'reproductive system, integumental system', 'musculature', 'digestive system', 'circulatory system', 'exocrine system, integumental system', 'excretory system', 'immune system', 'musculature', 'excretory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'immune system', 'reproductive system', 'respiratory system', 'central nervous system', 'central nervous system', 'musculature', 'respiratory system', 'circulatory system', 'integumental system', 'excretory system', 'reproductive system', 'reproductive system', 'respiratory system', 'immune system', 'immune system', 'immune system', 'NA', 'immune system', 'circulatory system', 'excretory system', 'circulatory system', 'NA', 'NA', 'musculature, digestive system', 'central nervous system', 'immune system, skeletal system', 'endocrine system, exocrine system, digestive system', 'immune system', 'reproductive system, integumental system', 'central nervous system', 'excretory system', 'digestive system', 'excretory system', 'reproductive system', 'immune system', 'reproductive system, integumental system', 'immune system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'immune system', 'digestive system', 'immune system', 'musculature', 'exocrine system, integumental system', 'central nervous system', 'central nervous system, peripheral nervous system', 'endocrine system', 'NA', 'endocrine system, exocrine system, digestive system', 'NA', 'excretory system', 'NA', 'immune system', 'central nervous system', 'central nervous system', 'immune system, digestive system', 'immune system', 'central nervous system', 'excretory system', 'central nervous system', 'immune system', 'immune system, skeletal system', 'excretory system', 'immune system', 'immune system, digestive system', 'musculature, digestive system', 'central nervous system', 'reproductive system', 'immune system', 'central nervous system', 'central nervous system', 'digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'digestive system', 'musculature', 'NA', 'immune system', 'digestive system', 'immune system', 'circulatory system', 'endocrine system', 'immune system', 'exocrine system, integumental system', 'circulatory system', 'musculature', 'integumental system', 'exocrine system, integumental system', 'NA', 'excretory system', 'immune system, skeletal system', 'exocrine system, integumental system', 'respiratory system', 'immune system', 'integumental system', 'reproductive system, integumental system', 'immune system', 'NA', 'exocrine system, integumental system', 'reproductive system, integumental system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'excretory system', 'respiratory system', 'immune system', 'respiratory system', 'immune system', 'circulatory system', 'excretory system', 'reproductive system', 'immune system', 'reproductive system', 'immune system', 'immune system', 'immune system', 'excretory system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'central nervous system', 'immune system', 'respiratory system', 'musculature, circulatory system', 'digestive system', 'digestive system', 'digestive system', 'central nervous system, peripheral nervous system', 'immune system', 'excretory system', 'excretory system', 'musculature', 'musculature', 'endocrine system, exocrine system, digestive system', 'immune system', 'endocrine system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'endocrine system', 'immune system', 'excretory system', 'NA', 'central nervous system', 'central nervous system', 'reproductive system', 'reproductive system', 'immune system', 'NA', 'immune system', 'NA', 'immune system', 'musculature', 'reproductive system', 'central nervous system', 'digestive system', 'NA', 'excretory system', 'circulatory system', 'digestive system', 'immune system', 'immune system', 'central nervous system', 'exocrine system, integumental system', 'immune system', 'immune system, digestive system', 'respiratory system', 'central nervous system', 'exocrine system, digestive system', 'integumental system', 'excretory system', 'central nervous system', 'respiratory system', 'respiratory system', 'NA', 'excretory system', 'NA', 'integumental system', 'integumental system', 'immune system, digestive system', 'immune system', 'exocrine system, integumental system', 'NA', 'NA', 'endocrine system, exocrine system, digestive system', 'excretory system', 'digestive system', 'immune system', 'immune system', 'integumental system', 'central nervous system', 'immune system', 'immune system', 'immune system', 'NA', 'NA', 'NA', 'digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'musculature', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'central nervous system', 'excretory system', 'immune system', 'digestive system', 'immune system', 'NA', 'endocrine system, immune system', 'excretory system', 'respiratory system', 'NA', 'immune system', 'integumental system', 'immune system', 'NA', 'central nervous system', 'exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'digestive system', 'integumental system', 'musculature, digestive system', 'immune system', 'endocrine system', 'endocrine system, exocrine system, digestive system', 'NA', 'NA', 'digestive system', 'immune system', 'reproductive system', 'musculature', 'NA', 'NA', 'immune system', 'endocrine system', 'reproductive system', 'NA', 'digestive system', 'digestive system', 'immune system', 'immune system', 'immune system', 'digestive system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'excretory system', 'NA', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'NA', 'immune system', 'integumental system', 'digestive system', 'digestive system', 'immune system, skeletal system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'NA', 'endocrine system', 'excretory system', 'immune system', 'immune system', 'musculature, digestive system', 'exocrine system, integumental system', 'excretory system', 'exocrine system, integumental system', 'digestive system', 'endocrine system', 'excretory system', 'integumental system', 'endocrine system, immune system', 'reproductive system', 'immune system', 'reproductive system', 'immune system', 'central nervous system', 'immune system', 'endocrine system, exocrine system, digestive system', 'central nervous system', 'musculature', 'reproductive system', 'NA', 'excretory system', 'central nervous system', 'NA', 'excretory system', 'excretory system', 'immune system', 'excretory system', 'respiratory system', 'NA', 'excretory system', 'immune system', 'digestive system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'endocrine system', 'excretory system', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'peripheral nervous system', 'immune system', 'digestive system', 'integumental system', 'excretory system', 'digestive system', 'NA', 'immune system', 'musculature', 'NA', 'excretory system', 'digestive system', 'digestive system', 'immune system', 'musculature', 'endocrine system, immune system', 'excretory system', 'excretory system', 'reproductive system', 'immune system', 'excretory system', 'excretory system', 'immune system', 'exocrine system, digestive system', 'immune system, skeletal system', 'NA', 'immune system', 'excretory system', 'central nervous system', 'endocrine system', 'excretory system', 'central nervous system', 'reproductive system, integumental system', 'immune system', 'digestive system', 'immune system', 'musculature', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'musculature', 'immune system', 'exocrine system, integumental system', 'immune system', 'reproductive system', 'reproductive system, integumental system', 'NA', 'immune system', 'NA', 'immune system', 'immune system', 'reproductive system', 'immune system', 'exocrine system, integumental system', 'excretory system', 'immune system, skeletal system', 'skeletal system', 'integumental system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'circulatory system', 'central nervous system', 'musculature', 'circulatory system', 'digestive system', 'immune system', 'NA', 'digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'integumental system', 'immune system', 'circulatory system', 'respiratory system', 'digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'immune system', 'immune system', 'central nervous system', 'immune system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'reproductive system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'immune system', 'central nervous system', 'digestive system', 'immune system, digestive system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'musculature', 'immune system', 'exocrine system, integumental system', 'immune system', 'reproductive system', 'excretory system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'NA', 'immune system', 'central nervous system', 'respiratory system', 'digestive system', 'skeletal system', 'immune system', 'excretory system', 'exocrine system, integumental system', 'immune system', 'endocrine system, exocrine system, digestive system', 'NA', 'digestive system', 'immune system', 'exocrine system, integumental system', 'excretory system', 'central nervous system', 'digestive system', 'reproductive system, integumental system', 'immune system', 'respiratory system', 'exocrine system, integumental system', 'digestive system', 'immune system', 'NA', 'central nervous system, peripheral nervous system', 'NA', 'NA', 'NA', 'immune system', 'central nervous system', 'immune system', 'central nervous system, peripheral nervous system', 'immune system', 'endocrine system', 'immune system', 'immune system', 'immune system', 'musculature', 'immune system', 'central nervous system', 'immune system', 'central nervous system', 'central nervous system', 'immune system', 'immune system', 'central nervous system, peripheral nervous system', 'immune system', 'peripheral nervous system', 'reproductive system, integumental system', 'endocrine system, exocrine system, digestive system', 'NA', 'digestive system', 'musculature', 'immune system', 'NA', 'endocrine system, exocrine system, digestive system', 'integumental system', 'reproductive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'NA', 'excretory system', 'reproductive system', 'immune system', 'respiratory system', 'immune system', 'reproductive system', 'central nervous system', 'digestive system', 'excretory system', 'respiratory system', 'digestive system', 'immune system', 'NA', 'reproductive system', 'immune system', 'digestive system', 'musculature', 'central nervous system', 'immune system', 'immune system', 'immune system', 'skeletal system', 'immune system', 'musculature', 'reproductive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'immune system', 'digestive system', 'reproductive system', 'NA', 'central nervous system', 'immune system', 'central nervous system', 'digestive system', 'immune system', 'exocrine system, integumental system', 'integumental system', 'NA', 'musculature', 'central nervous system, peripheral nervous system', 'NA', 'NA', 'immune system', 'NA', 'NA', 'NA', 'endocrine system', 'endocrine system, exocrine system, digestive system', 'immune system', 'skeletal system', 'reproductive system', 'immune system', 'NA', 'integumental system', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'immune system', 'central nervous system', 'NA', 'endocrine system, exocrine system, digestive system', 'immune system', 'peripheral nervous system', 'immune system', 'immune system', 'immune system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'reproductive system, integumental system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'excretory system', 'circulatory system', 'central nervous system', 'endocrine system', 'reproductive system', 'immune system, skeletal system', 'reproductive system, integumental system', 'reproductive system', 'endocrine system', 'NA', 'excretory system', 'digestive system', 'excretory system', 'digestive system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system, skeletal system', 'respiratory system', 'excretory system', 'immune system', 'central nervous system', 'immune system', 'immune system', 'integumental system', 'immune system', 'musculature, digestive system', 'excretory system', 'NA', 'central nervous system', 'immune system', 'NA', 'exocrine system, integumental system', 'musculature, circulatory system', 'excretory system', 'integumental system', 'exocrine system, integumental system', 'immune system', 'immune system, skeletal system', 'immune system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'respiratory system', 'immune system', 'immune system', 'central nervous system', 'immune system', 'NA', 'integumental system', 'immune system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'musculature, digestive system', 'endocrine system, exocrine system, digestive system', 'central nervous system, peripheral nervous system', 'immune system', 'immune system, skeletal system', 'NA', 'exocrine system, integumental system', 'exocrine system, integumental system', 'reproductive system, integumental system', 'NA', 'immune system', 'NA', 'exocrine system, integumental system', 'digestive system', 'digestive system', 'circulatory system', 'reproductive system', 'immune system', 'excretory system', 'central nervous system', 'immune system', 'immune system, digestive system', 'immune system', 'NA', 'reproductive system', 'immune system', 'excretory system', 'excretory system', 'NA', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'endocrine system', 'immune system', 'digestive system', 'central nervous system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'NA', 'integumental system', 'central nervous system', 'NA', 'NA', 'respiratory system', 'reproductive system, integumental system', 'immune system', 'central nervous system', 'reproductive system, integumental system', 'NA', 'immune system', 'immune system', 'musculature, digestive system', 'central nervous system', 'respiratory system', 'immune system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'central nervous system', 'digestive system', 'excretory system', 'central nervous system', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'immune system', 'NA', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'NA', 'NA', 'excretory system', 'exocrine system, digestive system', 'exocrine system, integumental system', 'excretory system', 'immune system', 'respiratory system', 'excretory system', 'digestive system', 'exocrine system, integumental system', 'immune system', 'exocrine system, integumental system', 'immune system', 'endocrine system', 'endocrine system', 'musculature', 'integumental system', 'NA', 'immune system', 'digestive system', 'immune system', 'endocrine system', 'digestive system', 'central nervous system', 'circulatory system', 'NA', 'integumental system', 'NA', 'endocrine system, exocrine system, digestive system', 'NA', 'digestive system', 'endocrine system, exocrine system, digestive system', 'immune system', 'central nervous system', 'integumental system', 'musculature, digestive system', 'excretory system', 'excretory system', 'digestive system', 'endocrine system', 'digestive system', 'immune system', 'immune system', 'immune system', 'endocrine system', 'integumental system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'excretory system', 'digestive system', 'circulatory system', 'NA', 'immune system', 'excretory system', 'reproductive system', 'immune system', 'immune system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'central nervous system', 'exocrine system, integumental system', 'NA', 'exocrine system, integumental system', 'central nervous system', 'respiratory system', 'integumental system', 'immune system', 'central nervous system', 'musculature, digestive system', 'reproductive system, integumental system', 'reproductive system, integumental system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'NA', 'reproductive system', 'immune system', 'immune system', 'immune system', 'digestive system', 'immune system', 'central nervous system', 'musculature, digestive system', 'integumental system', 'musculature', 'integumental system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'endocrine system, immune system', 'excretory system', 'immune system', 'exocrine system, integumental system', 'endocrine system, exocrine system, digestive system', 'digestive system', 'NA', 'endocrine system, exocrine system, digestive system', 'musculature', 'immune system', 'endocrine system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'NA', 'immune system', 'integumental system', 'central nervous system, peripheral nervous system', 'digestive system', 'digestive system', 'circulatory system', 'musculature', 'NA', 'immune system', 'NA', 'integumental system', 'digestive system', 'immune system', 'respiratory system', 'exocrine system, integumental system', 'central nervous system, peripheral nervous system', 'peripheral nervous system', 'respiratory system', 'musculature, digestive system', 'immune system', 'endocrine system, exocrine system, digestive system', 'NA', 'immune system', 'circulatory system', 'immune system', 'exocrine system, integumental system', 'central nervous system', 'NA', 'musculature, digestive system', 'integumental system', 'respiratory system', 'endocrine system', 'NA', 'reproductive system', 'digestive system', 'digestive system', 'immune system', 'respiratory system', 'central nervous system', 'endocrine system, exocrine system, digestive system', 'reproductive system', 'excretory system', 'immune system', 'immune system', 'immune system', 'musculature', 'reproductive system', 'exocrine system, integumental system', 'immune system', 'musculature', 'excretory system', 'immune system, digestive system', 'endocrine system, exocrine system, digestive system', 'endocrine system, immune system', 'NA', 'immune system', 'musculature, digestive system', 'central nervous system', 'NA', 'respiratory system', 'endocrine system, exocrine system, digestive system', 'exocrine system, integumental system', 'musculature', 'endocrine system', 'skeletal system', 'central nervous system', 'NA', 'central nervous system', 'central nervous system', 'reproductive system', 'circulatory system', 'immune system, skeletal system', 'central nervous system', 'NA', 'respiratory system', 'immune system', 'reproductive system', 'endocrine system', 'immune system', 'immune system', 'digestive system', 'NA', 'central nervous system, peripheral nervous system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'NA', 'NA', 'circulatory system', 'NA', 'circulatory system', 'immune system, skeletal system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'reproductive system', 'immune system', 'reproductive system', 'immune system', 'respiratory system', 'immune system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'immune system', 'excretory system', 'exocrine system, integumental system', 'NA', 'circulatory system', 'immune system', 'endocrine system, exocrine system, digestive system', 'immune system', 'integumental system', 'immune system', 'respiratory system', 'musculature, digestive system', 'immune system', 'musculature', 'respiratory system', 'reproductive system', 'circulatory system', 'NA', 'immune system', 'immune system', 'digestive system', 'immune system', 'circulatory system', 'central nervous system', 'endocrine system', 'reproductive system', 'central nervous system', 'immune system', 'skeletal system', 'immune system', 'NA', 'excretory system', 'reproductive system', 'immune system', 'central nervous system', 'excretory system', 'digestive system', 'NA', 'exocrine system, integumental system', 'immune system', 'immune system', 'integumental system', 'integumental system', 'immune system', 'reproductive system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'circulatory system', 'central nervous system', 'integumental system', 'circulatory system', 'excretory system', 'NA', 'exocrine system, integumental system', 'excretory system', 'immune system', 'respiratory system', 'exocrine system, integumental system', 'integumental system', 'immune system', 'immune system', 'reproductive system', 'circulatory system', 'musculature', 'circulatory system', 'endocrine system, exocrine system, digestive system', 'endocrine system, exocrine system, digestive system', 'circulatory system', 'integumental system', 'integumental system', 'immune system', 'endocrine system, exocrine system, digestive system', 'NA', 'immune system', 'central nervous system', 'immune system', 'endocrine system', 'immune system', 'excretory system', 'endocrine system, exocrine system, digestive system', 'excretory system', 'musculature, circulatory system', 'endocrine system, exocrine system, digestive system', 'immune system, digestive system', 'musculature', 'respiratory system', 'central nervous system', 'immune system', 'integumental system', 'excretory system', 'immune system, skeletal system', 'excretory system', 'immune system', 'central nervous system', 'immune system', 'musculature', 'immune system', 'digestive system', 'reproductive system', 'exocrine system, integumental system
['NA', 'NA', 'NA', 'cancer cell', 'fibroblast', 'fibroblast', 'fibroblast', 'fibroblast', 'fibroblast', 'NA', 'cancer cell', 'leukocyte, hematopoietic cell, B cell', 'hematopoietic cell, B cell, leukocyte', 'leukocyte, hematopoietic cell, B cell', 'leukocyte, hematopoietic cell, B cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'leukocyte, hematopoietic cell, B cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'epithelial cell, endothelial cell', 'stem cell, induced pluripotent stem cell', 'stem cell, induced pluripotent stem cell', 'stem cell, induced pluripotent stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'neural cell', 'melanocyte', 'monocyte, leukocyte, myeloid cell, hematopoietic cell', 'epithelial cell, keratinocyte', 'connective tissue cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell', 'fibroblast', 'fibroblast, connective tissue cell', 'fibroblast', 'fibroblast', 'fibroblast', 'connective tissue cell, fibroblast', 'neuroblastoma cell, cancer cell, neural cell, stem cell', 'connective tissue cell, fibroblast', 'epithelial cell', 'fibroblast, connective tissue cell', 'connective tissue cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, progenitor cell', 'T cell, leukocyte, CD4+ T cell, hematopoietic cell', 'cancer cell, myeloid cell, hematopoietic cell', 'fibroblast', 'fibroblast', 'B cell, hematopoietic cell, leukocyte', 'leukocyte, hematopoietic cell, B cell', 'B cell, hematopoietic cell, leukocyte', 'leukocyte, hematopoietic cell, B cell', 'embryonic cell, stem cell', 'myoblast, embryonic cell', 'stem cell', 'embryonic cell', 'cardiocyte', 'embryonic cell, stem cell', 'neural cell', 'neural cell', 'neural cell', 'epithelial cell', 'epithelial cell, endothelial cell, neural cell', 'pericyte, neural cell, hematopoietic cell, connective tissue cell', 'smooth muscle cell, neural cell', 'fibroblast, cardiocyte, connective tissue cell', 'connective tissue cell, cardiocyte, fibroblast', 'cardiocyte', 'connective tissue cell, fibroblast', 'neural cell, epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'connective tissue cell, fibroblast', 'connective tissue cell, fibroblast', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'fibroblast, connective tissue cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell', 'epithelial cell, endothelial cell', 'connective tissue cell, fibroblast', 'connective tissue cell, fibroblast', 'fibroblast, connective tissue cell', 'epithelial cell', 'epithelial cell', 'epithelial cell, endothelial cell', 'neural cell, epithelial cell', 'embryonic cell, myoblast', 'NA', 'epithelial cell, endothelial cell', 'connective tissue cell, fibroblast', 'T cell, hematopoietic cell, leukocyte, cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'embryonic cell, myoblast', 'cancer cell, epithelial cell', 'cancer cell, neural cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'monocyte, leukocyte, myeloid cell, hematopoietic cell', 'cancer cell', 'neural cell', 'epithelial cell', 'fibroblast, connective tissue cell', 'connective tissue cell, fibroblast', 'keratinocyte, epithelial cell', 'connective tissue cell, fibroblast', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, neuroblastoma cell', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, CD4+ T cell, T cell, leukocyte', 'T cell, leukocyte, CD4+ T cell, hematopoietic cell', 'T cell, leukocyte, CD4+ T cell, hematopoietic cell', 'T cell, leukocyte, CD4+ T cell, hematopoietic cell', 'T cell, leukocyte, CD4+ T cell, hematopoietic cell', 'hematopoietic cell, CD4+ T cell, T cell, leukocyte', 'T cell, leukocyte, CD4+ T cell, hematopoietic cell', 'leukocyte, hematopoietic cell, CD4+ T cell, T cell', 'leukocyte, CD4+ T cell, hematopoietic cell, T cell', 'cancer cell, neural cell', 'connective tissue cell, fibroblast', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'fibroblast, cancer cell, connective tissue cell', 'cancer cell, epithelial cell', 'cancer cell, neural cell, stem cell, neuroblastoma cell', 'induced pluripotent stem cell, stem cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'induced pluripotent stem cell, stem cell', 'NA', 'NA', 'NA', 'embryonic cell, stem cell', 'NA', 'leukocyte, hematopoietic cell, B cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'keratinocyte, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'T cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell', 'NA', 'NA', 'NA', 'NA', 'progenitor cell, hematopoietic cell', 'NA', 'NA', 'progenitor cell, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'myeloid cell, hematopoietic cell, progenitor cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'hematopoietic cell, progenitor cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'embryonic cell', 'NA', 'T cell, leukocyte, CD4+ T cell, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'NA', 'NA', 'myeloid cell, hematopoietic cell, progenitor cell', 'NA', 'NA', 'NA', 'NA', 'stem cell, connective tissue cell', 'NA', 'NA', 'NA', 'fibroblast', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'fibroblast, connective tissue cell', 'NA', 'cancer cell', 'NA', 'NA', 'induced pluripotent stem cell, stem cell', 'NA', 'NA', 'cancer cell', 'NA', 'cancer cell', 'NA', 'myeloid cell, hematopoietic cell, progenitor cell', 'NA', 'NA', 'embryonic cell, stem cell', 'NA', 'neural cell, stem cell', 'NA', 'progenitor cell, myeloid cell, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'leukocyte, hematopoietic cell, B cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'induced pluripotent stem cell, stem cell', 'T cell, leukocyte, CD8+ T cell, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'progenitor cell, myeloid cell, hematopoietic cell', 'NA', 'fibroblast, connective tissue cell', 'progenitor cell, hematopoietic cell', 'NA', 'NA', 'cancer cell', 'NA', 'NA', 'neural cell', 'cancer cell', 'NA', 'NA', 'NA', 'fibroblast', 'progenitor cell', 'progenitor cell, hematopoietic cell', 'epithelial cell', 'NA', 'NA', 'NA', 'T cell, leukocyte, hematopoietic cell', 'fibroblast', 'dendritic cell, leukocyte, myeloid cell, hematopoietic cell', 'leukocyte, hematopoietic cell, B cell', 'NA', 'fibroblast', 'induced pluripotent stem cell, stem cell', 'NA', 'epithelial cell', 'NA', 'NA', 'NA', 'connective tissue cell', 'NA', 'NA', 'hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'progenitor cell, hematopoietic cell', 'NA', 'NA', 'NA', 'T cell, leukocyte, CD4+ T cell, hematopoietic cell', 'cancer cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'epithelial cell', 'melanocyte', 'NA', 'NA', 'NA', 'NA', 'NA', 'induced pluripotent stem cell, stem cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'monocyte, leukocyte, myeloid cell, hematopoietic cell', 'NA', 'NA', 'myeloid cell, hematopoietic cell, progenitor cell', 'NA', 'NA', 'cancer cell, hematopoietic cell, leukocyte, B cell', 'NA', 'NA', 'hematopoietic cell, progenitor cell, myeloid cell', 'NA', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'NA', 'cancer cell, hematopoietic cell, leukocyte, B cell', 'NA', 'progenitor cell, hematopoietic cell', 'NA', 'hematopoietic cell, progenitor cell, myeloid cell', 'NA', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'melanocyte', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'connective tissue cell, fibroblast', 'NA', 'NA', 'NA', 'NA', 'NA', 'fibroblast', 'NA', 'fibroblast', 'NA', 'NA', 'progenitor cell, hematopoietic cell', 'hematopoietic cell, progenitor cell, myeloid cell', 'NA', 'T cell, leukocyte, CD4+ T cell, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell, hematopoietic cell, leukocyte, B cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'leukocyte, hematopoietic cell, CD8+ T cell, T cell', 'NA', 'NA', 'NA', 'cancer cell', 'cancer cell', 'NA', 'NA', 'fibroblast, connective tissue cell', 'neural cell', 'NA', 'NA', 'hematopoietic cell, T cell, leukocyte', 'hematopoietic cell, T cell, leukocyte', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'myeloid cell, hematopoietic cell, progenitor cell', 'NA', 'leukocyte, hematopoietic cell, CD4+ T cell, T cell', 'NA', 'fibroblast', 'NA', 'NA', 'NA', 'NA', 'NA', 'B cell, hematopoietic cell, leukocyte', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'embryonic cell, stem cell', 'NA', 'NA', 'NA', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'fibroblast, connective tissue cell', 'monocyte, leukocyte, myeloid cell, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell, fibroblast, connective tissue cell', 'leukocyte, NK cell, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'leukocyte, NK cell, hematopoietic cell', 'hematopoietic cell, NK cell, leukocyte', 'keratinocyte, epithelial cell', 'NA', 'NA', 'NA', 'stem cell, connective tissue cell', 'NA', 'hematopoietic cell, progenitor cell, myeloid cell', 'NA', 'induced pluripotent stem cell, stem cell', 'NA', 'epithelial cell', 'NA', 'NA', 'embryonic cell, stem cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'fibroblast', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'embryonic cell, stem cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'stem cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'T cell, leukocyte, CD8+ T cell, hematopoietic cell', 'cardiocyte', 'T cell, leukocyte, CD8+ T cell, hematopoietic cell', 'progenitor cell, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'progenitor cell, hematopoietic cell', 'fibroblast, cardiocyte, connective tissue cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'leukocyte, hematopoietic cell, B cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell', 'NA', 'NA', 'hematopoietic cell, progenitor cell', 'NA', 'cancer cell', 'NA', 'NA', 'embryonic cell, stem cell', 'NA', 'NA', 'NA', 'cancer cell, neural cell, stem cell, neuroblastoma cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'progenitor cell', 'NA', 'NA', 'embryonic cell, stem cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'epithelial cell, endothelial cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, keratinocyte', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'embryonic cell, myoblast', 'embryonic cell, myoblast', 'embryonic cell, myoblast', 'embryonic cell, myoblast', 'embryonic cell, myoblast', 'embryonic cell, myoblast', 'embryonic cell, myoblast', 'embryonic cell, myoblast', 'embryonic cell, stem cell', 'embryonic cell, myoblast', 'embryonic cell, myoblast', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'neural cell', 'neural cell', 'neural cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'embryonic cell, myoblast', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'connective tissue cell', 'connective tissue cell', 'connective tissue cell', 'connective tissue cell', 'connective tissue cell', 'connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'connective tissue cell', 'connective tissue cell', 'T cell, hematopoietic cell, leukocyte', 'T cell, hematopoietic cell, leukocyte', 'T cell, hematopoietic cell, leukocyte', 'T cell, hematopoietic cell, leukocyte', 'T cell, hematopoietic cell, leukocyte', 'T cell, hematopoietic cell, leukocyte', 'T cell, hematopoietic cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'embryonic cell, myoblast', 'cancer cell, epithelial cell', 'epithelial cell, keratinocyte', 'epithelial cell, keratinocyte', 'epithelial cell, keratinocyte', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'neural cell', 'neural cell', 'T cell, hematopoietic cell, leukocyte', 'T cell, hematopoietic cell, leukocyte', 'epithelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'connective tissue cell', 'cancer cell', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'cancer cell', 'cancer cell', 'T cell, hematopoietic cell, leukocyte', 'epithelial cell, endothelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'connective tissue cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'cancer cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell', 'cancer cell', 'embryonic cell, stem cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'neuroblastoma cell, cancer cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'cancer cell', 'cancer cell, epithelial cell', 'cancer cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'neuroblastoma cell, cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'fibroblast, connective tissue cell', 'cancer cell', 'cancer cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell, epithelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'cancer cell, epithelial cell', 'cancer cell', 'neuroblastoma cell, cancer cell', 'cancer cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'fibroblast, connective tissue cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'neuroblastoma cell, cancer cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'neural cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'neural cell', 'cancer cell', 'epithelial cell, keratinocyte', 'NA', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'cancer cell', 'fibroblast', 'fibroblast', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast', 'fibroblast', 'fibroblast', 'fibroblast', 'fibroblast', 'fibroblast', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'neuroblastoma cell, cancer cell, stem cell, neural cell', 'neuroblastoma cell, cancer cell, stem cell, neural cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, myoblast', 'embryonic cell', 'embryonic cell, myoblast', 'stem cell', 'embryonic cell', 'cardiocyte', 'embryonic cell, myoblast', 'stem cell', 'embryonic cell', 'cardiocyte', 'stem cell', 'cardiocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'neural cell', 'neural cell', 'neural cell', 'neural cell', 'neural cell, epithelial cell, endothelial cell', 'neural cell, epithelial cell, endothelial cell', 'fibroblast, connective tissue cell, cardiocyte', 'fibroblast, connective tissue cell, cardiocyte', 'fibroblast, connective tissue cell, cardiocyte', 'cardiocyte', 'cardiocyte', 'epithelial cell, neural cell', 'epithelial cell, neural cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell, neural cell', 'epithelial cell, neural cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'T cell, hematopoietic cell, leukocyte, cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'cancer cell', 'cancer cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'epithelial cell, keratinocyte', 'epithelial cell, keratinocyte', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'NA', 'cancer cell, neural cell', 'cancer cell, neural cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'epithelial cell', 'epithelial cell, endothelial cell', 'epithelial cell, endothelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'myeloid cell, hematopoietic cell', 'myeloid cell, hematopoietic cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'hematopoietic cell, mononuclear cell, leukocyte', 'hematopoietic cell, mononuclear cell, leukocyte', 'hematopoietic cell, mononuclear cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'neuroblastoma cell, cancer cell', 'neural cell', 'fibroblast, connective tissue cell', 'NA', 'NA', 'cardiocyte', 'NA', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'NA', 'stem cell, connective tissue cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'fibroblast, connective tissue cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'epithelial cell', 'stem cell, connective tissue cell', 'cancer cell, epithelial cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'neuroblastoma cell, cancer cell', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'stem cell, connective tissue cell', 'epithelial cell, keratinocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'NA', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'epithelial cell', 'fibroblast, connective tissue cell', 'epithelial cell', 'NA', 'epithelial cell', 'hematopoietic cell, leukocyte, NK cell', 'stem cell, neural cell', 'epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'epithelial cell, keratinocyte', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell', 'epithelial cell', 'stem cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'stem cell, induced pluripotent stem cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'T cell, hematopoietic cell, leukocyte', 'NA', 'embryonic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'fibroblast, connective tissue cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'stem cell', 'fibroblast, connective tissue cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'epithelial cell', 'NA', 'neural cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'stem cell, induced pluripotent stem cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'NA', 'melanocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'NA', 'NA', 'NA', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'NA', 'embryonic cell, stem cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'myeloid cell, hematopoietic cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'stem cell, induced pluripotent stem cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'NA', 'cancer cell', 'NA', 'stem cell, connective tissue cell', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'neural cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'stem cell, induced pluripotent stem cell', 'cancer cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'progenitor cell', 'NA', 'NA', 'NA', 'NA', 'epithelial cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell', 'cancer cell, epithelial cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'myeloid cell, hematopoietic cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'neuroblastoma cell, cancer cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell, keratinocyte', 'NA', 'NA', 'epithelial cell', 'cancer cell', 'epithelial cell', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'fibroblast, connective tissue cell', 'epithelial cell', 'NA', 'NA', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'NA', 'cancer cell, epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'epithelial cell', 'epithelial cell, keratinocyte', 'cancer cell, leukocyte, hematopoietic cell', 'smooth muscle cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'embryonic cell, stem cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'embryonic cell', 'NA', 'stem cell, induced pluripotent stem cell', 'stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'stem cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'neural cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'progenitor cell', 'NA', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'neural cell', 'epithelial cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'epithelial cell, keratinocyte', 'T cell, hematopoietic cell, leukocyte', 'cancer cell, epithelial cell', 'stem cell, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'connective tissue cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'neuroblastoma cell, cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'NA', 'NA', 'stem cell, neural cell', 'fibroblast, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'fibroblast, connective tissue cell', 'fibroblast, connective tissue cell', 'neural cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'neuroblastoma cell, cancer cell', 'progenitor cell', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'stem cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'smooth muscle cell', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell', 'cancer cell, epithelial cell', 'NA', 'fibroblast, connective tissue cell', 'NA', 'NA', 'NA', 'epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'neural cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'fibroblast', 'embryonic cell', 'connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'progenitor cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'smooth muscle cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'NA', 'NA', 'NA', 'epithelial cell', 'NA', 'melanocyte', 'NA', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'melanocyte', 'cancer cell, epithelial cell', 'NA', 'cancer cell', 'NA', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'stem cell, induced pluripotent stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'connective tissue cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'epithelial cell', 'fibroblast, connective tissue cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'T cell, hematopoietic cell, leukocyte', 'NA', 'stem cell, induced pluripotent stem cell', 'NA', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'stem cell, neural cell', 'cancer cell, epithelial cell', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'stem cell, connective tissue cell', 'epithelial cell, keratinocyte', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'stem cell, induced pluripotent stem cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'neural cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'embryonic cell, stem cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, epithelial cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'cancer cell', 'cancer cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'stem cell, neural cell', 'cancer cell, epithelial cell', 'T cell, hematopoietic cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'cancer cell', 'cancer cell, epithelial cell', 'epithelial cell', 'epithelial cell', 'T cell, hematopoietic cell, leukocyte', 'NA', 'embryonic cell, stem cell', 'NA', 'embryonic cell, stem cell', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'smooth muscle cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'embryonic cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'stem cell, connective tissue cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'neural cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'embryonic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'connective tissue cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'fibroblast, connective tissue cell', 'smooth muscle cell', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'stem cell, induced pluripotent stem cell', 'NA', 'embryonic cell, stem cell', 'NA', 'epithelial cell', 'NA', 'epithelial cell', 'epithelial cell', 'NA', 'epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'T cell, hematopoietic cell, leukocyte', 'cancer cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'T cell, hematopoietic cell, leukocyte', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'embryonic cell, stem cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'epithelial cell', 'epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'melanocyte', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'epithelial cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'melanocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'embryonic cell, stem cell', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'epithelial cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'stem cell, induced pluripotent stem cell', 'embryonic cell', 'cancer cell, epithelial cell', 'NA', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'stem cell, induced pluripotent stem cell', 'NA', 'stem cell, induced pluripotent stem cell', 'embryonic cell, stem cell', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'stem cell, neural cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'NA', 'NA', 'NA', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'cancer cell', 'neural cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'stem cell, induced pluripotent stem cell', 'NA', 'stem cell, connective tissue cell', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'NA', 'epithelial cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'stem cell, neural cell', 'myeloid cell, hematopoietic cell, leukocyte', 'NA', 'stem cell, neural cell', 'NA', 'progenitor cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'cancer cell, epithelial cell', 'NA', 'stem cell, neural cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'smooth muscle cell', 'NA', 'embryonic cell, stem cell', 'stem cell, connective tissue cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell, induced pluripotent stem cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell, induced pluripotent stem cell', 'NA', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'T cell, hematopoietic cell, leukocyte', 'myeloid cell, hematopoietic cell, leukocyte', 'epithelial cell, keratinocyte', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'cardiocyte', 'NA', 'NA', 'embryonic cell, stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell', 'NA', 'NA', 'epithelial cell', 'progenitor cell', 'neuroblastoma cell, cancer cell', 'fibroblast, connective tissue cell', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'cancer cell', 'NA', 'embryonic cell, stem cell', 'cardiocyte', 'stem cell, induced pluripotent stem cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell, neural cell', 'cancer cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'neural cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'cancer cell', 'NA', 'embryonic cell, stem cell', 'NA', 'embryonic cell, stem cell', 'epithelial cell', 'epithelial cell', 'fibroblast, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'fibroblast, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'NA', 'neural cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'stem cell', 'stem cell, induced pluripotent stem cell', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'NA', 'cancer cell', 'NA', 'embryonic cell, stem cell', 'epithelial cell', 'epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'neuroblastoma cell, cancer cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'NA', 'NA', 'neural cell', 'embryonic cell, stem cell', 'smooth muscle cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'stem cell, induced pluripotent stem cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'fibroblast', 'NA', 'NA', 'NA', 'NA', 'stem cell, induced pluripotent stem cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'neural cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell', 'NA', 'epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'embryonic cell, stem cell', 'NA', 'NA', 'melanocyte', 'NA', 'epithelial cell', 'NA', 'embryonic cell, stem cell', 'fibroblast', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'embryonic cell, stem cell', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'fibroblast, connective tissue cell', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'cancer cell, epithelial cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'fibroblast', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'melanocyte', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell, connective tissue cell', 'NA', 'epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'stem cell, induced pluripotent stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'melanocyte', 'NA', 'NA', 'stem cell, neural cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'NA', 'NA', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'stem cell, neural cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'NA', 'neuroblastoma cell, cancer cell', 'fibroblast, connective tissue cell', 'embryonic cell, stem cell', 'NA', 'connective tissue cell', 'NA', 'NA', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'stem cell, induced pluripotent stem cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'NA', 'myeloid cell, hematopoietic cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'NA', 'neural cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell, keratinocyte', 'NA', 'NA', 'epithelial cell, keratinocyte', 'fibroblast, connective tissue cell', 'NA', 'stem cell', 'NA', 'NA', 'NA', 'epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'cancer cell, epithelial cell', 'melanocyte', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'fibroblast, connective tissue cell', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'stem cell, induced pluripotent stem cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, leukocyte, NK cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell', 'stem cell, neural cell', 'NA', 'NA', 'NA', 'stem cell', 'myeloid cell, hematopoietic cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'T cell, hematopoietic cell, leukocyte', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'neural cell', 'fibroblast, connective tissue cell', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'NA', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'fibroblast', 'NA', 'NA', 'neural cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'NA', 'NA', 'neural cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'NA', 'stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'NA', 'epithelial cell', 'NA', 'neural cell', 'epithelial cell', 'epithelial cell', 'embryonic cell, stem cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'NA', 'NA', 'epithelial cell', 'cancer cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'neuroblastoma cell, cancer cell', 'melanocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'neuroblastoma cell, cancer cell', 'hematopoietic cell, B cell, leukocyte', 'fibroblast, connective tissue cell', 'NA', 'NA', 'stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'T cell, hematopoietic cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell, induced pluripotent stem cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'stem cell, connective tissue cell', 'neural cell', 'myeloid cell, hematopoietic cell, leukocyte', 'NA', 'NA', 'NA', 'NA', 'cancer cell', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'myeloid cell, hematopoietic cell, leukocyte', 'fibroblast, connective tissue cell', 'NA', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'embryonic cell, stem cell', 'T cell, hematopoietic cell, leukocyte', 'NA', 'NA', 'stem cell', 'stem cell, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'epithelial cell', 'embryonic cell, stem cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'embryonic cell, stem cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'epithelial cell', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'stem cell', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell', 'NA', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'NA', 'stem cell, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'progenitor cell', 'cancer cell', 'NA', 'NA', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'stem cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell', 'epithelial cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'T cell, hematopoietic cell, leukocyte', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'stem cell, induced pluripotent stem cell', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'neural cell', 'NA', 'NA', 'NA', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'stem cell, neural cell', 'embryonic cell, stem cell', 'NA', 'epithelial cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'fibroblast, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'melanocyte', 'cancer cell', 'epithelial cell', 'NA', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'NA', 'epithelial cell', 'neural cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'embryonic cell, stem cell', 'NA', 'stem cell, neural cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'neural cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'stem cell, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'stem cell, connective tissue cell', 'cancer cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'smooth muscle cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'embryonic cell, stem cell', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell, keratinocyte', 'NA', 'NA', 'NA', 'NA', 'hematopoietic cell', 'stem cell, induced pluripotent stem cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'stem cell, connective tissue cell', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'stem cell, connective tissue cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'stem cell, induced pluripotent stem cell', 'cancer cell, epithelial cell', 'stem cell, induced pluripotent stem cell', 'melanocyte', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'stem cell, connective tissue cell', 'NA', 'neural cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'fibroblast, connective tissue cell', 'stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'epithelial cell', 'NA', 'fibroblast, connective tissue cell', 'cancer cell', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'NA', 'smooth muscle cell', 'NA', 'embryonic cell, stem cell', 'epithelial cell', 'epithelial cell', 'epithelial cell', 'NA', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'progenitor cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, leukocyte, NK cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell', 'hematopoietic cell', 'epithelial cell', 'cancer cell', 'NA', 'cancer cell', 'epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'fibroblast, connective tissue cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'myeloid cell, hematopoietic cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'stem cell, connective tissue cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'neural cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'epithelial cell', 'stem cell, induced pluripotent stem cell', 'epithelial cell', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'hematopoietic cell', 'NA', 'smooth muscle cell', 'neuroblastoma cell, cancer cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'T cell, hematopoietic cell, leukocyte', 'epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'NA', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'NA', 'stem cell, neural cell', 'epithelial cell', 'epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'stem cell, connective tissue cell', 'cancer cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'NA', 'stem cell, induced pluripotent stem cell', 'epithelial cell, keratinocyte', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'fibroblast, connective tissue cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'neuroblastoma cell, cancer cell', 'NA', 'T cell, hematopoietic cell, leukocyte', 'epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'NA', 'stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, leukocyte, NK cell', 'stem cell, neural cell', 'cancer cell, leukocyte, hematopoietic cell', 'melanocyte', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'NA', 'progenitor cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'stem cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'NA', 'epithelial cell, endothelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'fibroblast, connective tissue cell', 'fibroblast', 'cancer cell, leukocyte, hematopoietic cell', 'fibroblast, connective tissue cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'cancer cell', 'NA', 'stem cell, induced pluripotent stem cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'cancer cell', 'cancer cell', 'NA', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'myeloid cell, hematopoietic cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell, induced pluripotent stem cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'progenitor cell', 'NA', 'neural cell', 'NA', 'epithelial cell', 'NA', 'stem cell, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'fibroblast', 'embryonic cell, stem cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, myoblast', 'NA', 'NA', 'epithelial cell', 'cancer cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell', 'stem cell, connective tissue cell', 'cancer cell, epithelial cell', 'epithelial cell', 'epithelial cell', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'neural cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'fibroblast, connective tissue cell', 'NA', 'cancer cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'embryonic cell, stem cell', 'cancer cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'neural cell', 'epithelial cell', 'NA', 'epithelial cell', 'stem cell, induced pluripotent stem cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'fibroblast, connective tissue cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell', 'cancer cell, epithelial cell', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell, neural cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell', 'T cell, hematopoietic cell, leukocyte', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'embryonic cell, stem cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'embryonic cell, stem cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'stem cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'cancer cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'cancer cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'progenitor cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'smooth muscle cell', 'stem cell, neural cell', 'cardiocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'neural cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'progenitor cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'NA', 'stem cell, induced pluripotent stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'neuroblastoma cell, cancer cell', 'hematopoietic cell, B cell, leukocyte', 'T cell, hematopoietic cell, leukocyte', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'epithelial cell', 'neuroblastoma cell, cancer cell', 'cancer cell, epithelial cell', 'progenitor cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'stem cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'fibroblast, connective tissue cell', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell, keratinocyte', 'NA', 'NA', 'NA', 'epithelial cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'stem cell', 'NA', 'smooth muscle cell', 'fibroblast, connective tissue cell', 'NA', 'fibroblast, connective tissue cell', 'epithelial cell', 'cancer cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'NA', 'embryonic cell', 'NA', 'NA', 'progenitor cell', 'cancer cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'epithelial cell, keratinocyte', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'stem cell, induced pluripotent stem cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'neural cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'stem cell, neural cell', 'neural cell', 'NA', 'stem cell', 'epithelial cell', 'NA', 'epithelial cell', 'embryonic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'neural cell', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'epithelial cell', 'stem cell, neural cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'NA', 'melanocyte', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'stem cell, neural cell', 'stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'stem cell, induced pluripotent stem cell', 'cancer cell, epithelial cell', 'stem cell, connective tissue cell', 'epithelial cell', 'cancer cell', 'cancer cell, epithelial cell', 'cancer cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'epithelial cell, keratinocyte', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'stem cell, induced pluripotent stem cell', 'cancer cell, epithelial cell', 'NA', 'epithelial cell', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'fibroblast, connective tissue cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'melanocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'fibroblast, connective tissue cell', 'cardiocyte', 'NA', 'NA', 'NA', 'neural cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'epithelial cell', 'epithelial cell', 'NA', 'cancer cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'T cell, hematopoietic cell, leukocyte', 'NA', 'embryonic cell, stem cell', 'NA', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'T cell, hematopoietic cell, leukocyte', 'stem cell, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'progenitor cell', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'epithelial cell', 'stem cell', 'NA', 'NA', 'fibroblast', 'epithelial cell', 'embryonic cell, stem cell', 'stem cell, induced pluripotent stem cell', 'stem cell, induced pluripotent stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'stem cell, neural cell', 'hematopoietic cell, B cell, leukocyte', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'progenitor cell, hematopoietic cell, myeloid cell', 'stem cell, connective tissue cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'NA', 'epithelial cell', 'NA', 'embryonic cell, stem cell', 'hematopoietic cell, B cell, leukocyte', 'stem cell, induced pluripotent stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'stem cell', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'stem cell, induced pluripotent stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'stem cell, connective tissue cell', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell', 'embryonic cell', 'NA', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'stem cell, connective tissue cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'cancer cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'epithelial cell', 'NA', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'T cell, hematopoietic cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'stem cell', 'NA', 'NA', 'NA', 'epithelial cell', 'NA', 'embryonic cell, stem cell', 'epithelial cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'cancer cell', 'connective tissue cell', 'epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'embryonic cell, stem cell', 'epithelial cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'epithelial cell', 'epithelial cell', 'cancer cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'epithelial cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'NA', 'epithelial cell', 'NA', 'epithelial cell, keratinocyte', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'smooth muscle cell', 'T cell, hematopoietic cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'myeloid cell, hematopoietic cell, leukocyte', 'NA', 'fibroblast, connective tissue cell', 'stem cell, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell', 'hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'neuroblastoma cell, cancer cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'stem cell, induced pluripotent stem cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'myeloid cell, hematopoietic cell, monocyte, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'stem cell, neural cell', 'NA', 'NA', 'stem cell, neural cell', 'cancer cell, epithelial cell', 'epithelial cell', 'melanocyte', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'NA', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'fibroblast, connective tissue cell', 'NA', 'hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'stem cell, connective tissue cell', 'cancer cell, epithelial cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'cancer cell, epithelial cell', 'epithelial cell', 'stem cell, neural cell', 'NA', 'fibroblast, connective tissue cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'neural cell', 'embryonic cell, stem cell', 'NA', 'embryonic cell, stem cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'neural cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'neural cell', 'neural cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'neural cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'embryonic cell', 'NA', 'NA', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'stem cell, connective tissue cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell', 'myeloid cell, hematopoietic cell, leukocyte', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'NA', 'epithelial cell', 'fibroblast, connective tissue cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell, connective tissue cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'T cell, hematopoietic cell, leukocyte', 'NA', 'NA', 'NA', 'neural cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'stem cell, induced pluripotent stem cell', 'stem cell', 'NA', 'neural cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'embryonic cell, stem cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'stem cell, induced pluripotent stem cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell', 'cancer cell, epithelial cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'neural cell', 'embryonic cell, stem cell', 'epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell, keratinocyte', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'NA', 'NA', 'epithelial cell', 'cancer cell', 'stem cell, induced pluripotent stem cell', 'cancer cell', 'NA', 'embryonic cell, stem cell', 'epithelial cell', 'NA', 'epithelial cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell', 'NA', 'epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'hematopoietic cell, B cell, leukocyte', 'hematopoietic cell, B cell, leukocyte', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'epithelial cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'cardiocyte', 'epithelial cell', 'fibroblast, connective tissue cell', 'cancer cell, epithelial cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'cancer cell, epithelial cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'embryonic cell, stem cell', 'stem cell, induced pluripotent stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'neural cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'stem cell, induced pluripotent stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'epithelial cell', 'neuroblastoma cell, cancer cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'T cell, hematopoietic cell, leukocyte', 'embryonic cell, stem cell', 'cancer cell', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'embryonic cell, stem cell', 'NA', 'epithelial cell', 'NA', 'T cell, hematopoietic cell, leukocyte', 'NA', 'neural cell', 'cancer cell, leukocyte, hematopoietic cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'embryonic cell', 'NA', 'NA', 'NA', 'embryonic cell, stem cell', 'NA', 'stem cell, induced pluripotent stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'neural cell', 'fibroblast, connective tissue cell', 'stem cell', 'hematopoietic cell, B cell, leukocyte', 'progenitor cell, hematopoietic cell, myeloid cell', 'NA', 'NA', 'cancer cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'epithelial cell', 'NA', 'NA', 'epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'cancer cell, B cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell, stem cell', 'stem cell, connective tissue cell', 'epithelial cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell', 'epithelial cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'NA', 'fibroblast, connective tissue cell', 'NA', 'T cell, hematopoietic cell, leukocyte', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'NA', 'NA', 'NA', 'stem cell, connective tissue cell', 'NA', 'fibroblast', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'neural cell', 'fibroblast, connective tissue cell', 'NA', 'epithelial cell', 'epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'stem cell, induced pluripotent stem cell', 'cancer cell, epithelial cell', 'epithelial cell', 'epithelial cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'epithelial cell', 'hematopoietic cell, B cell, leukocyte', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'fibroblast', 'cancer cell, epithelial cell', 'NA', 'cancer cell', 'fibroblast, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'neuroblastoma cell, cancer cell', 'NA', 'stem cell, induced pluripotent stem cell', 'fibroblast, connective tissue cell', 'NA', 'epithelial cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'T cell, hematopoietic cell, leukocyte', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'neural cell', 'NA', 'NA', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'embryonic cell, stem cell', 'cancer cell, epithelial cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'neural cell', 'NA', 'NA', 'NA', 'NA', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'embryonic cell', 'stem cell, induced pluripotent stem cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell', 'cancer cell, epithelial cell', 'neural cell', 'NA', 'NA', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'NA', 'hematopoietic cell, leukocyte, NK cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'stem cell, neural cell', 'NA', 'NA', 'stem cell, induced pluripotent stem cell', 'fibroblast, connective tissue cell', 'NA', 'NA', 'cancer cell', 'NA', 'NA', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'cancer cell', 'neuroblastoma cell, cancer cell', 'cancer cell, epithelial cell', 'cancer cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'epithelial cell', 'NA', 'cancer cell, epithelial cell', 'NA', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'fibroblast', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'hematopoietic cell', 'stem cell', 'NA', 'NA', 'stem cell, neural cell', 'NA', 'NA', 'cancer cell', 'stem cell', 'embryonic cell, stem cell', 'fibroblast, connective tissue cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'progenitor cell, hematopoietic cell, myeloid cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'embryonic cell, stem cell', 'neural cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'cancer cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, epithelial cell', 'hematopoietic cell, T cell, leukocyte, CD8+ T cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'hematopoietic cell, leukocyte, NK cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'cancer cell, epithelial cell', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'epithelial cell', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'hematopoietic cell, mononuclear cell, leukocyte', 'epithelial cell, keratinocyte', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'melanocyte', 'NA', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'T cell, hematopoietic cell, leukocyte', 'NA', 'hematopoietic cell, B cell, leukocyte', 'NA', 'neuroblastoma cell, cancer cell', 'NA', 'NA', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'hematopoietic cell', 'hematopoietic cell, B cell, leukocyte', 'NA', 'epithelial cell', 'NA', 'hematopoietic cell, B cell, leukocyte', 'neuroblastoma cell, cancer cell', 'epithelial cell', 'NA', 'NA', 'cancer cell, epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'progenitor cell, hematopoietic cell, myeloid cell', 'stem cell, induced pluripotent stem cell', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'NA', 'NA', 'NA', 'neural cell', 'NA', 'NA', 'epithelial cell', 'NA', 'cancer cell, epithelial cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, epithelial cell', 'stem cell, induced pluripotent stem cell', 'hematopoietic cell, B cell, leukocyte', 'cancer cell, leukocyte, hematopoietic cell', 'epithelial cell', 'NA', 'cancer cell', 'NA', 'cancer cell, epithelial cell', 'cancer cell, epithelial cell', 'NA', 'NA', 'stem cell, induced pluripotent stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'cancer cell, epithelial cell', 'embryonic cell, stem cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'hematopoietic cell, mononuclear cell, leukocyte', 'NA', 'hematopoietic cell, B cell, leukocyte', 'epithelial cell', 'cancer cell, epithelial cell', 'NA', 'cardiocyte', 'NA', 'NA', 'NA', 'cancer cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'stem cell, induced pluripotent stem cell', 'epithelial cell', 'cancer cell', 'epithelial cell', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'cancer cell, leukocyte, hematopoietic cell', 'NA', 'CD4+ T cell, hematopoietic cell, T cell, leukocyte', 'NA', 'NA', 'cancer cell, epithelial cell', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA']
['brain', 'brain', 'extraembryonic component', 'uterus', 'skin of body, connective tissue', 'skin of body, connective tissue', 'skin of body, connective tissue', 'lung, connective tissue', 'skin of body, connective tissue', 'brain', 'brain', 'blood, bodily fluid', 'bodily fluid, blood', 'blood, bodily fluid', 'blood, bodily fluid', 'lymphoid tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'blood, bodily fluid', 'embryo', 'embryo', 'embryo', 'heart', 'epithelium, kidney', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo, extraembryonic component, placenta', 'blood vessel, vein, epithelium, vasculature, extraembryonic component, placenta', 'connective tissue', 'skin of body', 'skin of body', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'prostate gland, epithelium', 'prostate gland, epithelium', 'epithelium, mammary gland, exocrine gland', 'brain', 'epithelium, skin of body', 'blood, bodily fluid', 'epithelium, skin of body', 'connective tissue', 'musculature of body', 'epithelium, mammary gland, exocrine gland', 'epithelium', 'lung', 'connective tissue, skin of body', 'connective tissue, lung', 'connective tissue, skin of body', 'connective tissue, mouth', 'connective tissue, skin of body', 'connective tissue, blood vessel, arterial blood vessel, vasculature', 'brain', 'penis, connective tissue, skin of body', 'epithelium, bone element, bone marrow', 'bone element, connective tissue, bone marrow', 'bone element, connective tissue, bone marrow', 'intestine, colon, large intestine', 'bodily fluid, blood', 'bodily fluid, blood', 'blood, bodily fluid', 'bone element, blood, bodily fluid, bone marrow', 'connective tissue, skin of body', 'connective tissue, skin of body', 'bodily fluid, blood', 'blood, bodily fluid', 'bodily fluid, blood', 'blood, bodily fluid', 'embryo', 'musculature of body, heart', 'NA', 'embryo', 'heart, musculature of body', 'embryo', 'brain', 'spinal cord', 'brain', 'extraembryonic component, epithelium, placenta', 'vasculature, epithelium, blood vessel, brain', 'brain, connective tissue', 'vasculature, brain', 'heart, connective tissue', 'connective tissue, heart', 'heart, musculature of body', 'connective tissue, eye', 'vasculature, brain, epithelium', 'intestine, epithelium, colon, large intestine', 'epithelium, esophagus', 'epithelium, uterus', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue, skin of body, penis', 'penis, connective tissue', 'connective tissue, mouth', 'eye, epithelium', 'blood, bodily fluid', 'epithelium, exocrine gland, mammary gland', 'exocrine gland, connective tissue, mammary gland', 'epithelium, blood vessel, vasculature, skin of body', 'blood vessel, vasculature, epithelium, skin of body', 'blood vessel, vasculature, epithelium, skin of body', 'blood vessel, vasculature, skin of body, lymphatic vessel, epithelium', 'blood vessel, lymphatic vessel, epithelium, vasculature, skin of body', 'blood vessel, vasculature, epithelium, skin of body', 'blood vessel, lung, vasculature, epithelium', 'blood vessel, lung, vasculature, epithelium', 'epithelium', 'arterial blood vessel, epithelium, blood vessel, vasculature', 'connective tissue, blood vessel, arterial blood vessel, vasculature', 'connective tissue, mouth', 'connective tissue, lung', 'epithelium, kidney', 'epithelium, kidney', 'vasculature, epithelium, kidney', 'eye, epithelium', 'musculature of body', 'musculature of body', 'blood vessel, vein, epithelium, vasculature, extraembryonic component, placenta', 'connective tissue, placenta, extraembryonic component', 'bodily fluid, blood', 'blood, bodily fluid', 'bodily fluid, blood', 'bodily fluid, blood', 'musculature of body', 'musculature of body', 'epithelium, prostate gland', 'brain', 'epithelium, mammary gland, exocrine gland', 'epithelium, exocrine gland, mammary gland', 'epithelium, mammary gland, exocrine gland', 'blood, bodily fluid', 'bone element, bone marrow', 'spinal cord, brain', 'lung, epithelium, bronchus', 'connective tissue, skin of body', 'penis, connective tissue, skin of body', 'epithelium, skin of body', 'connective tissue, lung', 'epithelium, testis, gonad', 'pancreas, epithelium', 'epithelium, prostate gland', 'epithelium, skin of body', 'epithelium, kidney', 'lung, epithelium, bronchus', 'epithelium, brain', 'brain', 'musculature of body', 'mammary gland, epithelium, exocrine gland', 'bodily fluid, blood', 'blood, bodily fluid', 'blood, bodily fluid', 'blood, bodily fluid', 'blood, bodily fluid', 'bodily fluid, blood', 'blood, bodily fluid', 'blood, bodily fluid', 'blood, bodily fluid', 'eye', 'lung, connective tissue', 'lung, connective tissue', 'epithelium, connective tissue', 'epithelium, skin of body', 'musculature of body, connective tissue', 'epithelium, lung', 'brain', 'skin of body', 'lung', 'epithelium, skin of body', 'musculature of body', 'skin of prepuce of penis, skin of body, penis', 'kidney', 'brain', 'kidney, ureter', 'embryo', 'kidney', 'lymph node, blood, bodily fluid', 'bodily fluid, blood', 'kidney', 'brain', 'limb, musculature of body', 'musculature of body', 'extraembryonic component, placenta', 'epithelium, skin of body, penis', 'kidney', 'kidney, epithelium', 'intestine, colon, large intestine', 'kidney', 'blood, bodily fluid', 'large intestine, intestine', 'prostate gland', 'limb, musculature of body', 'adrenal gland, endocrine gland', 'vasculature, arterial blood vessel, heart, blood vessel', 'stomach', 'limb, musculature of body', 'heart', 'kidney', 'heart', 'musculature of body', 'lung', 'arterial blood vessel, limb, blood vessel, vasculature', 'endocrine gland, adrenal gland', 'kidney', 'stomach', 'intestine, small intestine', 'bone element', 'skin of body', 'kidney', 'stomach', 'kidney', 'blood, bodily fluid', 'kidney', 'musculature of body', 'blood, bodily fluid', 'intestine, small intestine', 'brain', 'stomach', 'kidney', 'extraembryonic component, embryo', 'bone marrow, bone element', 'eye', 'kidney', 'placenta, extraembryonic component', 'stomach', 'intestine, small intestine', 'large intestine, intestine', 'kidney, epithelium', 'kidney', 'lung', 'musculature of body', 'lung', 'spinal cord', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue, skin of body, penis', 'adipose tissue, connective tissue', 'intestine, large intestine', 'heart', 'kidney', 'brain', 'endocrine gland, thyroid gland', 'endocrine gland, exocrine gland, liver', 'stomach', 'thymus, endocrine gland, immune organ', 'lung', 'embryo', 'limb, musculature of body', 'blood, bodily fluid', 'limb, musculature of body', 'musculature of body, limb', 'musculature of body, limb', 'stomach', 'musculature of body', 'heart', 'epithelium, kidney', 'connective tissue, skin of body', 'pancreas', 'extraembryonic component, embryo', 'kidney', 'connective tissue, skin of body', 'brain', 'intestine, small intestine', 'heart', 'bone marrow, bone element', 'adrenal gland, endocrine gland', 'musculature of body', 'limb, musculature of body', 'lymphoid tissue, intestine', 'extraembryonic component, connective tissue', 'stomach', 'intestine, large intestine', 'lung', 'skin of body', 'intestine, epithelium, colon, large intestine', 'limb, connective tissue, skin of body', 'musculature of body', 'pancreas', 'brain', 'lung', 'pancreas', 'epithelium, exocrine gland, mammary gland', 'musculature of body, limb', 'uterus', 'connective tissue, penis', 'adipose tissue, connective tissue', 'stomach', 'bodily fluid, blood', 'connective tissue, skin of body, penis', 'kidney', 'kidney', 'kidney, epithelium', 'kidney, ureter', 'skin of prepuce of penis, skin of body, penis', 'kidney', 'lung', 'lung', 'kidney', 'kidney', 'limb, musculature of body', 'bone marrow, bone element', 'limb, musculature of body', 'limb, bone element, skeleton', 'embryo', 'testis, gonad', 'embryo', 'heart', 'bone element, bone marrow', 'stomach', 'limb, musculature of body', 'limb, musculature of body', 'kidney', 'musculature of body', 'limb, musculature of body', 'lung', 'blood, bodily fluid', 'kidney', 'limb, musculature of body', 'heart', 'brain', 'limb, musculature of body', 'heart', 'bone element, bone marrow', 'blood, bodily fluid', 'musculature of body', 'ureter, kidney', 'brain', 'lung', 'heart', 'kidney, ureter', 'bone element, bone marrow', 'lymphoid tissue, intestine', 'connective tissue, skin of body', 'blood, bodily fluid', 'kidney', 'limb, arterial blood vessel, vasculature, blood vessel', 'kidney', 'thymus, endocrine gland, immune organ', 'brain', 'brain', 'musculature of body', 'limb, musculature of body', 'limb, musculature of body', 'musculature of body', 'skin of body', 'NA', 'blood, bodily fluid', 'epithelium, endocrine gland, exocrine gland, liver', 'kidney', 'heart', 'large intestine, intestine', 'blood, bodily fluid', 'skin of body', 'blood, bodily fluid', 'blood, bodily fluid', 'brain', 'skin of body', 'skin of prepuce of penis, skin of body, penis', 'limb, musculature of body', 'epithelium, exocrine gland, mammary gland', 'colon, large intestine, intestine', 'heart', 'nerve, limb', 'connective tissue', 'musculature of body', 'heart', 'bodily fluid, blood', 'kidney', 'endocrine gland, adrenal gland', 'bodily fluid, blood', 'brain', 'pancreas', 'kidney', 'blood, bodily fluid', 'bone element, bone marrow', 'musculature of body', 'ovary, gonad', 'intestine, epithelium, colon, large intestine', 'limb, bone element, skeleton', 'kidney, epithelium', 'penis', 'embryo', 'vagina', 'kidney', 'musculature of body', 'musculature of body', 'skin of prepuce of penis, skin of body, penis', 'lung', 'lung', 'intestine, large intestine', 'lung', 'limb, bone element, skeleton', 'blood, bodily fluid', 'limb, musculature of body', 'lymphoid tissue, intestine', 'bone marrow, bone element', 'lung', 'intestine, small intestine', 'blood, bodily fluid', 'colon, large intestine, intestine', 'lung', 'bone marrow, bone element', 'eye', 'brain', 'musculature of body', 'connective tissue, lung', 'lung', 'lung', 'blood, bodily fluid', 'lung', 'blood, bodily fluid', 'brain', 'bone marrow, bone element', 'extraembryonic component, placenta', 'kidney', 'heart', 'intestine, small intestine', 'intestine, epithelium, colon, large intestine', 'brain', 'lung', 'colon, large intestine, intestine', 'brain', 'stomach', 'extraembryonic component', 'limb, musculature of body', 'epithelium, kidney', 'limb, musculature of body', 'penis', 'stomach', 'pancreas', 'kidney', 'pancreas', 'intestine, large intestine', 'limb', 'heart', 'heart', 'kidney, ureter', 'lung', 'thymus, endocrine gland, immune organ', 'ovary, gonad', 'kidney', 'endocrine gland, thymus, immune organ', 'placenta, extraembryonic component', 'penis, connective tissue', 'kidney', 'extraembryonic component, placenta', 'placenta, extraembryonic component', 'kidney', 'exocrine gland, endocrine gland, liver', 'skin of body', 'mouth, tongue', 'skin of body', 'endocrine gland, exocrine gland, liver', 'intestine, large intestine', 'blood, bodily fluid', 'bone marrow, bone element', 'intestine, small intestine', 'blood, bodily fluid', 'brain', 'extraembryonic component, placenta', 'kidney', 'lung', 'brain', 'musculature of body', 'lung', 'kidney', 'embryo, extraembryonic component', 'blood, bodily fluid', 'intestine, small intestine', 'brain', 'pancreas', 'adrenal gland, endocrine gland', 'epithelium, breast', 'kidney', 'kidney', 'stomach', 'blood, bodily fluid', 'spinal cord', 'limb, musculature of body', 'kidney', 'bone marrow, bone element', 'bone element', 'eye', 'limb, musculature of body', 'connective tissue, skin of body', 'ear, spinal cord, brain, eye', 'stomach', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'kidney, epithelium', 'epithelium, lung', 'lung', 'bone marrow, bone element', 'stomach', 'blood, bodily fluid', 'kidney', 'skin of body', 'extraembryonic component, placenta', 'brain', 'limb, musculature of body', 'kidney', 'endocrine gland, thyroid gland', 'bodily fluid, blood', 'heart', 'large intestine, intestine', 'connective tissue, skin of body', 'kidney', 'bodily fluid, blood', 'embryo', 'spinal cord', 'spleen, immune organ', 'lung', 'endocrine gland, thymus, immune organ', 'bodily fluid, blood', 'stomach', 'connective tissue, penis', 'blood, bodily fluid', 'endocrine gland, thyroid gland', 'adrenal gland, endocrine gland', 'musculature of body', 'musculature of body, connective tissue', 'blood, bodily fluid', 'heart', 'brain', 'ovary, gonad', 'embryo', 'blood, bodily fluid', 'bodily fluid, blood', 'epithelium, skin of body, penis', 'stomach', 'adrenal gland, endocrine gland', 'gonad, testis', 'connective tissue', 'vagina', 'bone marrow, bone element', 'heart', 'bone element, bone marrow', 'heart', 'mammary gland, epithelium, exocrine gland', 'kidney, ureter', 'limb, musculature of body', 'embryo', 'nerve, limb', 'kidney', 'tongue, mouth', 'colon, large intestine, intestine', 'ureter, kidney', 'large intestine, intestine', 'kidney', 'kidney', 'skin of body', 'brain', 'kidney', 'heart', 'thymus, endocrine gland, immune organ', 'stomach', 'eye', 'epithelium, esophagus', 'kidney, epithelium', 'musculature of body', 'spinal cord', 'epithelium, mammary gland, exocrine gland', 'colon, large intestine, intestine', 'kidney', 'embryo', 'large intestine, intestine', 'large intestine, intestine', 'extraembryonic component, placenta', 'lung', 'heart', 'limb, bone element, skeleton', 'epithelium, brain', 'extraembryonic component, embryo', 'urinary bladder', 'intestine, epithelium, colon, large intestine', 'limb', 'eye', 'extraembryonic component, connective tissue', 'lung', 'brain', 'limb, musculature of body', 'kidney', 'brain', 'endocrine gland, thymus, immune organ', 'blood, bodily fluid', 'musculature of body, heart', 'blood, bodily fluid', 'blood, bodily fluid', 'lung', 'lung', 'lung', 'adrenal gland, endocrine gland', 'kidney', 'immune organ, spleen', 'kidney', 'vasculature, arterial blood vessel, blood vessel', 'ovary, gonad', 'blood, bodily fluid', 'heart, connective tissue', 'adrenal gland, endocrine gland', 'large intestine, intestine', 'brain', 'lung', 'intestine, small intestine', 'limb, musculature of body', 'skin of body, limb', 'adrenal gland, endocrine gland', 'endocrine gland, adrenal gland', 'limb, musculature of body', 'kidney', 'kidney', 'large intestine, intestine', 'kidney', 'kidney', 'limb, musculature of body', 'endocrine gland, thymus, immune organ', 'blood, bodily fluid', 'endocrine gland, thyroid gland', 'spinal cord', 'heart', 'kidney', 'kidney', 'heart', 'embryo', 'bodily fluid, blood', 'kidney', 'lung', 'stomach', 'intestine, small intestine', 'kidney', 'brain', 'lung', 'limb, musculature of body', 'bodily fluid, blood', 'limb, musculature of body', 'lung', 'kidney', 'stomach', 'embryo', 'musculature of body, esophagus', 'intestine, small intestine', 'heart', 'brain', 'brain', 'lung', 'limb, musculature of body', 'limb, musculature of body', 'kidney', 'lung', 'kidney', 'lymphoid tissue, intestine', 'kidney', 'prostate gland', 'epithelium, uterus', 'lung', 'endocrine gland, thymus, immune organ', 'NA', 'extraembryonic component, embryo', 'lung', 'embryo', 'intestine, small intestine', 'spinal cord', 'kidney', 'limb, bone element, skeleton', 'testis, gonad', 'colon, large intestine, intestine', 'kidney, ureter', 'lung', 'brain', 'kidney, epithelium, blood vessel, vasculature', 'placenta, extraembryonic component', 'kidney', 'arterial blood vessel, heart, vasculature, blood vessel', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, skin of body', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'embryo', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'musculature of body', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, endocrine gland, exocrine gland, liver', 'musculature of body', 'brain, spinal cord', 'brain, spinal cord', 'brain, spinal cord', 'bodily fluid, blood', 'bodily fluid, blood', 'musculature of body', 'musculature of body', 'musculature of body', 'epithelium, uterus', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'connective tissue', 'connective tissue', 'connective tissue', 'connective tissue', 'connective tissue', 'connective tissue', 'skin of body, connective tissue', 'skin of body, connective tissue', 'skin of body, connective tissue', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, uterus', 'bodily fluid, blood', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'musculature of body', 'epithelium, uterus', 'epithelium, uterus', 'connective tissue', 'connective tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, skin of body', 'epithelium, skin of body', 'epithelium, skin of body', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'brain, spinal cord', 'brain, spinal cord', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'skin of body, connective tissue', 'lung, connective tissue', 'connective tissue', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'lung', 'lung', 'bodily fluid, blood', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, uterus', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'connective tissue', 'musculature of body', 'bodily fluid, blood', 'embryo', 'bodily fluid, blood', 'lung', 'embryo', 'embryo', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'lung', 'lung', 'lung', 'lung', 'lung', 'lung', 'lung', 'bodily fluid, blood', 'embryo', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'embryo', 'embryo', 'bodily fluid, blood', 'lung', 'lung', 'bodily fluid, blood', 'brain, epithelium', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, uterus', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'lung', 'lung', 'lung', 'lung', 'lung', 'bodily fluid, blood', 'embryo', 'embryo', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'lung', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'uterus', 'uterus', 'embryo', 'uterus', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, pancreas', 'brain, connective tissue', 'lung', 'epithelium, mammary gland, exocrine gland', 'lung', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'uterus', 'bodily fluid, blood', 'embryo', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'uterus', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'brain', 'brain', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'epithelium, colon, large intestine, intestine', 'epithelium, uterus', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, pancreas', 'brain, connective tissue', 'brain', 'brain', 'brain', 'brain, connective tissue', 'lung', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'brain, epithelium', 'lung', 'lung', 'lung', 'lung', 'lung', 'lung', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, mammary gland, exocrine gland', 'uterus', 'brain', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'brain, connective tissue', 'lung', 'lung', 'lung', 'uterus', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'lung', 'lung', 'lung', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'lung', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, colon, large intestine, intestine', 'epithelium, colon, large intestine, intestine', 'brain', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'NA', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'embryo', 'prostate gland, epithelium', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'brain', 'lung', 'epithelium, skin of body', 'immune organ, spleen', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'lung', 'skin of body, connective tissue', 'skin of body, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'skin of body, connective tissue', 'skin of body, connective tissue', 'connective tissue, mouth', 'connective tissue, mouth', 'skin of body, connective tissue', 'skin of body, connective tissue', 'connective tissue, vasculature, arterial blood vessel, blood vessel', 'connective tissue, vasculature, arterial blood vessel, blood vessel', 'brain', 'brain', 'connective tissue, skin of body, penis', 'connective tissue, skin of body, penis', 'connective tissue, skin of body, penis', 'connective tissue, skin of body, penis', 'colon, large intestine, intestine', 'colon, large intestine, intestine', 'colon, large intestine, intestine', 'colon, large intestine, intestine', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'heart, musculature of body', 'embryo', 'heart, musculature of body', 'NA', 'embryo', 'heart, musculature of body', 'heart, musculature of body', 'NA', 'embryo', 'heart, musculature of body', 'NA', 'heart, musculature of body', 'embryo', 'embryo', 'embryo', 'spinal cord', 'spinal cord', 'brain', 'brain', 'brain, epithelium, vasculature, blood vessel', 'brain, epithelium, vasculature, blood vessel', 'heart, connective tissue', 'heart, connective tissue', 'heart, connective tissue', 'heart, musculature of body', 'heart, musculature of body', 'brain, vasculature, epithelium', 'brain, vasculature, epithelium', 'epithelium, colon, large intestine, intestine', 'epithelium, colon, large intestine, intestine', 'esophagus, epithelium', 'esophagus, epithelium', 'epithelium, kidney', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue, skin of body, penis', 'connective tissue, skin of body, penis', 'connective tissue, penis', 'connective tissue, penis', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'mammary gland, exocrine gland, connective tissue', 'mammary gland, exocrine gland, connective tissue', 'connective tissue, vasculature, arterial blood vessel, blood vessel', 'connective tissue, vasculature, arterial blood vessel, blood vessel', 'lung, connective tissue', 'lung, connective tissue', 'epithelium, kidney', 'epithelium, kidney', 'epithelium, kidney', 'epithelium, kidney', 'epithelium, eye', 'epithelium, eye', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'extraembryonic component, placenta, connective tissue', 'extraembryonic component, placenta, connective tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'prostate gland, epithelium', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'bone marrow, bone element', 'bone marrow, bone element', 'connective tissue, skin of body, penis', 'connective tissue, skin of body, penis', 'epithelium, skin of body', 'epithelium, skin of body', 'lung, connective tissue', 'lung, connective tissue', 'epithelium, pancreas', 'epithelium, kidney', 'epithelium, kidney', 'epithelium, lung, bronchus', 'epithelium, lung, bronchus', 'epithelium, lung, bronchus', 'brain, epithelium', 'brain', 'brain', 'brain', 'musculature of body', 'eye', 'eye', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung', 'lung', 'lung', 'lung', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'embryo', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, uterus', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'lung, connective tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'brain', 'brain', 'brain', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'embryo', 'epithelium, colon, large intestine, intestine', 'epithelium, colon, large intestine, intestine', 'epithelium, kidney', 'epithelium, kidney', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, testis, gonad', 'epithelium, testis, gonad', 'epithelium, testis, gonad', 'epithelium, testis, gonad', 'epithelium, testis, gonad', 'epithelium, testis, gonad', 'epithelium, testis, gonad', 'epithelium, testis, gonad', 'epithelium, pancreas', 'epithelium, pancreas', 'epithelium, pancreas', 'epithelium, pancreas', 'bone marrow, bone element', 'bone marrow, bone element', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'lymphoid tissue', 'epithelium, bone marrow, bone element', 'epithelium, bone marrow, bone element', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, kidney', 'bodily fluid, blood', 'epithelium, pancreas', 'epithelium, pancreas', 'brain', 'brain', 'brain', 'brain', 'NA', 'lung, connective tissue', 'kidney', 'lung', 'heart, musculature of body', 'heart', 'stomach', 'musculature of body', 'lung, connective tissue', 'esophagus, epithelium', 'stomach, musculature of body', 'connective tissue', 'colon, large intestine, intestine', 'bodily fluid, blood', 'epithelium, kidney', 'lung, connective tissue', 'adipose tissue, connective tissue', 'stomach', 'bodily fluid, blood', 'bodily fluid, blood', 'lymphoid tissue, intestine', 'bodily fluid, blood', 'embryo, extraembryonic component', 'epithelium, kidney', 'connective tissue', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'skin of body, limb, connective tissue', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'kidney', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'bone marrow, bone element', 'colon, large intestine, intestine', 'brain', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'bone marrow, bone element', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'connective tissue', 'epithelium, skin of body, penis', 'adrenal gland, endocrine gland', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'vasculature, arterial blood vessel, blood vessel', 'epithelium, endocrine gland, exocrine gland, liver', 'exocrine gland, endocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'brain', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'epithelium, kidney', 'NA', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'epithelium, kidney', 'connective tissue, skin of body, penis', 'epithelium, kidney', 'exocrine gland, endocrine gland, liver', 'epithelium, kidney', 'bodily fluid, blood', 'embryo', 'epithelium, kidney', 'brain', 'heart', 'musculature of body', 'bodily fluid, blood', 'colon, large intestine, intestine', 'bodily fluid, blood', 'stomach, musculature of body', 'skin of body', 'epithelium, skin of body, penis', 'lung', 'bodily fluid, blood', 'prostate gland', 'epithelium, kidney', 'NA', 'epithelium, mammary gland, exocrine gland', 'heart', 'extraembryonic component, placenta', 'bodily fluid, blood', 'immune organ, spleen', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'adrenal gland, endocrine gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'brain', 'adipose tissue, connective tissue', 'stomach', 'lung', 'bodily fluid, blood', 'paraythroid gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'skin of body', 'paraythroid gland', 'esophagus', 'epithelium, breast', 'embryo', 'embryo, extraembryonic component', 'pancreas', 'stomach, musculature of body', 'spinal cord', 'bodily fluid, blood', 'embryo', 'embryo', 'ovary, gonad', 'bodily fluid, blood', 'skin of body', 'exocrine gland, endocrine gland, liver', 'bone marrow, bone element', 'lung, connective tissue', 'embryo, extraembryonic component', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'stomach', 'NA', 'lung, connective tissue', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'brain', 'brain', 'colon, large intestine, intestine', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'embryo, extraembryonic component', 'NA', 'bone marrow, bone element', 'skin of body', 'epithelium, colon, large intestine, intestine', 'testis, gonad', 'extraembryonic component, placenta', 'epithelium, endocrine gland, exocrine gland, liver', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'embryo', 'colon, large intestine, intestine', 'penis', 'embryo', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'NA', 'adrenal gland, endocrine gland', 'urinary bladder', 'epithelium, endocrine gland, exocrine gland, liver', 'lung, connective tissue', 'small intestine, intestine', 'large intestine, intestine', 'pancreas', 'lung, connective tissue', 'epithelium, mammary gland, exocrine gland', 'esophagus, epithelium', 'embryo', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'brain', 'small intestine, intestine', 'esophagus, epithelium', 'brain', 'bodily fluid, blood', 'bodily fluid, blood, lymph node', 'epithelium, exocrine gland, mouth', 'bodily fluid, blood', 'bone marrow, bone element', 'skin of body', 'pancreas', 'small intestine, intestine', 'epithelium, mammary gland, exocrine gland', 'embryo', 'endocrine gland, thyroid gland', 'lung', 'brain', 'connective tissue', 'urinary bladder', 'epithelium, kidney', 'bodily fluid, blood', 'vasculature, arterial blood vessel, blood vessel', 'brain, spinal cord, eye, ear', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'heart', 'extraembryonic component, placenta', 'epithelium, mammary gland, exocrine gland', 'lung', 'skin of prepuce of penis, skin of body, penis', 'lung', 'heart', 'bodily fluid, blood', 'lung', 'NA', 'colon, large intestine, intestine', 'brain', 'vasculature, arterial blood vessel, blood vessel', 'brain', 'epithelium, kidney', 'musculature of body, limb', 'epithelium, endocrine gland, exocrine gland, liver', 'bone marrow, bone element', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'small intestine, intestine', 'heart', 'extraembryonic component, placenta', 'esophagus, musculature of body', 'brain', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, skin of body, penis', 'small intestine, intestine', 'heart', 'epithelium, kidney', 'bone marrow, bone element', 'epithelium, kidney', 'brain', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'immune organ, spleen', 'esophagus, epithelium', 'bodily fluid, blood', 'connective tissue, skin of body, penis', 'epithelium, kidney', 'exocrine gland, endocrine gland, liver', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'embryo, extraembryonic component', 'epithelium, endocrine gland, exocrine gland, liver', 'bone marrow, bone element', 'adipose tissue, connective tissue', 'colon, large intestine, intestine', 'vasculature, arterial blood vessel, blood vessel', 'stomach', 'spinal cord', 'stomach, musculature of body', 'NA', 'bodily fluid, blood', 'heart', 'exocrine gland, endocrine gland, liver', 'brain', 'bodily fluid, blood', 'paraythroid gland', 'bodily fluid, blood', 'heart', 'immune organ, spleen', 'bodily fluid, blood', 'musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'lung, connective tissue', 'esophagus', 'NA', 'stomach, musculature of body', 'adipose tissue, connective tissue', 'epithelium, mammary gland, exocrine gland', 'epithelium, skin of body, penis', 'bodily fluid, blood', 'musculature of body', 'epithelium, kidney', 'bodily fluid, blood', 'stomach, musculature of body', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, colon, large intestine, intestine', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, colon, large intestine, intestine', 'brain', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'esophagus, musculature of body', 'kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'skin of body, limb, connective tissue', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'stomach, musculature of body', 'embryo', 'embryo, extraembryonic component, placenta', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'stomach', 'epithelium, kidney', 'bodily fluid, blood', 'musculature of body', 'embryo', 'kidney', 'skin of prepuce of penis, skin of body, penis', 'NA', 'bodily fluid, blood', 'lung', 'colon, large intestine, intestine', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'musculature of body, limb', 'colon, large intestine, intestine', 'bodily fluid, blood', 'epithelium, kidney', 'bodily fluid, blood', 'NA', 'vasculature, arterial blood vessel, blood vessel', 'epithelium, endocrine gland, exocrine gland, liver', 'musculature of body, limb', 'embryo', 'bodily fluid, blood', 'NA', 'immune organ, spleen', 'musculature of body, limb', 'epithelium, kidney', 'bodily fluid, blood', 'paraythroid gland', 'colon, large intestine, intestine', 'bodily fluid, blood', 'heart', 'bodily fluid, blood', 'connective tissue, skin of body, penis', 'epithelium, endocrine gland, exocrine gland, liver', 'brain', 'epithelium, mammary gland, exocrine gland', 'heart', 'bodily fluid, blood', 'adipose tissue, connective tissue', 'lung', 'exocrine gland, endocrine gland, liver', 'brain, epithelium', 'pancreas', 'heart', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'ovary, gonad', 'brain, epithelium', 'bodily fluid, blood', 'NA', 'epithelium, mammary gland, exocrine gland', 'brain', 'NA', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, skin of body, penis', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue', 'bodily fluid, blood', 'immune organ, spleen', 'connective tissue', 'epithelium, mammary gland, exocrine gland', 'esophagus, musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'extraembryonic component, placenta', 'brain', 'bodily fluid, blood', 'esophagus, epithelium', 'stomach', 'connective tissue, skin of body, penis', 'prostate gland', 'vasculature, arterial blood vessel, blood vessel', 'brain', 'embryo', 'lung, connective tissue', 'bodily fluid, blood', 'lung, connective tissue', 'skin of body, limb, connective tissue', 'NA', 'epithelium, endocrine gland, exocrine gland, liver', 'NA', 'epithelium, kidney', 'brain', 'NA', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'embryo', 'brain', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'NA', 'limb, arterial blood vessel, vasculature, blood vessel', 'epithelium, endocrine gland, exocrine gland, liver', 'musculature of body, limb', 'vasculature, arterial blood vessel, blood vessel', 'stomach', 'embryo', 'bodily fluid, blood', 'musculature of body', 'bodily fluid, blood', 'NA', 'epithelium, endocrine gland, exocrine gland, liver', 'extraembryonic component, placenta', 'skin of body, limb, connective tissue', 'colon, large intestine, intestine', 'stomach', 'prostate gland', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'embryo', 'bone marrow, bone element', 'breast', 'embryo', 'connective tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'NA', 'ovary, gonad', 'epithelium, uterus', 'epithelium, kidney', 'colon, large intestine, intestine', 'epithelium, endocrine gland, exocrine gland, liver', 'heart', 'uterus', 'bodily fluid, blood', 'bodily fluid, blood', 'brain', 'musculature of body', 'extraembryonic component, placenta', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'stomach, musculature of body', 'large intestine, intestine', 'musculature of body', 'adipose tissue, connective tissue', 'brain', 'epithelium, kidney', 'kidney', 'penis', 'esophagus, epithelium', 'adipose tissue, connective tissue', 'musculature of body, limb', 'small intestine, intestine', 'bodily fluid, blood', 'esophagus', 'brain', 'musculature of body, limb', 'heart', 'colon, large intestine, intestine', 'epithelium, endocrine gland, exocrine gland, liver', 'penis', 'brain, epithelium', 'adipose tissue, connective tissue', 'lung', 'skin of body, limb', 'embryo', 'bodily fluid, blood', 'nerve, limb', 'skin of body', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'esophagus, epithelium', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'brain', 'large intestine, intestine', 'bodily fluid, blood', 'nerve, limb', 'bodily fluid, blood', 'ovary, gonad', 'bodily fluid, blood, lymph node', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'embryo', 'immune organ, spleen', 'musculature of body, limb', 'epithelium, colon, large intestine, intestine', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'connective tissue', 'bone marrow, bone element', 'epithelium, kidney', 'lung, connective tissue', 'bone marrow, bone element', 'bodily fluid, blood', 'stomach', 'skin of body', 'limb, arterial blood vessel, vasculature, blood vessel', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'bodily fluid, blood', 'stomach, musculature of body', 'exocrine gland, endocrine gland, liver', 'small intestine, intestine', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'immune organ, spleen', 'bone marrow, bone element', 'colon, large intestine, intestine', 'colon, large intestine, intestine', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue', 'epithelium, skin of body, penis', 'stomach', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'skin of prepuce of penis, skin of body, penis', 'bodily fluid, blood', 'skin of body, limb', 'bodily fluid, blood', 'vasculature, arterial blood vessel, heart, blood vessel', 'epithelium, mammary gland, exocrine gland', 'brain, spinal cord, eye, ear', 'bodily fluid, blood', 'colon, large intestine, intestine', 'embryo', 'adipose tissue, connective tissue', 'epithelium, mammary gland, exocrine gland', 'heart', 'small intestine, intestine', 'esophagus, musculature of body', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, colon, large intestine, intestine', 'bone marrow, bone element', 'small intestine, intestine', 'musculature of body', 'lung', 'brain', 'adrenal gland, endocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'musculature of body', 'epithelium, uterus', 'bone marrow, bone element', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'epithelium, kidney', 'bodily fluid, blood', 'stomach, musculature of body', 'embryo', 'pancreas', 'embryo', 'bone marrow, bone element', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'musculature of body', 'bodily fluid, blood', 'bodily fluid, blood', 'small intestine, intestine', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bone marrow, bone element', 'musculature of body', 'epithelium, kidney', 'bodily fluid, blood', 'epithelium, kidney', 'extraembryonic component, placenta', 'embryo', 'extraembryonic component, placenta', 'brain', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'prostate gland, epithelium', 'bone marrow, bone element', 'connective tissue', 'vasculature, arterial blood vessel, blood vessel', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'immune organ, spleen', 'prostate gland', 'lung, connective tissue', 'epithelium, mammary gland, exocrine gland', 'embryo', 'bodily fluid, blood', 'NA', 'bodily fluid, blood', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'embryo', 'bodily fluid, blood', 'esophagus', 'connective tissue', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'musculature of body, limb', 'stomach', 'vasculature, arterial blood vessel, blood vessel', 'embryo, extraembryonic component, placenta', 'small intestine, intestine', 'bodily fluid, blood', 'endocrine gland, thyroid gland', 'prostate gland, epithelium', 'epithelium, pancreas', 'exocrine gland, endocrine gland, liver', 'adrenal gland, endocrine gland', 'lung', 'exocrine gland, endocrine gland, liver', 'small intestine, intestine', 'bodily fluid, blood', 'stomach, musculature of body', 'bodily fluid, blood', 'musculature of body, limb', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'colon, large intestine, intestine', 'lung', 'spinal cord', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'lung, connective tissue', 'musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'adipose tissue, connective tissue', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'embryo, extraembryonic component', 'colon, large intestine, intestine', 'embryo, extraembryonic component', 'bodily fluid, blood', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'skin of body', 'extraembryonic component', 'embryo', 'stomach, musculature of body', 'epithelium, kidney', 'esophagus, musculature of body', 'epithelium, kidney', 'epithelium, kidney', 'adrenal gland, endocrine gland', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'prostate gland', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'epithelium, uterus', 'lung, connective tissue', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'colon, large intestine, intestine', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'embryo', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, kidney', 'adipose tissue, connective tissue', 'endocrine gland, thyroid gland', 'epithelium, endocrine gland, exocrine gland, liver', 'penis', 'epithelium, colon, large intestine, intestine', 'epithelium, kidney', 'stomach', 'epithelium, kidney', 'esophagus, musculature of body', 'bodily fluid, blood', 'kidney', 'exocrine gland, endocrine gland, liver', 'penis', 'bodily fluid, blood', 'heart', 'embryo', 'exocrine gland, endocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'limb, arterial blood vessel, vasculature, blood vessel', 'epithelium, kidney', 'immune organ, spleen', 'epithelium, mammary gland, exocrine gland', 'adrenal gland, endocrine gland', 'skin of body', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'immune organ, spleen', 'bodily fluid, blood', 'skin of body', 'colon, large intestine, intestine', 'skin of body', 'embryo', 'small intestine, intestine', 'epithelium, kidney', 'bodily fluid, blood', 'musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'adipose tissue, connective tissue', 'epithelium, colon, large intestine, intestine', 'epithelium, kidney', 'lung', 'extraembryonic component', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'bodily fluid, blood', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'adipose tissue, connective tissue', 'extraembryonic component', 'bodily fluid, blood', 'colon, large intestine, intestine', 'musculature of body', 'stomach', 'small intestine, intestine', 'bone marrow, bone element', 'small intestine, intestine', 'prostate gland', 'brain, spinal cord, eye, ear', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'lung, connective tissue', 'vasculature, arterial blood vessel, blood vessel', 'extraembryonic component, placenta', 'bodily fluid, blood', 'uterus', 'paraythroid gland', 'immune organ, spleen', 'skin of body', 'musculature of body', 'connective tissue', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'skin of body, limb', 'epithelium, kidney', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'large intestine, intestine', 'embryo', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'embryo', 'paraythroid gland', 'NA', 'stomach', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'vagina', 'embryo', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'musculature of body', 'spinal cord', 'embryo', 'connective tissue', 'brain', 'bodily fluid, blood', 'skin of prepuce of penis, skin of body, penis', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'small intestine, intestine', 'bodily fluid, blood', 'skin of body', 'brain', 'prostate gland, epithelium', 'embryo', 'pancreas', 'epithelium, mammary gland, exocrine gland', 'endocrine gland, thyroid gland', 'exocrine gland, endocrine gland, liver', 'immune organ, spleen', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, skin of body, penis', 'bone marrow, bone element', 'ovary, gonad', 'bodily fluid, blood', 'colon, large intestine, intestine', 'stomach', 'epithelium, endocrine gland, exocrine gland, liver', 'heart, musculature of body', 'skin of body', 'small intestine, intestine', 'embryo', 'stomach, musculature of body', 'bodily fluid, blood', 'embryo', 'extraembryonic component, placenta', 'colon, large intestine, intestine', 'epithelium, kidney', 'NA', 'brain', 'lung, connective tissue', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'large intestine, intestine', 'prostate gland', 'large intestine, intestine', 'embryo', 'heart, musculature of body', 'skin of body', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'embryo', 'lung', 'musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'epithelium, mammary gland, exocrine gland', 'NA', 'epithelium, kidney', 'prostate gland', 'esophagus', 'embryo', 'heart', 'embryo', 'epithelium, kidney', 'epithelium, kidney', 'lung, connective tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'large intestine, musculature of body, intestine', 'connective tissue, skin of body, penis', 'bodily fluid, blood', 'brain', 'adipose tissue, connective tissue', 'small intestine, intestine', 'brain, epithelium', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'immune organ, spleen', 'NA', 'bodily fluid, blood', 'lung', 'epithelium, kidney', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'pancreas', 'bodily fluid, blood', 'NA', 'skin of body', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'colon, large intestine, intestine', 'lung', 'adipose tissue, connective tissue', 'embryo', 'epithelium, kidney', 'epithelium, kidney', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'embryo', 'exocrine gland, endocrine gland, liver', 'brain', 'small intestine, intestine', 'bodily fluid, blood', 'immune organ, endocrine gland, thymus', 'epithelium, kidney', 'epithelium, breast', 'skin of body', 'brain, spinal cord, eye, ear', 'embryo', 'musculature of body', 'bodily fluid, blood', 'prostate gland, epithelium', 'immune organ, endocrine gland, thymus', 'brain', 'epithelium, kidney', 'epithelium, breast', 'epithelium, breast', 'large intestine, intestine', 'bodily fluid, blood, lymph node', 'esophagus', 'epithelium, kidney', 'NA', 'skin of prepuce of penis, skin of body, penis', 'pancreas', 'immune organ, endocrine gland, thymus', 'epithelium, mammary gland, exocrine gland', 'exocrine gland, endocrine gland, liver', 'epithelium, exocrine gland, mouth', 'bone marrow, bone element', 'brain', 'breast', 'musculature of body', 'extraembryonic component, placenta', 'colon, large intestine, intestine', 'brain', 'skin of body', 'embryo, extraembryonic component, placenta', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'nerve, limb', 'NA', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'pancreas', 'prostate gland', 'bodily fluid, blood', 'NA', 'embryo', 'kidney', 'bodily fluid, blood, lymph node', 'adipose tissue, connective tissue', 'vasculature, arterial blood vessel, blood vessel', 'epithelium, mammary gland, exocrine gland', 'brain', 'embryo, extraembryonic component, placenta', 'lung', 'brain', 'epithelium, kidney', 'colon, large intestine, intestine', 'lung', 'bodily fluid, blood', 'colon, large intestine, intestine', 'colon, large intestine, intestine', 'embryo', 'vasculature, arterial blood vessel, blood vessel', 'brain', 'penis', 'pancreas', 'epithelium, kidney', 'exocrine gland, endocrine gland, liver', 'embryo', 'breast', 'bodily fluid, blood', 'bodily fluid, blood', 'vasculature, arterial blood vessel, blood vessel', 'embryo', 'embryo', 'bone marrow, bone element', 'epithelium, endocrine gland, exocrine gland, liver', 'colon, large intestine, intestine', 'skin of body, limb, connective tissue', 'colon, large intestine, intestine', 'colon, large intestine, intestine', 'epithelium, kidney', 'musculature of body', 'musculature of body', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'small intestine, intestine', 'bodily fluid, blood', 'bodily fluid, blood', 'kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'epithelium, colon, large intestine, intestine', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'paraythroid gland', 'bodily fluid, blood', 'paraythroid gland', 'large intestine, intestine', 'heart', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'exocrine gland, endocrine gland, liver', 'epithelium, kidney', 'bone marrow, bone element', 'epithelium, endocrine gland, exocrine gland, liver', 'stomach, musculature of body', 'stomach, musculature of body', 'prostate gland', 'epithelium, endocrine gland, exocrine gland, liver', 'brain', 'small intestine, intestine', 'bone marrow, bone element', 'epithelium, uterus', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'vasculature, arterial blood vessel, heart, blood vessel', 'epithelium, kidney', 'exocrine gland, endocrine gland, liver', 'musculature of body', 'connective tissue, skin of body, penis', 'large intestine, musculature of body, intestine', 'adipose tissue, connective tissue', 'extraembryonic component, placenta', 'exocrine gland, endocrine gland, liver', 'epithelium, breast', 'connective tissue, skin of body, penis', 'musculature of body', 'breast', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'pancreas', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'penis', 'exocrine gland, endocrine gland, liver', 'immune organ, spleen', 'NA', 'bodily fluid, blood', 'connective tissue', 'exocrine gland, endocrine gland, liver', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'skin of body', 'esophagus, musculature of body', 'bodily fluid, blood', 'penis', 'stomach', 'embryo, extraembryonic component', 'embryo', 'bone marrow, bone element', 'brain', 'embryo, extraembryonic component', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'embryo', 'epithelium, kidney', 'stomach', 'brain', 'heart', 'brain', 'prostate gland', 'bodily fluid, blood', 'esophagus, musculature of body', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'lymphoid tissue, intestine', 'adipose tissue, connective tissue', 'epithelium, kidney', 'embryo', 'extraembryonic component', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'kidney', 'brain', 'connective tissue, skin of body, penis', 'embryo', 'stomach, musculature of body', 'connective tissue', 'musculature of body', 'heart', 'stomach', 'bodily fluid, blood', 'bodily fluid, blood', 'skin of body', 'epithelium, endocrine gland, exocrine gland, liver', 'paraythroid gland', 'bodily fluid, blood', 'pancreas', 'embryo, extraembryonic component', 'epithelium, kidney', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'pancreas', 'bodily fluid, blood', 'brain', 'epithelium, mammary gland, exocrine gland', 'colon, large intestine, intestine', 'brain, spinal cord, eye, ear', 'lymphoid tissue, intestine', 'epithelium, endocrine gland, exocrine gland, liver', 'testis, gonad', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, skin of body, penis', 'heart', 'brain', 'epithelium, skin of body, penis', 'skin of body, limb, connective tissue', 'kidney', 'NA', 'musculature of body, limb', 'brain', 'colon, large intestine, intestine', 'epithelium, kidney', 'immune organ, endocrine gland, thymus', 'bodily fluid, blood', 'epithelium, kidney', 'exocrine gland, endocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'penis', 'epithelium, mammary gland, exocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'brain', 'lung, connective tissue', 'stomach', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'colon, large intestine, intestine', 'brain', 'skin of body', 'embryo', 'exocrine gland, endocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'embryo, extraembryonic component, placenta', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'prostate gland', 'embryo', 'lymphoid tissue, intestine', 'uterus', 'pancreas', 'NA', 'bodily fluid, blood', 'musculature of body', 'bodily fluid, blood', 'embryo', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'embryo, extraembryonic component, placenta', 'NA', 'skin of body, limb, connective tissue', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, breast', 'bone marrow, bone element', 'vagina', 'brain', 'pancreas', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'lung', 'bodily fluid, blood', 'breast', 'epithelium, breast', 'colon, large intestine, intestine', 'NA', 'bodily fluid, blood', 'bodily fluid, blood', 'prostate gland', 'embryo', 'adrenal gland, endocrine gland', 'small intestine, intestine', 'NA', 'brain', 'adrenal gland, endocrine gland', 'immune organ, endocrine gland, thymus', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'immune organ, spleen', 'pancreas', 'adrenal gland, endocrine gland', 'NA', 'bodily fluid, blood', 'embryo', 'embryo', 'musculature of body', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'large intestine, intestine', 'lung', 'musculature of body, limb', 'stomach, musculature of body', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'epithelium, breast', 'vasculature, arterial blood vessel, blood vessel', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'connective tissue, skin of body, penis', 'small intestine, intestine', 'epithelium, kidney', 'brain', 'brain, spinal cord, eye, ear', 'epithelium, kidney', 'epithelium, kidney', 'embryo', 'lymphoid tissue, intestine', 'extraembryonic component, placenta', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'extraembryonic component, placenta', 'immune organ, spleen', 'colon, large intestine, intestine', 'epithelium, kidney', 'bone marrow, bone element', 'bodily fluid, blood', 'brain', 'penis', 'bodily fluid, blood', 'musculature of body, limb', 'epithelium, mammary gland, exocrine gland', 'brain', 'bodily fluid, blood', 'lung, connective tissue', 'adrenal gland, endocrine gland', 'embryo, extraembryonic component', 'NA', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'epithelium, mammary gland, exocrine gland', 'embryo, extraembryonic component', 'musculature of body, limb', 'epithelium, colon, large intestine, intestine', 'musculature of body', 'colon, large intestine, intestine', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'pancreas', 'bodily fluid, blood', 'skin of body', 'epithelium, endocrine gland, exocrine gland, liver', 'extraembryonic component, placenta', 'skin of body, limb', 'bodily fluid, blood', 'bone element', 'colon, large intestine, intestine', 'epithelium, endocrine gland, exocrine gland, liver', 'brain', 'epithelium, mammary gland, exocrine gland', 'lung, connective tissue', 'bodily fluid, blood', 'endocrine gland, thyroid gland', 'immune organ, spleen', 'epithelium, breast', 'connective tissue', 'embryo', 'bodily fluid, blood', 'heart', 'stomach', 'paraythroid gland', 'nerve, limb', 'musculature of body', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'lung, connective tissue', 'stomach', 'stomach', 'bone marrow, bone element', 'embryo', 'bodily fluid, blood, lymph node', 'heart', 'kidney', 'NA', 'connective tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'epithelium, kidney', 'bodily fluid, blood', 'lung', 'NA', 'bodily fluid, blood', 'embryo', 'epithelium, kidney', 'embryo', 'bodily fluid, blood', 'vasculature, arterial blood vessel, blood vessel', 'bodily fluid, blood', 'prostate gland', 'embryo', 'heart', 'epithelium, mammary gland, exocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'esophagus, musculature of body', 'epithelium, kidney', 'brain', 'bodily fluid, blood', 'vasculature, arterial blood vessel, heart, blood vessel', 'epithelium, endocrine gland, exocrine gland, liver', 'lung, connective tissue', 'NA', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'exocrine gland, endocrine gland, liver', 'colon, large intestine, intestine', 'bodily fluid, blood', 'embryo', 'stomach', 'large intestine, intestine', 'bodily fluid, blood', 'epithelium, kidney', 'immune organ, spleen', 'brain', 'connective tissue', 'bodily fluid, blood', 'NA', 'bone marrow, bone element', 'musculature of body, limb', 'extraembryonic component', 'pancreas', 'bodily fluid, blood', 'urinary bladder', 'epithelium, mammary gland, exocrine gland', 'adrenal gland, endocrine gland', 'esophagus, epithelium', 'epithelium, kidney', 'extraembryonic component, placenta', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'NA', 'musculature of body', 'small intestine, intestine', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'adrenal gland, endocrine gland', 'lung', 'bone marrow, bone element', 'exocrine gland, endocrine gland, liver', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'kidney', 'prostate gland', 'epithelium, kidney', 'exocrine gland, endocrine gland, liver', 'NA', 'epithelium, mammary gland, exocrine gland', 'prostate gland', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'NA', 'skin of body', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'immune organ, spleen', 'lung', 'epithelium, kidney', 'bodily fluid, blood', 'skin of body', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'nerve, limb', 'lung', 'bodily fluid, blood', 'embryo', 'brain, spinal cord, eye, ear', 'colon, large intestine, intestine', 'embryo', 'embryo', 'lung', 'bodily fluid, blood, lymph node', 'embryo, extraembryonic component, placenta', 'bodily fluid, blood', 'epithelium, colon, large intestine, intestine', 'bone element', 'large intestine, musculature of body, intestine', 'epithelium, exocrine gland, mouth', 'epithelium, mammary gland, exocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'embryo', 'brain', 'epithelium, kidney', 'esophagus', 'extraembryonic component, placenta', 'brain', 'brain', 'nerve, limb', 'skin of body, limb, connective tissue', 'bodily fluid, blood', 'immune organ, endocrine gland, thymus', 'exocrine gland, endocrine gland, liver', 'heart', 'extraembryonic component, placenta', 'epithelium, kidney', 'paraythroid gland', 'extraembryonic component, placenta', 'penis', 'lung', 'epithelium, kidney', 'embryo', 'immune organ, spleen', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'pancreas', 'epithelium, endocrine gland, exocrine gland, liver', 'brain, spinal cord, eye, ear', 'endocrine gland, thyroid gland', 'small intestine, intestine', 'embryo, extraembryonic component', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'paraythroid gland', 'embryo', 'bodily fluid, blood', 'pancreas', 'embryo, extraembryonic component', 'brain', 'NA', 'epithelium, mammary gland, exocrine gland', 'heart', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'exocrine gland, endocrine gland, liver', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'stomach', 'bodily fluid, blood', 'immune organ, spleen', 'connective tissue', 'bodily fluid, blood', 'skin of body', 'connective tissue', 'lung', 'paraythroid gland', 'bodily fluid, blood', 'pancreas', 'endocrine gland, thyroid gland', 'ovary, gonad', 'musculature of body', 'epithelium, mammary gland, exocrine gland', 'NA', 'brain', 'brain', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'testis, gonad', 'bodily fluid, blood', 'extraembryonic component, placenta', 'embryo', 'embryo', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'large intestine, intestine', 'bodily fluid, blood', 'epithelium, skin of body, penis', 'extraembryonic component, placenta', 'embryo, extraembryonic component', 'prostate gland', 'extraembryonic component', 'bone element', 'skin of body', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'heart', 'bodily fluid, blood', 'adipose tissue, connective tissue', 'connective tissue', 'epithelium, breast', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, colon, large intestine, intestine', 'musculature of body', 'epithelium, mammary gland, exocrine gland', 'heart', 'colon, large intestine, intestine', 'epithelium, kidney', 'skin of body', 'epithelium, mammary gland, exocrine gland', 'skin of prepuce of penis, skin of body, penis', 'penis', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'esophagus, epithelium', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'connective tissue', 'stomach, musculature of body', 'NA', 'adrenal gland, endocrine gland', 'NA', 'connective tissue, skin of body, penis', 'NA', 'extraembryonic component, placenta', 'bodily fluid, blood', 'lung', 'epithelium, kidney', 'small intestine, intestine', 'lung, connective tissue', 'lung', 'musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'skin of body', 'musculature of body', 'exocrine gland, endocrine gland, liver', 'embryo', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'pancreas', 'bodily fluid, blood', 'NA', 'epithelium, endocrine gland, exocrine gland, liver', 'vasculature, arterial blood vessel, blood vessel', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'musculature of body, limb', 'pancreas', 'exocrine gland, endocrine gland, liver', 'bone marrow, bone element', 'bone element', 'epithelium, mammary gland, exocrine gland', 'lung', 'exocrine gland, endocrine gland, liver', 'musculature of body', 'epithelium, kidney', 'bodily fluid, blood', 'lung, connective tissue', 'pancreas', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue', 'extraembryonic component, placenta', 'stomach', 'epithelium, endocrine gland, exocrine gland, liver', 'brain', 'epithelium, breast', 'epithelium, mammary gland, exocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'large intestine, intestine', 'bodily fluid, blood', 'NA', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'stomach, musculature of body', 'bodily fluid, blood', 'kidney', 'pancreas', 'epithelium, kidney', 'skin of body', 'epithelium, kidney', 'brain', 'bone marrow, bone element', 'small intestine, intestine', 'NA', 'epithelium, kidney', 'bone element', 'lung', 'musculature of body', 'brain', 'lung', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'small intestine, intestine', 'limb, arterial blood vessel, vasculature, blood vessel', 'skin of body, limb', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, breast', 'heart', 'epithelium, endocrine gland, exocrine gland, liver', 'stomach', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'ovary, gonad', 'heart', 'immune organ, bone marrow, lymph node, bone element', 'bodily fluid, blood', 'stomach', 'embryo', 'bodily fluid, blood', 'lung', 'lung', 'embryo', 'epithelium, kidney', 'epithelium, kidney', 'stomach, musculature of body', 'brain', 'epithelium, mammary gland, exocrine gland', 'stomach', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, breast', 'lung, connective tissue', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'pancreas', 'embryo', 'epithelium, mammary gland, exocrine gland', 'epithelium, colon, large intestine, intestine', 'epithelium, mammary gland, exocrine gland', 'connective tissue', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'heart', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bodily fluid, blood', 'endocrine gland, thyroid gland', 'colon, large intestine, intestine', 'kidney', 'skin of body', 'epithelium, skin of body, penis', 'brain', 'bone marrow, bone element', 'epithelium, kidney', 'esophagus, musculature of body', 'adipose tissue, connective tissue', 'epithelium, mammary gland, exocrine gland', 'musculature of body', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'testis, gonad', 'colon, large intestine, intestine', 'bone marrow, bone element', 'skin of body, limb, connective tissue', 'NA', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'embryo, extraembryonic component', 'brain', 'colon, large intestine, intestine', 'bodily fluid, blood', 'epithelium, kidney', 'bodily fluid, blood', 'embryo', 'prostate gland', 'adipose tissue, connective tissue', 'extraembryonic component, placenta', 'lung', 'bodily fluid, blood', 'epithelium, kidney', 'adipose tissue, connective tissue', 'brain', 'NA', 'bodily fluid, blood', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'nerve, limb', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'embryo', 'bodily fluid, blood', 'penis', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'pancreas', 'NA', 'epithelium, mammary gland, exocrine gland', 'stomach', 'extraembryonic component, placenta', 'bodily fluid, blood', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'lung', 'embryo', 'lymphoid tissue, intestine', 'colon, large intestine, intestine', 'NA', 'colon, large intestine, intestine', 'bodily fluid, blood', 'esophagus', 'epithelium, endocrine gland, exocrine gland, liver', 'esophagus, musculature of body', 'epithelium, extraembryonic component, placenta, blood vessel, vein, vasculature', 'bodily fluid, blood', 'embryo, extraembryonic component, placenta', 'lung, connective tissue', 'breast', 'bodily fluid, blood', 'lung, connective tissue', 'bodily fluid, blood', 'nerve, limb', 'bodily fluid, blood', 'immune organ, bone marrow, lymph node, bone element', 'musculature of body', 'pancreas', 'skin of body', 'skin of body, limb', 'endocrine gland, thyroid gland', 'stomach', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'embryo', 'immune organ, bone marrow, lymph node, bone element', 'lung', 'large intestine, intestine', 'exocrine gland, endocrine gland, liver', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'NA', 'bodily fluid, blood', 'bodily fluid, blood', 'pancreas', 'vasculature, arterial blood vessel, blood vessel', 'epithelium, endocrine gland, exocrine gland, liver', 'immune organ, spleen', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'skin of body', 'epithelium, mammary gland, exocrine gland', 'musculature of body', 'large intestine, intestine', 'NA', 'brain', 'brain, spinal cord, eye, ear', 'embryo, extraembryonic component', 'epithelium, kidney', 'heart', 'connective tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'breast', 'embryo', 'heart', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'musculature of body', 'pancreas', 'endocrine gland, thyroid gland', 'epithelium, mammary gland, exocrine gland', 'bone marrow, bone element', 'prostate gland, epithelium', 'bodily fluid, blood', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'extraembryonic component, placenta', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'bodily fluid, blood, lymph node', 'brain', 'immune organ, bone marrow, lymph node, bone element', 'connective tissue', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'epithelium, kidney', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'vagina', 'embryo, extraembryonic component, placenta', 'esophagus, musculature of body', 'immune organ, spleen', 'bodily fluid, blood', 'NA', 'colon, large intestine, intestine', 'brain', 'bodily fluid, blood', 'pancreas', 'bodily fluid, blood', 'skin of body, limb, connective tissue', 'testis, gonad', 'musculature of body', 'epithelium, uterus', 'nerve, limb', 'pancreas', 'embryo', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'brain', 'embryo', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'heart', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'prostate gland', 'lung', 'bodily fluid, blood', 'lung', 'stomach', 'paraythroid gland', 'bodily fluid, blood', 'brain, spinal cord, eye, ear', 'epithelium, kidney', 'embryo, extraembryonic component, placenta', 'epithelium, kidney', 'skin of body', 'bone marrow, bone element', 'epithelium, mammary gland, exocrine gland', 'adrenal gland, endocrine gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'lymphoid tissue, intestine', 'connective tissue, skin of body, penis', 'heart', 'NA', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue, skin of body, penis', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'bodily fluid, blood', 'brain', 'NA', 'bodily fluid, blood', 'small intestine, intestine', 'extraembryonic component, placenta', 'brain', 'immune organ, bone marrow, lymph node, bone element', 'bodily fluid, blood, lymph node', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'epithelium, kidney', 'bodily fluid, blood', 'urinary bladder', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'colon, large intestine, intestine', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo, extraembryonic component', 'embryo', 'bone marrow, bone element', 'epithelium, uterus', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'exocrine gland, endocrine gland, liver', 'mammary gland, exocrine gland', 'lung', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'colon, large intestine, intestine', 'bodily fluid, blood', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'immune organ, bone marrow, lymph node, bone element', 'brain', 'bodily fluid, blood', 'lung', 'lung', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'endocrine gland, thyroid gland', 'epithelium, mammary gland, exocrine gland', 'stomach', 'colon, large intestine, intestine', 'bodily fluid, blood', 'esophagus', 'adrenal gland, endocrine gland', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'colon, large intestine, intestine', 'embryo, extraembryonic component, placenta', 'kidney', 'bodily fluid, blood', 'NA', 'vasculature, arterial blood vessel, blood vessel', 'vagina', 'small intestine, intestine', 'immune organ, endocrine gland, thymus', 'esophagus', 'embryo, extraembryonic component, placenta', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo, extraembryonic component, placenta', 'adrenal gland, endocrine gland', 'musculature of body', 'embryo', 'heart, musculature of body', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'NA', 'vagina', 'small intestine, intestine', 'epithelium, endocrine gland, exocrine gland, liver', 'NA', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'large intestine, musculature of body, intestine', 'skin of body', 'bodily fluid, blood', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'endocrine gland, thyroid gland', 'bodily fluid, blood', 'embryo, extraembryonic component, placenta', 'lung', 'ovary, gonad', 'large intestine, intestine', 'immune organ, spleen', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood, lymph node', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo, extraembryonic component, placenta', 'bodily fluid, blood', 'epithelium, kidney', 'brain', 'epithelium, colon, large intestine, intestine', 'NA', 'epithelium, breast', 'stomach, musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo, epithelium', 'embryo', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'embryo', 'lung, connective tissue', 'adipose tissue, connective tissue', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'exocrine gland, endocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, skin of body, penis', 'musculature of body', 'colon, large intestine, intestine', 'vasculature, arterial blood vessel, blood vessel', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'bodily fluid, blood', 'musculature of body', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'heart', 'bodily fluid, blood', 'embryo, extraembryonic component, placenta', 'lung', 'NA', 'brain', 'musculature of body', 'lung, connective tissue', 'vasculature, arterial blood vessel, blood vessel', 'skin of body, limb, connective tissue', 'epithelium, kidney', 'prostate gland', 'embryo, extraembryonic component, placenta', 'lung', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'bodily fluid, blood', 'heart', 'epithelium, kidney', 'heart', 'embryo', 'adipose tissue, connective tissue', 'stomach, musculature of body', 'NA', 'bone marrow, bone element', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'epithelium, skin of body, penis', 'brain, epithelium', 'epithelium, kidney', 'esophagus', 'epithelium, kidney', 'epithelium, uterus', 'bodily fluid, blood', 'skin of prepuce of penis, skin of body, penis', 'bone marrow, bone element', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'colon, large intestine, intestine', 'exocrine gland, endocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'brain, spinal cord, eye, ear', 'bodily fluid, blood', 'stomach', 'bodily fluid, blood', 'musculature of body', 'epithelium, mammary gland, exocrine gland', 'embryo', 'NA', 'paraythroid gland', 'embryo, epithelium', 'epithelium, endocrine gland, exocrine gland, liver', 'pancreas', 'epithelium, kidney', 'embryo', 'bodily fluid, blood', 'brain', 'NA', 'immune organ, spleen', 'bone marrow, bone element', 'brain', 'epithelium, kidney', 'embryo', 'bodily fluid, blood', 'bone marrow, bone element', 'epithelium, kidney', 'bodily fluid, blood', 'immune organ, spleen', 'large intestine, musculature of body, intestine', 'brain', 'penis', 'bodily fluid, blood', 'embryo', 'NA', 'small intestine, intestine', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'vagina', 'ovary, gonad', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'esophagus', 'musculature of body, limb', 'epithelium, breast', 'bodily fluid, blood', 'stomach', 'bodily fluid, blood', 'limb, arterial blood vessel, vasculature, blood vessel', 'endocrine gland, thyroid gland', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'heart', 'musculature of body', 'skin of body', 'epithelium, mammary gland, exocrine gland', 'connective tissue', 'epithelium, kidney', 'immune organ, bone marrow, lymph node, bone element', 'epithelium, mammary gland, exocrine gland', 'lung', 'bodily fluid, blood', 'adipose tissue, connective tissue', 'epithelium, skin of body, penis', 'bodily fluid, blood', 'embryo', 'epithelium, mammary gland, exocrine gland', 'skin of prepuce of penis, skin of body, penis', 'epithelium, endocrine gland, exocrine gland, liver', 'colon, large intestine, intestine', 'epithelium, kidney', 'lung', 'bodily fluid, blood', 'lung, connective tissue', 'bodily fluid, blood', 'vasculature, arterial blood vessel, blood vessel', 'epithelium, kidney', 'epithelium, uterus', 'bodily fluid, blood', 'penis', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'heart', 'brain', 'bodily fluid, blood', 'lung, connective tissue', 'heart, musculature of body', 'colon, large intestine, intestine', 'colon, large intestine, intestine', 'stomach', 'NA', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, kidney', 'musculature of body', 'musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'endocrine gland, thyroid gland', 'bodily fluid, blood', 'kidney', 'embryo', 'brain', 'brain', 'extraembryonic component, placenta', 'vagina', 'bodily fluid, blood', 'pancreas', 'bodily fluid, blood, lymph node', 'connective tissue', 'bodily fluid, blood', 'musculature of body', 'prostate gland', 'NA', 'colon, large intestine, intestine', 'embryo', 'epithelium, kidney', 'vasculature, arterial blood vessel, blood vessel', 'colon, large intestine, intestine', 'bodily fluid, blood', 'bodily fluid, blood', 'brain', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'immune organ, spleen', 'lung', 'brain', 'epithelium, exocrine gland, mouth', 'skin of body, limb', 'epithelium, kidney', 'NA', 'lung', 'lung', 'breast', 'epithelium, kidney', 'embryo', 'skin of body', 'skin of body', 'immune organ, spleen', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'embryo', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'large intestine, intestine', 'bodily fluid, blood', 'bone marrow, bone element', 'adipose tissue, connective tissue', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'bone marrow, bone element', 'connective tissue', 'embryo', 'embryo', 'esophagus, epithelium', 'exocrine gland, endocrine gland, liver', 'paraythroid gland', 'musculature of body, limb', 'exocrine gland, endocrine gland, liver', 'vasculature, arterial blood vessel, blood vessel', 'brain', 'epithelium, kidney', 'bodily fluid, blood', 'colon, large intestine, intestine', 'bodily fluid, blood', 'embryo', 'immune organ, endocrine gland, thymus', 'epithelium, kidney', 'lung', 'embryo', 'bodily fluid, blood', 'skin of body', 'bodily fluid, blood', 'embryo', 'NA', 'epithelium, exocrine gland, mouth', 'NA', 'bodily fluid, blood', 'bodily fluid, blood', 'stomach', 'skin of body', 'esophagus, musculature of body', 'bodily fluid, blood', 'endocrine gland, thyroid gland', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue', 'embryo', 'small intestine, intestine', 'bodily fluid, blood', 'embryo, extraembryonic component, placenta', 'musculature of body', 'embryo', 'pancreas', 'bodily fluid, blood', 'endocrine gland, thyroid gland', 'prostate gland', 'pancreas', 'colon, large intestine, intestine', 'colon, large intestine, intestine', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'colon, large intestine, intestine', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'connective tissue', 'ovary, gonad', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'embryo', 'bodily fluid, blood', 'skin of body', 'colon, large intestine, intestine', 'esophagus, epithelium', 'immune organ, bone marrow, lymph node, bone element', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'pancreas', 'adrenal gland, endocrine gland', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'stomach, musculature of body', 'epithelium, mammary gland, exocrine gland', 'kidney', 'epithelium, mammary gland, exocrine gland', 'colon, large intestine, intestine', 'endocrine gland, thyroid gland', 'epithelium, kidney', 'adipose tissue, connective tissue', 'immune organ, endocrine gland, thymus', 'prostate gland', 'bodily fluid, blood', 'prostate gland', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'NA', 'musculature of body', 'embryo, extraembryonic component, placenta', 'extraembryonic component', 'epithelium, kidney', 'brain', 'embryo', 'epithelium, kidney', 'epithelium, kidney', 'bodily fluid, blood', 'epithelium, kidney', 'lung', 'connective tissue', 'epithelium, kidney', 'bodily fluid, blood', 'colon, large intestine, intestine', 'epithelium, endocrine gland, exocrine gland, liver', 'stomach', 'adrenal gland, endocrine gland', 'epithelium, kidney', 'epithelium, breast', 'epithelium, endocrine gland, exocrine gland, liver', 'NA', 'nerve, limb', 'bodily fluid, blood', 'esophagus, epithelium', 'skin of body', 'epithelium, kidney', 'small intestine, intestine', 'pancreas', 'bodily fluid, blood', 'musculature of body', 'embryo', 'epithelium, kidney', 'stomach', 'stomach', 'bodily fluid, blood', 'musculature of body, limb', 'immune organ, endocrine gland, thymus', 'epithelium, kidney', 'epithelium, kidney', 'prostate gland', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, kidney', 'bodily fluid, blood', 'epithelium, exocrine gland, mouth', 'immune organ, bone marrow, lymph node, bone element', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'epithelium, kidney', 'brain', 'paraythroid gland', 'epithelium, kidney', 'brain', 'epithelium, skin of body, penis', 'bodily fluid, blood', 'colon, large intestine, intestine', 'bodily fluid, blood', 'musculature of body', 'bodily fluid, blood', 'NA', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'musculature of body, limb', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'extraembryonic component, placenta', 'connective tissue, skin of body, penis', 'connective tissue', 'bodily fluid, blood', 'extraembryonic component', 'bodily fluid, blood', 'bodily fluid, blood', 'prostate gland', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'bone marrow, bone element', 'bone element', 'adipose tissue, connective tissue', 'epithelium, endocrine gland, exocrine gland, liver', 'heart', 'heart', 'brain', 'musculature of body', 'heart', 'colon, large intestine, intestine', 'bodily fluid, blood', 'embryo', 'small intestine, intestine', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'skin of body', 'bodily fluid, blood', 'heart', 'lung', 'epithelium, colon, large intestine, intestine', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'uterus', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'small intestine, intestine', 'lymphoid tissue, intestine', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'penis', 'epithelium, endocrine gland, exocrine gland, liver', 'musculature of body, limb', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'testis, gonad', 'epithelium, kidney', 'vasculature, arterial blood vessel, blood vessel', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'NA', 'brain', 'lung, connective tissue', 'small intestine, intestine', 'bone element', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'connective tissue', 'epithelium, colon, large intestine, intestine', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'embryo', 'colon, large intestine, intestine', 'connective tissue, skin of body, penis', 'bodily fluid, blood', 'lung', 'epithelium, mammary gland, exocrine gland', 'colon, large intestine, intestine', 'bodily fluid, blood', 'embryo', 'NA', 'embryo', 'embryo, extraembryonic component', 'embryo', 'bodily fluid, blood', 'NA', 'bodily fluid, blood', 'NA', 'bodily fluid, blood', 'pancreas', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'musculature of body', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'brain, spinal cord, eye, ear', 'brain, spinal cord, eye, ear', 'bodily fluid, blood', 'bodily fluid, blood', 'NA', 'bodily fluid, blood', 'nerve, limb', 'connective tissue, skin of body, penis', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'stomach', 'musculature of body', 'bodily fluid, blood', 'connective tissue', 'epithelium, endocrine gland, exocrine gland, liver', 'skin of body', 'prostate gland', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'large intestine, intestine', 'pancreas', 'epithelium, kidney', 'ovary, gonad', 'bodily fluid, blood', 'lung', 'bodily fluid, blood', 'prostate gland', 'brain', 'large intestine, intestine', 'epithelium, kidney', 'lung, connective tissue', 'colon, large intestine, intestine', 'bodily fluid, blood', 'connective tissue', 'extraembryonic component, placenta', 'bodily fluid, blood', 'colon, large intestine, intestine', 'musculature of body, limb', 'brain, epithelium', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bone element', 'bodily fluid, blood', 'musculature of body', 'embryo, extraembryonic component, placenta', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'lymphoid tissue, intestine', 'bodily fluid, blood', 'esophagus, epithelium', 'extraembryonic component, placenta', 'embryo', 'brain, spinal cord, eye, ear', 'bodily fluid, blood', 'brain', 'colon, large intestine, intestine', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'skin of body', 'embryo, epithelium', 'musculature of body', 'NA', 'embryo', 'epithelium, breast', 'bodily fluid, blood', 'embryo', 'embryo', 'adipose tissue, connective tissue', 'adrenal gland, endocrine gland', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'bone element', 'prostate gland', 'bodily fluid, blood', 'embryo', 'skin of body', 'vasculature, arterial blood vessel, blood vessel', 'epithelium, endocrine gland, exocrine gland, liver', 'prostate gland', 'epithelium, endocrine gland, exocrine gland, liver', 'pancreas', 'bodily fluid, blood', 'brain, spinal cord, eye, ear', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'nerve, limb', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo, extraembryonic component, placenta', 'exocrine gland, endocrine gland, liver', 'epithelium, skin of body, penis', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'epithelium, kidney', 'heart', 'spinal cord', 'endocrine gland, thyroid gland', 'prostate gland, epithelium', 'immune organ, bone marrow, lymph node, bone element', 'skin of prepuce of penis, skin of body, penis', 'prostate gland', 'adrenal gland, endocrine gland', 'embryo', 'epithelium, kidney', 'colon, large intestine, intestine', 'epithelium, kidney', 'small intestine, intestine', 'bodily fluid, blood', 'NA', 'epithelium, endocrine gland, exocrine gland, liver', 'bone marrow, bone element', 'lung', 'epithelium, kidney', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'bodily fluid, blood', 'skin of body', 'bone marrow, bone element', 'esophagus, musculature of body', 'epithelium, kidney', 'embryo', 'spinal cord', 'bodily fluid, blood', 'pancreas', 'epithelium, mammary gland, exocrine gland', 'heart, musculature of body', 'epithelium, kidney', 'skin of body, limb, connective tissue', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'immune organ, bone marrow, lymph node, bone element', 'bodily fluid, blood, lymph node', 'exocrine gland, endocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'lung', 'NA', 'bodily fluid, blood', 'brain', 'bodily fluid, blood, lymph node', 'embryo', 'skin of body', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'stomach, musculature of body', 'epithelium, endocrine gland, exocrine gland, liver', 'NA', 'bodily fluid, blood', 'bone marrow, bone element', 'embryo, extraembryonic component', 'epithelium, mammary gland, exocrine gland', 'epithelium, mammary gland, exocrine gland', 'skin of prepuce of penis, skin of body, penis', 'pancreas', 'bodily fluid, blood', 'embryo', 'epithelium, mammary gland, exocrine gland', 'esophagus, epithelium', 'small intestine, intestine', 'heart', 'vagina', 'bodily fluid, blood', 'epithelium, kidney', 'brain', 'bodily fluid, blood', 'lymphoid tissue, intestine', 'bodily fluid, blood, lymph node', 'embryo', 'prostate gland', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, kidney', 'embryo', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'pancreas', 'bodily fluid, blood', 'stomach', 'brain, spinal cord, eye, ear', 'bodily fluid, blood', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, uterus', 'embryo', 'skin of body, limb', 'brain', 'embryo, extraembryonic component', 'embryo', 'lung', 'skin of prepuce of penis, skin of body, penis', 'bodily fluid, blood', 'brain, spinal cord, eye, ear', 'connective tissue, skin of body, penis', 'embryo, epithelium', 'bodily fluid, blood', 'bone marrow, bone element', 'esophagus, musculature of body', 'brain', 'lung', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'epithelium, kidney', 'brain', 'small intestine, intestine', 'epithelium, kidney', 'brain', 'lung', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'bodily fluid, blood', 'embryo', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'embryo', 'connective tissue', 'epithelium, kidney', 'epithelium, exocrine gland, mouth', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'bodily fluid, blood', 'lung', 'epithelium, kidney', 'colon, large intestine, intestine', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'adrenal gland, endocrine gland', 'musculature of body, limb', 'skin of body, limb, connective tissue', 'embryo', 'bodily fluid, blood', 'colon, large intestine, intestine', 'bodily fluid, blood', 'endocrine gland, thyroid gland', 'large intestine, intestine', 'brain', 'heart', 'connective tissue', 'adipose tissue, connective tissue', 'breast', 'epithelium, endocrine gland, exocrine gland, liver', 'pancreas', 'stomach', 'exocrine gland, endocrine gland, liver', 'bodily fluid, blood', 'brain, spinal cord, eye, ear', 'skin of body, limb, connective tissue', 'stomach, musculature of body', 'epithelium, kidney', 'epithelium, kidney', 'colon, large intestine, intestine', 'endocrine gland, thyroid gland', 'colon, large intestine, intestine', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'endocrine gland, thyroid gland', 'skin of body', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, kidney', 'epithelium, kidney', 'esophagus, epithelium', 'vasculature, arterial blood vessel, blood vessel', 'extraembryonic component', 'bodily fluid, blood', 'epithelium, kidney', 'prostate gland, epithelium', 'bodily fluid, blood, lymph node', 'bodily fluid, blood', 'exocrine gland, endocrine gland, liver', 'prostate gland', 'brain', 'epithelium, mammary gland, exocrine gland', 'breast', 'epithelium, mammary gland, exocrine gland', 'brain', 'lung', 'skin of body, limb, connective tissue', 'bodily fluid, blood', 'brain', 'stomach, musculature of body', 'skin of prepuce of penis, skin of body, penis', 'connective tissue, skin of body, penis', 'exocrine gland, endocrine gland, liver', 'epithelium, kidney', 'embryo', 'vagina', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'colon, large intestine, intestine', 'bone marrow, bone element', 'NA', 'esophagus, musculature of body', 'adipose tissue, connective tissue', 'musculature of body, limb', 'adipose tissue, connective tissue', 'epithelium, endocrine gland, exocrine gland, liver', 'colon, large intestine, intestine', 'immune organ, endocrine gland, thymus', 'epithelium, kidney', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'epithelium, endocrine gland, exocrine gland, liver', 'colon, large intestine, intestine', 'embryo', 'epithelium, endocrine gland, exocrine gland, liver', 'musculature of body', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'heart', 'embryo', 'bodily fluid, blood', 'skin of body', 'NA', 'small intestine, intestine', 'colon, large intestine, intestine', 'vasculature, arterial blood vessel, blood vessel', 'musculature of body', 'embryo', 'bodily fluid, blood', 'embryo', 'skin of body', 'colon, large intestine, intestine', 'bodily fluid, blood', 'lung', 'epithelium, mammary gland, exocrine gland', 'NA', 'nerve, limb', 'lung', 'esophagus, musculature of body', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, breast', 'bodily fluid, blood', 'vasculature, arterial blood vessel, blood vessel', 'bodily fluid, blood', 'epithelium, mammary gland, exocrine gland', 'embryo', 'embryo, extraembryonic component', 'stomach, musculature of body', 'skin of body', 'lung, connective tissue', 'adrenal gland, endocrine gland', 'pancreas', 'prostate gland', 'colon, large intestine, intestine', 'small intestine, intestine', 'bodily fluid, blood', 'lung', 'brain', 'epithelium, endocrine gland, exocrine gland, liver', 'prostate gland', 'epithelium, kidney', 'bodily fluid, blood', 'bodily fluid, blood', 'bodily fluid, blood', 'musculature of body, limb', 'embryo, extraembryonic component, placenta', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'musculature of body', 'epithelium, kidney', 'immune organ, spleen', 'epithelium, endocrine gland, exocrine gland, liver', 'immune organ, endocrine gland, thymus', 'embryo', 'bodily fluid, blood', 'large intestine, musculature of body, intestine', 'brain', 'breast', 'lung', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, mammary gland, exocrine gland', 'musculature of body, limb', 'endocrine gland, thyroid gland', 'bone element', 'NA', 'embryo', 'brain', 'embryo', 'ovary, gonad', 'vasculature, arterial blood vessel, blood vessel', 'immune organ, bone marrow, lymph node, bone element', 'NA', 'embryo', 'lung, connective tissue', 'bodily fluid, blood', 'embryo, extraembryonic component, placenta', 'pancreas', 'bone marrow, bone element', 'bodily fluid, blood', 'small intestine, intestine', 'embryo', 'NA', 'epithelium, endocrine gland, exocrine gland, liver', 'immune organ, spleen', 'extraembryonic component', 'embryo, extraembryonic component', 'vasculature, arterial blood vessel, blood vessel', 'embryo, extraembryonic component', 'vasculature, arterial blood vessel, blood vessel', 'bone marrow, bone element', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'vagina', 'bodily fluid, blood, lymph node', 'embryo, extraembryonic component, placenta', 'bodily fluid, blood', 'lung', 'NA', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'epithelium, kidney', 'epithelium, mammary gland, exocrine gland', 'embryo', 'heart', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'bodily fluid, blood', 'epithelium, skin of body', 'bodily fluid, blood', 'lung', 'stomach, musculature of body', 'bodily fluid, blood', 'musculature of body, limb', 'lung', 'penis', 'heart', 'embryo', 'bodily fluid, blood', 'bodily fluid, blood', 'colon, large intestine, intestine', 'bodily fluid, blood', 'vasculature, arterial blood vessel, blood vessel', 'brain', 'endocrine gland, thyroid gland', 'vagina', 'brain', 'bodily fluid, blood', 'bone element', 'bodily fluid, blood', 'pancreas', 'epithelium, kidney', 'extraembryonic component, placenta', 'bodily fluid, blood, lymph node', 'brain', 'epithelium, kidney', 'colon, large intestine, intestine', 'pancreas', 'epithelium, mammary gland, exocrine gland', 'bodily fluid, blood', 'bone marrow, bone element', 'skin of body', 'adipose tissue, connective tissue', 'bodily fluid, blood', 'testis, gonad', 'exocrine gland, endocrine gland, liver', 'lymphoid tissue, intestine', 'vasculature, arterial blood vessel, blood vessel', 'brain, spinal cord, eye, ear', 'adipose tissue, connective tissue', 'vasculature, arterial blood vessel, blood vessel', 'epithelium, kidney', 'pancreas', 'epithelium, mammary gland, exocrine gland', 'epithelium, kidney', 'bodily fluid, blood', 'lung', 'epithelium, mammary gland, exocrine gland', 'skin of body', 'bodily fluid, blood', 'bodily fluid, blood', 'prostate gland, epithelium', 'vasculature, arterial blood vessel, blood vessel', 'musculature of body', 'heart', 'epithelium, endocrine gland, exocrine gland, liver', 'epithelium, endocrine gland, exocrine gland, liver', 'vasculature, arterial blood vessel, blood vessel', 'adipose tissue, connective tissue', 'skin of body', 'bodily fluid, blood', 'epithelium, endocrine gland, exocrine gland, liver', 'embryo', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'adrenal gland, endocrine gland', 'NA', 'epithelium, kidney', 'epithelium, endocrine gland, exocrine gland, liver', 'kidney', 'heart, musculature of body', 'exocrine gland, endocrine gland, liver', 'lymphoid tissue, intestine', 'musculature of body', 'lung', 'brain', 'bodily fluid, blood', 'skin of body', 'epithelium, kidney', 'immune organ, bone marrow, lymph node, bone element', 'epithelium, kidney', 'bodily fluid, blood', 'brain', 'bodily fluid, blood', 'musculature of body, limb', 'bodily fluid, blood', 'large intestine, intestine', 'uterus', 'epithelium, mammary gland, exocrine gland', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA']
['ectoderm', 'ectoderm', 'mesoderm', '', 'ectoderm', 'ectoderm', 'ectoderm', 'endoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', '', '', 'mesoderm', 'mesoderm', '', '', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'ectoderm', '', 'ectoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm, endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', '', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'ectoderm, mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', '', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', '', 'ectoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'ectoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm, endoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm', 'endoderm', '', 'endoderm', 'mesoderm, endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', '', 'mesoderm', 'mesoderm, endoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm, endoderm', 'endoderm', 'mesoderm, endoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', '', 'mesoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm, endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm, endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', '', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', '', 'endoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', '', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm, endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm, endoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'NA', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm, endoderm', 'ectoderm', '', 'mesoderm, endoderm', 'ectoderm', 'ectoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm, endoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm, endoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm, ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm, endoderm', '', 'mesoderm', 'mesoderm, endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', '', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm, endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'ectoderm, mesoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', '', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm, endoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm, endoderm', 'mesoderm', 'ectoderm', '', 'mesoderm, endoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'ectoderm, mesoderm', 'endoderm', 'ectoderm, mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'ectoderm', 'mesoderm', '', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm, endoderm', 'endoderm', '', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', '', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', '', 'mesoderm', 'endoderm', 'mesoderm, ectoderm', 'ectoderm', '', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'mesoderm', 'mesoderm, endoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm, endoderm', 'mesoderm, endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm, mesoderm', '', 'endoderm', 'mesoderm, endoderm', 'NA', '', 'endoderm', '', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'NA', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', '', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', '', '', '', '', '', '', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'endoderm', '', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', '', '', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm', '', '', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', '', '', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', '', '', '', 'mesoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', '', '', '', 'endoderm', '', '', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', '', '', '', '', '', '', '', '', '', '', '', '', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'ectoderm', 'endoderm', '', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', '', 'endoderm', 'mesoderm', '', 'mesoderm', '', '', 'mesoderm', 'mesoderm', 'ectoderm', '', '', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'endoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'endoderm', '', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', '', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', '', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', '', 'endoderm, mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'endoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'ectoderm', 'ectoderm', '', '', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'NA', 'mesoderm', '', '', '', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', '', '', '', 'endoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', '', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', '', '', '', '', '', '', '', '', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'NA', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'NA', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', '', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'NA', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'endoderm', '', 'endoderm, mesoderm', '', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', '', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'NA', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'ectoderm', 'endoderm, mesoderm', '', 'mesoderm', '', 'NA', 'mesoderm', 'ectoderm', 'endoderm', '', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'ectoderm, mesoderm', '', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'NA', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', '', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', '', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'ectoderm', '', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'NA', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', '', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'NA', 'endoderm', 'mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'NA', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'NA', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'ectoderm', 'mesoderm', 'NA', 'ectoderm', 'ectoderm', 'NA', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'NA', 'endoderm', 'NA', 'mesoderm', 'ectoderm', 'NA', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'NA', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', '', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', '', '', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', '', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', '', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'endoderm', '', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'ectoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', '', 'endoderm', '', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'ectoderm', '', 'endoderm, mesoderm', 'NA', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'endoderm', '', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', '', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm, mesoderm', 'endoderm', '', 'mesoderm', 'mesoderm', '', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'ectoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'ectoderm', '', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', '', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'NA', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', '', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', '', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm, mesoderm', '', 'endoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'NA', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', '', 'endoderm, mesoderm', '', '', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'NA', 'mesoderm', 'endoderm, mesoderm', 'endoderm', '', 'mesoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm, mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'NA', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm, mesoderm', 'NA', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', '', 'ectoderm', 'ectoderm', '', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', '', '', '', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'NA', 'ectoderm, mesoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'endoderm', '', 'mesoderm', 'ectoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'ectoderm', 'NA', '', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'NA', '', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', '', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm', '', '', 'mesoderm', 'mesoderm', 'mesoderm', '', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', '', 'endoderm', '', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', '', 'endoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', '', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', '', 'ectoderm, mesoderm', 'mesoderm', '', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', '', 'ectoderm', 'mesoderm', 'ectoderm', '', 'endoderm', 'endoderm', '', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', '', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'mesoderm', 'endoderm', '', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'ectoderm', 'endoderm, mesoderm', 'endoderm', '', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'ectoderm', 'mesoderm', 'NA', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'ectoderm', 'endoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', '', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm, mesoderm', 'ectoderm', 'endoderm, mesoderm', '', 'endoderm', 'NA', 'mesoderm', 'mesoderm', 'mesoderm', '', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'NA', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', '', '', 'endoderm', 'NA', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'ectoderm, mesoderm', 'endoderm', 'NA', 'ectoderm', 'ectoderm, mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'NA', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm, mesoderm', 'endoderm', 'ectoderm, mesoderm', '', 'NA', 'mesoderm', 'mesoderm', '', 'ectoderm', '', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'NA', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', '', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'NA', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm, mesoderm', 'NA', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'NA', 'ectoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'NA', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', '', 'ectoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', '', 'ectoderm', 'endoderm', 'ectoderm', '', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'endoderm', '', 'endoderm', 'endoderm, mesoderm', '', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', '', 'ectoderm', 'NA', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', '', 'mesoderm', 'ectoderm', 'NA', 'ectoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', '', '', 'mesoderm', 'endoderm', '', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', '', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', '', '', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'NA', 'ectoderm, mesoderm', 'NA', 'ectoderm, mesoderm', 'NA', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', '', 'NA', 'endoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', '', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'NA', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'NA', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', '', 'ectoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', '', 'endoderm', 'endoderm, mesoderm', '', 'endoderm', 'mesoderm', 'ectoderm', 'NA', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', '', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'NA', 'mesoderm', 'ectoderm', 'endoderm', 'ectoderm', 'ectoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'ectoderm, mesoderm', '', 'endoderm', 'endoderm', 'NA', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm', 'NA', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'endoderm', '', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', '', 'mesoderm', 'endoderm', '', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'endoderm', 'NA', 'ectoderm', 'ectoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', '', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', '', 'mesoderm', '', 'ectoderm', 'endoderm', '', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', '', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'NA', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'NA', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', '', '', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'NA', 'mesoderm', 'endoderm', 'endoderm', 'NA', '', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', '', 'endoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'ectoderm', 'endoderm', 'NA', '', 'endoderm', 'endoderm', '', '', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'NA', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'NA', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm, mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'NA', 'endoderm', '', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'NA', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm, mesoderm', 'ectoderm', 'NA', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', '', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', '', 'ectoderm', 'ectoderm, mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'NA', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', '', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'NA', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', '', 'ectoderm', 'mesoderm', 'NA', 'endoderm', 'endoderm', '', 'mesoderm', '', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', '', '', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', '', '', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'endoderm, mesoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'ectoderm', 'mesoderm', '', 'NA', '', 'NA', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', '', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'mesoderm', '', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'NA', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', '', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', '', 'endoderm', 'NA', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'NA', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', '', 'ectoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', '', 'NA', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', '', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'NA', '', '', '', 'endoderm, mesoderm', 'NA', 'mesoderm', 'NA', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'NA', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', '', 'endoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'ectoderm', '', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'ectoderm', '', 'mesoderm', 'NA', '', '', 'mesoderm', '', '', 'mesoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', '', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'ectoderm', '', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'endoderm, mesoderm', 'ectoderm, mesoderm', '', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'NA', 'endoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'ectoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', 'endoderm', 'NA', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', '', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'endoderm', 'NA', 'mesoderm', 'mesoderm', '', 'ectoderm', 'ectoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', '', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'mesoderm', '', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', '', 'endoderm', '', 'mesoderm', 'ectoderm', 'ectoderm', '', '', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'ectoderm, mesoderm', '', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', '', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'ectoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm', '', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'endoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm, mesoderm', 'ectoderm', 'ectoderm', '', 'ectoderm', 'ectoderm', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'endoderm', 'ectoderm, mesoderm', 'ectoderm, mesoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'NA', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'endoderm', '', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm, mesoderm', 'mesoderm', 'endoderm', 'mesoderm', '', 'mesoderm', 'ectoderm', 'NA', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'endoderm', 'ectoderm', 'NA', 'ectoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', '', 'endoderm, mesoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'ectoderm', '', 'mesoderm', 'ectoderm', 'endoderm', 'ectoderm, mesoderm', 'endoderm', 'endoderm, mesoderm', 'endoderm', 'endoderm', '', 'endoderm', 'ectoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', '', 'mesoderm', 'mesoderm', 'ectoderm', '', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'NA', '', 'ectoderm', 'ectoderm', '', 'mesoderm', 'mesoderm', 'NA', '', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', '', 'NA', 'endoderm', 'mesoderm', 'mesoderm', '', 'mesoderm', '', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'NA', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm', '', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'ectoderm, mesoderm', 'mesoderm', '', 'mesoderm', 'endoderm, mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'endoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'ectoderm', 'mesoderm', 'endoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', '', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'endoderm', '', 'mesoderm', 'ectoderm', 'mesoderm', 'ectoderm, mesoderm', 'NA', 'mesoderm', 'endoderm', 'mesoderm', 'mesoderm', 'endoderm', 'endoderm, mesoderm', 'mesoderm', 'endoderm', 'ectoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'mesoderm', 'ectoderm', 'mesoderm', 'mesoderm', 'endoderm, mesoderm', 'endoderm', '', 'ectodermcode></pre>
</div>
</div>
<div class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">df_targets.columns</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="66">
<pre><code>Index(['index', 'genome', 'identifier', 'file', 'clip', 'scale', 'sum_stat',
       'description', 'system', 'cell', 'organ', 'developmental'],
      dtype='object')</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/annotating-targets-table/annotate_targets.html</guid>
  <pubDate>Mon, 17 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing two methods of averaging Enformer results for personalized prediction</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-13-comparing-enformer-averages/Compare_averages.html</link>
  <description><![CDATA[ 




<section id="import-libraries" class="level2">
<h2 class="anchored" data-anchor-id="import-libraries">Import Libraries</h2>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make sure the GPU is enabled </span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Start the colab kernel with GPU: Runtime -&gt; Change runtime type -&gt; GPU'</span></span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Num GPUs Available: "</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>)))</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for interacting with saved models and tensorflow hub</span></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gzip <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating compressed files</span></span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating fasta files</span></span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># same as above, really</span></span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to index our reference genome file</span></span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating dataframes</span></span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for numerical computations</span></span>
<span id="cb1-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for plotting</span></span>
<span id="cb1-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for plotting</span></span>
<span id="cb1-15"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for plotting</span></span>
<span id="cb1-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pickle <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for saving large objects</span></span>
<span id="cb1-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># functions for interacting with the operating system</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb1-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'retina'</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Num GPUs Available:  1</code></pre>
</div>
</div>
</section>
<section id="define-paths" class="level2">
<h2 class="anchored" data-anchor-id="define-paths">Define Paths</h2>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb3-2">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb3-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer-tutorial/genome.fa'</span></span>
<span id="cb3-4">targets_txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/calico/basenji/master/manuscripts/cross2020/targets_human.txt'</span></span>
<span id="cb3-5">df_targets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(targets_txt, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
</section>
<section id="define-functions" class="level2">
<h2 class="anchored" data-anchor-id="define-functions">Define Functions</h2>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `Enformer`, `EnformerScoreVariantsNormalized`, `EnformerScoreVariantsPCANormalized`,</span></span>
<span id="cb4-2">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb4-5"></span>
<span id="cb4-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb4-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb4-8"></span>
<span id="cb4-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb4-10">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb4-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb4-12"></span>
<span id="cb4-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb4-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb4-15">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb4-16">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb4-17"></span>
<span id="cb4-18">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb4-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb4-20">      tape.watch(input_sequence)</span>
<span id="cb4-21">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb4-22">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb4-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb4-24"></span>
<span id="cb4-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb4-26">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-28"></span>
<span id="cb4-29"></span>
<span id="cb4-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsRaw:</span>
<span id="cb4-31"></span>
<span id="cb4-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb4-33">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(tfhub_url)</span>
<span id="cb4-34">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> organism</span>
<span id="cb4-35"></span>
<span id="cb4-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb4-37">    ref_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb4-38">    alt_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb4-39"></span>
<span id="cb4-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> alt_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ref_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-41"></span>
<span id="cb4-42"></span>
<span id="cb4-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsNormalized:</span>
<span id="cb4-44"></span>
<span id="cb4-45">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb4-46">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb4-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transforms only compatible with organism=human'</span></span>
<span id="cb4-48">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb4-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-50">      transform_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb4-51">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_pipeline.steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># StandardScaler.</span></span>
<span id="cb4-52"></span>
<span id="cb4-53">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb4-54">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb4-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)</span>
<span id="cb4-56"></span>
<span id="cb4-57"></span>
<span id="cb4-58"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsPCANormalized:</span>
<span id="cb4-59"></span>
<span id="cb4-60">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb4-61">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, num_top_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>):</span>
<span id="cb4-62">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb4-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-64">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb4-65">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_top_features</span>
<span id="cb4-66"></span>
<span id="cb4-67">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb4-68">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb4-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)[:, :<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features]</span>
<span id="cb4-70"></span>
<span id="cb4-71"></span>
<span id="cb4-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(avsec): Add feature description: Either PCX, or full names.</span></span>
<span id="cb4-73"></span>
<span id="cb4-74"></span>
<span id="cb4-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `variant_centered_sequences`</span></span>
<span id="cb4-76"></span>
<span id="cb4-77"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb4-78"></span>
<span id="cb4-79">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb4-80">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb4-81">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb4-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import pd.Interval as Interval</span></span>
<span id="cb4-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb4-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb4-85">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb4-86">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb4-87">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb4-88">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb4-89">                                    )</span>
<span id="cb4-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb4-91">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb4-92">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-93">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb4-94">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb4-95">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-96">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb4-98"></span>
<span id="cb4-99">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb4-101"></span>
<span id="cb4-102"></span>
<span id="cb4-103"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb4-104">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span>
<span id="cb4-105"></span>
<span id="cb4-106"></span>
<span id="cb4-107"></span>
<span id="cb4-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `plot_tracks`</span></span>
<span id="cb4-109"></span>
<span id="cb4-110"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb4-111">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-112">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb4-113">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb4-114">    ax.set_title(title)</span>
<span id="cb4-115">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-116">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb4-117">  plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Bio</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Bio.Seq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Seq</span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_rev_complement(dna_string):</span>
<span id="cb5-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(Seq(dna_string).reverse_complement()))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> prepare_for_quantify_prediction_per_TSS(predictions, gene, tss_df):</span>
<span id="cb6-2"></span>
<span id="cb6-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters:</span></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          predicitions (A numpy array): All predictions from the track</span></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          gene (a gene name, character): a gene</span></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          tss_df: a list of dataframe of genes and their transcription start sites</span></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns:</span></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          A dictionary of cage experiment predictions and a list of transcription start sites</span></span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb6-13"></span>
<span id="cb6-14">  output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb6-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tdf <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tss_df:</span>
<span id="cb6-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tdf.genes.values:</span>
<span id="cb6-17">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb6-18">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tdf[tdf.genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gene].txStart_Sites.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>).values</span>
<span id="cb6-19">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_tss_list]</span>
<span id="cb6-20">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(item) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> nestedlist <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_tss_list <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> nestedlist]</span>
<span id="cb6-21">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(gene_tss_list))</span>
<span id="cb6-22">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cage_predictions'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a numpy array</span></span>
<span id="cb6-23">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_TSS'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_tss_list <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a list</span></span>
<span id="cb6-24"></span>
<span id="cb6-25"></span>
<span id="cb6-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(output) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a dictionary</span></span>
<span id="cb6-27"></span>
<span id="cb6-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> quantify_prediction_per_TSS(low_range, TSS, cage_predictions):</span>
<span id="cb6-29"></span>
<span id="cb6-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb6-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters:</span></span>
<span id="cb6-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          low_range (int): The lower interval</span></span>
<span id="cb6-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          TSS (list of integers): A list of TSS for a gene</span></span>
<span id="cb6-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          cage_predictions: A 1D numpy array or a vector of predictions from enformer corresponding to track 5110 or CAGE predictions</span></span>
<span id="cb6-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns:</span></span>
<span id="cb6-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          A dictionary of gene expression predictions for each TSS for a gene</span></span>
<span id="cb6-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb6-38">  tss_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb6-39">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tss <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> TSS:</span>
<span id="cb6-40">    bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">768</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)</span>
<span id="cb6-41">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> tss:</span>
<span id="cb6-43">      bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb6-44">      count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(cage_predictions)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb6-46">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb6-47">    cage_preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb6-48">    tss_predictions[tss] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cage_preds</span>
<span id="cb6-49"></span>
<span id="cb6-50">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(tss_predictions)</span>
<span id="cb6-51"></span>
<span id="cb6-52"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> collect_intervals(chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"22"</span>], gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb6-53"></span>
<span id="cb6-54">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb6-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters :</span></span>
<span id="cb6-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      chromosomes : a list of chromosome numbers; each element should be a string format</span></span>
<span id="cb6-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      gene_list : a list of genes; the genes should be located on those chromosomes</span></span>
<span id="cb6-58"></span>
<span id="cb6-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns :</span></span>
<span id="cb6-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      A dictionary of genes (from gene_list) and their intervals within their respective chromosomes</span></span>
<span id="cb6-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb6-62"></span>
<span id="cb6-63">  gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Collect intervals for our genes of interest</span></span>
<span id="cb6-64"></span>
<span id="cb6-65">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> chrom <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chromosomes:</span>
<span id="cb6-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer-tutorial/gene_chroms/gene_"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> chrom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> chrom_genes:</span>
<span id="cb6-67">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chrom_genes:</span>
<span id="cb6-68">        split_line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> line.strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-69">        gene_intervals[split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-70">                                          split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb6-71">                                          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]),</span>
<span id="cb6-72">                                          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb6-73">                                        ]</span>
<span id="cb6-74"></span>
<span id="cb6-75">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if the user has supplied a list of genes they are interested in</span></span>
<span id="cb6-76">    use_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>((k, gene_intervals[k]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_intervals)</span>
<span id="cb6-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(use_genes)</span>
<span id="cb6-78">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)):</span>
<span id="cb6-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(gene_intervals)</span>
<span id="cb6-80"></span>
<span id="cb6-81"></span>
<span id="cb6-82"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> run_predictions(gene_intervals, tss_dataframe, individuals_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb6-83">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb6-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters :</span></span>
<span id="cb6-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    gene_intervals : the results from calling `collect_intervals`</span></span>
<span id="cb6-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_dataframe : a list of the TSSs dataframes i.e. the TSS for the genes in the chromosomes</span></span>
<span id="cb6-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    individuals_list : a list of individuals on which we want to make predictions; defaults to None</span></span>
<span id="cb6-88"></span>
<span id="cb6-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns :</span></span>
<span id="cb6-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A list of predictions; the first element is the predictions around the TSS for each gene. The second is the prediction across CAGE tracks</span></span>
<span id="cb6-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb6-92"></span>
<span id="cb6-93">  gene_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb6-94">  gene_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb6-95"></span>
<span id="cb6-96">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_intervals.keys():</span>
<span id="cb6-97">    gene_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb6-98">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb6-99">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb6-100">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># creates an interval to select the right sequences</span></span>
<span id="cb6-101">    target_fa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta_extractor.extract(target_interval.resize(SEQUENCE_LENGTH))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extracts the fasta sequences, and resizes such that it is compatible with the sequence_length</span></span>
<span id="cb6-102">    window_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_interval.resize(SEQUENCE_LENGTH) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we also need information about the start and end locations after resizing</span></span>
<span id="cb6-103">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb6-104">      cur_gene_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer-tutorial/individual_beds/chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read in the appropriate bed file for the gene</span></span>
<span id="cb6-105">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb6-106">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb6-107">    individual_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb6-108">    individual_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb6-109"></span>
<span id="cb6-110">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(np.empty([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))):</span>
<span id="cb6-111">      use_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals_list</span>
<span id="cb6-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)):</span>
<span id="cb6-113">      use_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cur_gene_vars.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]</span>
<span id="cb6-114"></span>
<span id="cb6-115">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> use_individuals:</span>
<span id="cb6-116">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Currently on gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, and predicting on individual </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">...'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(gene, individual))</span>
<span id="cb6-117">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># two haplotypes per individual</span></span>
<span id="cb6-118">      haplo_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(target_fa[:])</span>
<span id="cb6-119">      haplo_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(target_fa[:])</span>
<span id="cb6-120"></span>
<span id="cb6-121">      ref_mismatch_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb6-122">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i,row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> cur_gene_vars.iterrows():</span>
<span id="cb6-123"></span>
<span id="cb6-124">        geno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[individual].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb6-125">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(haplo_2):</span>
<span id="cb6-126">          <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb6-127">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb6-128">          <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb6-129">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> geno[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>:</span>
<span id="cb6-130">          haplo_1[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ALT"</span>]</span>
<span id="cb6-131">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> geno[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>:</span>
<span id="cb6-132">          haplo_2[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ALT"</span>]</span>
<span id="cb6-133"></span>
<span id="cb6-134">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict on the individual's two haplotypes</span></span>
<span id="cb6-135">      prediction_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo_1))[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-136">      prediction_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo_2))[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-137"></span>
<span id="cb6-138">      temp_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [prediction_1[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>], prediction_2[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CAGE predictions we are interested in</span></span>
<span id="cb6-139">      individual_prediction[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_predictions</span>
<span id="cb6-140"></span>
<span id="cb6-141">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate TSS CAGE expression which correspond to column 5110 of the predictions above</span></span>
<span id="cb6-142">      temp_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb6-143"></span>
<span id="cb6-144">      pred_prepared_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_for_quantify_prediction_per_TSS(predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_1, gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene, tss_df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tss_dataframe)</span>
<span id="cb6-145">      tss_predictions_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quantify_prediction_per_TSS(low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> window_coords.start, TSS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_TSS'</span>], cage_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cage_predictions'</span>])</span>
<span id="cb6-146"></span>
<span id="cb6-147">      pred_prepared_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_for_quantify_prediction_per_TSS(predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_2, gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene, tss_df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tss_dataframe)</span>
<span id="cb6-148">      tss_predictions_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quantify_prediction_per_TSS(low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> window_coords.start, TSS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_TSS'</span>], cage_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cage_predictions'</span>])</span>
<span id="cb6-149"></span>
<span id="cb6-150">      temp_list.append(tss_predictions_1)</span>
<span id="cb6-151">      temp_list.append(tss_predictions_2) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># results here are a dictionary for each TSS for each haplotype</span></span>
<span id="cb6-152"></span>
<span id="cb6-153">      individual_results[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_list <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save for the individual</span></span>
<span id="cb6-154"></span>
<span id="cb6-155">    gene_output[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individual_results</span>
<span id="cb6-156">    gene_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individual_prediction</span>
<span id="cb6-157"></span>
<span id="cb6-158">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>([gene_output, gene_predictions])</span>
<span id="cb6-159"></span>
<span id="cb6-160"></span>
<span id="cb6-161"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> collect_target_intervals(gene_intervals):</span>
<span id="cb6-162"></span>
<span id="cb6-163">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb6-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns a dictionary of Interval objects (from kipoiseq) for each gene corresponding to the locations of the gene</span></span>
<span id="cb6-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb6-166"></span>
<span id="cb6-167">  target_intervals_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb6-168"></span>
<span id="cb6-169">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_intervals.keys():</span>
<span id="cb6-170">    gene_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb6-171">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb6-172">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb6-173">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb6-174">    target_intervals_dict[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_interval</span>
<span id="cb6-175"></span>
<span id="cb6-176">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(target_intervals_dict)</span>
<span id="cb6-177"></span>
<span id="cb6-178"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> prepare_for_plot_tracks(gene, individual, all_predictions, chromosome<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'22'</span>]):</span>
<span id="cb6-179"></span>
<span id="cb6-180">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb6-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  This returns a dictionary of gene tracks and gene intervals, prepared for the function plot_tracks.</span></span>
<span id="cb6-182"></span>
<span id="cb6-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters:</span></span>
<span id="cb6-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - gene</span></span>
<span id="cb6-185"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - individual</span></span>
<span id="cb6-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - all_predictions</span></span>
<span id="cb6-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb6-188"></span>
<span id="cb6-189">  haplo_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_predictions[gene][individual]</span>
<span id="cb6-190">  gene_tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | haplotype 1'</span>: np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]),</span>
<span id="cb6-191">                gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | haplotype 2'</span>: np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])}</span>
<span id="cb6-192"></span>
<span id="cb6-193">  gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chromosome, gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[gene])</span>
<span id="cb6-194">  gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_target_intervals(gene_intervals)</span>
<span id="cb6-195"></span>
<span id="cb6-196">  output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb6-197">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_tracks'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_tracks</span>
<span id="cb6-198">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_intervals'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb6-199"></span>
<span id="cb6-200">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(output)</span>
<span id="cb6-201"></span>
<span id="cb6-202"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> check_individuals(path_to_bed_file, list_of_individuals):</span>
<span id="cb6-203"></span>
<span id="cb6-204">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb6-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Checks if an individual is missing in bed variation files.</span></span>
<span id="cb6-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  These individuals should be removed prior to training</span></span>
<span id="cb6-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb6-208"></span>
<span id="cb6-209">  myfile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(path_to_bed_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb6-210">  myline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> myfile.readline()</span>
<span id="cb6-211">  bed_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> myline.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]</span>
<span id="cb6-212">  myfile.close()</span>
<span id="cb6-213"></span>
<span id="cb6-214">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(list_of_individuals).issubset(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(bed_names)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb6-215">    missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(list_of_individuals).difference(bed_names))</span>
<span id="cb6-216">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'This (or these) individual(s) is/are not present: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(missing))</span>
<span id="cb6-217">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb6-218">    missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-219">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All individuals are present in the bed file.'</span>)</span>
<span id="cb6-220"></span>
<span id="cb6-221">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(missing)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> geno_to_seq(gene, individual):</span>
<span id="cb7-2">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># two haplotypes per individual</span></span>
<span id="cb7-3">  haplo_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(target_fa[:])</span>
<span id="cb7-4">  haplo_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(target_fa[:])</span>
<span id="cb7-5"></span>
<span id="cb7-6">  ref_mismatch_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb7-7">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i,row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> cur_gene_vars.iterrows():</span>
<span id="cb7-8"></span>
<span id="cb7-9">    geno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[individual].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb7-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(haplo_2):</span>
<span id="cb7-11">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb7-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb7-13">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb7-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> geno[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>:</span>
<span id="cb7-15">      haplo_1[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ALT"</span>]</span>
<span id="cb7-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> geno[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>:</span>
<span id="cb7-17">      haplo_2[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ALT"</span>]</span>
<span id="cb7-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> haplo_1, haplo_2</span>
<span id="cb7-19"></span>
<span id="cb7-20">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict on the individual's two haplotypes</span></span>
<span id="cb7-21">    </span></code></pre></div>
</div>
</section>
<section id="prepare-input-data" class="level2">
<h2 class="anchored" data-anchor-id="prepare-input-data">Prepare input data</h2>
<p>We want to predict epigenome around ERAP2 TSS on chromosome 5.</p>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">chr5_tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer-tutorial/tss_by_chr/chr5_tss_by_gene.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb8-2">erap2_variations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer-tutorial/individual_beds/chr5/chr5_ERAP2.bed'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb8-3">geuvadis_gene_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://uchicago.box.com/shared/static/5vwc7pjw9qmtv7298c4rc7bcuicoyemt.gz'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb8-4">                                         dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_name'</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TargetID'</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Chr'</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>})</span>
<span id="cb8-5">geuvadis_gene_expression.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th">gene_name</th>
<th data-quarto-table-cell-role="th">TargetID</th>
<th data-quarto-table-cell-role="th">Chr</th>
<th data-quarto-table-cell-role="th">Coord</th>
<th data-quarto-table-cell-role="th">HG00096</th>
<th data-quarto-table-cell-role="th">HG00097</th>
<th data-quarto-table-cell-role="th">HG00099</th>
<th data-quarto-table-cell-role="th">HG00100</th>
<th data-quarto-table-cell-role="th">HG00101</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">NA20810</th>
<th data-quarto-table-cell-role="th">NA20811</th>
<th data-quarto-table-cell-role="th">NA20812</th>
<th data-quarto-table-cell-role="th">NA20813</th>
<th data-quarto-table-cell-role="th">NA20814</th>
<th data-quarto-table-cell-role="th">NA20815</th>
<th data-quarto-table-cell-role="th">NA20816</th>
<th data-quarto-table-cell-role="th">NA20819</th>
<th data-quarto-table-cell-role="th">NA20826</th>
<th data-quarto-table-cell-role="th">NA20828</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ENSG00000223972.4</td>
<td>DDX11L1</td>
<td>ENSG00000223972.4</td>
<td>1</td>
<td>11869</td>
<td>0.320818</td>
<td>0.344202</td>
<td>0.354225</td>
<td>0.478064</td>
<td>-0.102815</td>
<td>...</td>
<td>1.008605</td>
<td>0.384489</td>
<td>0.581284</td>
<td>0.513981</td>
<td>0.667449</td>
<td>0.350890</td>
<td>0.186103</td>
<td>-0.037976</td>
<td>0.405439</td>
<td>0.199143</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>ENSG00000227232.3</td>
<td>WASH7P</td>
<td>ENSG00000227232.3</td>
<td>1</td>
<td>29806</td>
<td>33.714457</td>
<td>20.185174</td>
<td>18.095407</td>
<td>24.100871</td>
<td>29.018719</td>
<td>...</td>
<td>30.980194</td>
<td>34.086207</td>
<td>39.678442</td>
<td>29.643513</td>
<td>27.120420</td>
<td>29.121624</td>
<td>31.117198</td>
<td>32.047074</td>
<td>22.798959</td>
<td>23.563874</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>ENSG00000243485.1</td>
<td>MIR1302-11</td>
<td>ENSG00000243485.1</td>
<td>1</td>
<td>29554</td>
<td>0.240408</td>
<td>0.157456</td>
<td>0.218806</td>
<td>0.320878</td>
<td>0.067833</td>
<td>...</td>
<td>0.065940</td>
<td>0.228784</td>
<td>0.140642</td>
<td>0.283905</td>
<td>0.273821</td>
<td>0.286311</td>
<td>0.324060</td>
<td>0.049574</td>
<td>0.255288</td>
<td>0.157440</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>ENSG00000238009.2</td>
<td>RP11-34P13.7</td>
<td>ENSG00000238009.2</td>
<td>1</td>
<td>133566</td>
<td>0.328272</td>
<td>0.327932</td>
<td>0.090064</td>
<td>0.420443</td>
<td>0.220269</td>
<td>...</td>
<td>0.274071</td>
<td>0.384179</td>
<td>0.533693</td>
<td>0.307221</td>
<td>0.307367</td>
<td>0.400278</td>
<td>0.612321</td>
<td>0.666633</td>
<td>0.281138</td>
<td>1.346129</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>ENSG00000239945.1</td>
<td>RP11-34P13.8</td>
<td>ENSG00000239945.1</td>
<td>1</td>
<td>91105</td>
<td>0.332171</td>
<td>-0.032164</td>
<td>0.017323</td>
<td>0.424677</td>
<td>0.214025</td>
<td>...</td>
<td>0.347323</td>
<td>0.346744</td>
<td>0.073580</td>
<td>0.400396</td>
<td>0.470517</td>
<td>0.069749</td>
<td>0.299353</td>
<td>0.090019</td>
<td>0.282554</td>
<td>-0.157170</td>
</tr>
</tbody>
</table>

<p>5 rows × 467 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>], gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>])</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># here we load the model architecture.</span></span>
<span id="cb10-2"></span>
<span id="cb10-3">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we define a class called fasta_extractor to help us extra raw sequence data</span></span></code></pre></div>
</div>
</section>
<section id="run-predictions" class="level2">
<h2 class="anchored" data-anchor-id="run-predictions">Run Predictions</h2>
<p>We’ll pick one individual at random.</p>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">rand_individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], replace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># individuals we are interested in</span></span>
<span id="cb11-2">rand_individual</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>'NA19160'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span></span>
<span id="cb13-2">gene_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb13-3">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb13-4">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb13-5">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb13-6">target_fa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta_extractor.extract(target_interval.resize(SEQUENCE_LENGTH))</span>
<span id="cb13-7">window_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_interval.resize(SEQUENCE_LENGTH)</span>
<span id="cb13-8">cur_gene_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer-tutorial/individual_beds/chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read in the appropriate bed file for the gene</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">haplo_1, haplo_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geno_to_seq(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>, rand_individual)</span>
<span id="cb14-2"></span>
<span id="cb14-3">haplo_1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo_1))[np.newaxis]</span>
<span id="cb14-4">haplo_2_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo_2))[np.newaxis]</span>
<span id="cb14-5">average_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.add(haplo_1_enc, haplo_2_enc) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">prediction_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(haplo_1_enc)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb15-2">prediction_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(haplo_2_enc)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb15-3"></span>
<span id="cb15-4">pre_average <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(average_enc)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb15-5">post_average <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (prediction_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> prediction_2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pre_average)</span>
<span id="cb16-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(post_average)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[0.09901776 0.09164002 0.0699944  ... 0.00303012 0.00990325 0.01237618]
 [0.05784911 0.05089986 0.03969494 ... 0.00734875 0.02510322 0.0280255 ]
 [0.00580059 0.00483631 0.00361973 ... 0.0036824  0.00902823 0.01077321]
 ...
 [0.00023449 0.00016057 0.00016778 ... 0.00083343 0.0026698  0.00314449]
 [0.00304364 0.00254643 0.00265122 ... 0.00092347 0.00226813 0.00265463]
 [0.05069465 0.03909001 0.03585194 ... 0.00824723 0.03236783 0.0296576 ]]
[[0.09910323 0.09164958 0.07005598 ... 0.00303381 0.00984134 0.01238221]
 [0.05783322 0.05087575 0.03971903 ... 0.00735789 0.02497963 0.0280641 ]
 [0.00579469 0.00483093 0.00361714 ... 0.00366731 0.00894659 0.01073787]
 ...
 [0.00024071 0.00016465 0.00017168 ... 0.0007882  0.00254766 0.00304421]
 [0.0030893  0.00256867 0.00267111 ... 0.00086807 0.0020461  0.00242939]
 [0.05074473 0.03918105 0.03594471 ... 0.00819363 0.03179348 0.02920263]]</code></pre>
</div>
</div>
</section>
<section id="comparing-across-tracks" class="level2">
<h2 class="anchored" data-anchor-id="comparing-across-tracks">Comparing across tracks</h2>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb18-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>):</span>
<span id="cb18-3">    pre_track <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pre_average[:, i]</span>
<span id="cb18-4">    post_track <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> post_average[:, i]</span>
<span id="cb18-5">    corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(pre_track, post_track)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-6">    res.append(corr)</span></code></pre></div>
</div>
<p>The results from both methods are nearly identical.</p>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(res), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(res))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.9910764472374001 0.999995405486603</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-13-comparing-enformer-averages/Compare_averages.html</guid>
  <pubDate>Thu, 13 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>GENETIC MEDICINE DEEP LEARNING HACKATHON 2022</title>
  <dc:creator>Saideep Gona, Temidayo Adeluwa</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/hackathon-enformer-usage/Hackathon_enformer_usage_participant.html</link>
  <description><![CDATA[ 




<section id="genetic-medicine-deep-learning-hackathon-2022" class="level2">
<h2 class="anchored" data-anchor-id="genetic-medicine-deep-learning-hackathon-2022">GENETIC MEDICINE DEEP LEARNING HACKATHON 2022</h2>
<section id="enformer-usage-notebook---participant" class="level3">
<h3 class="anchored" data-anchor-id="enformer-usage-notebook---participant">ENFORMER USAGE NOTEBOOK - PARTICIPANT</h3>
<p><strong>Authors</strong>: Saideep Gona, Temidayo Adeluwa</p>
<p><strong>Acknowledgement</strong>: - Boxiang Liu - Festus Nyasimi (for providing us with Predixcan predictions)</p>
<p><strong>Date</strong>: Saturday April 2, 2022</p>
<p>Copyright 2021 DeepMind Technologies Limited</p>
<p>Licensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p>
<pre><code> https://www.apache.org/licenses/LICENSE-2.0</code></pre>
<p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>
</section>
</section>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this notebook, we explore how Enformer can be used to predict the expression of protein-coding genes. We utilized some code from the <a href="https://colab.research.google.com/github/deepmind/deepmind_research/blob/master/enformer/enformer-usage.ipynb">original Enformer usage colab notebook</a>. Here, we showcase how the Enformer model can be used to predict gene expression on a GEUVADIS/1000 genomes dataset, and compare the predictions with true expression.</p>
<p><strong>“Effective gene expression prediction from sequence by integrating long-range interactions”</strong></p>
<p>Žiga Avsec, Vikram Agarwal, Daniel Visentin, Joseph R. Ledsam, Agnieszka Grabska-Barwinska, Kyle R. Taylor, Yannis Assael, John Jumper, Pushmeet Kohli, David R. Kelley</p>
<section id="steps" class="level3">
<h3 class="anchored" data-anchor-id="steps">Steps</h3>
<p>This notebook demonstrates how to - Prepare inputs for Enformer to make predictions - Make predictions with Enformer and produce figures - Compare predictions with true expression</p>
</section>
</section>
<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<p>Google Colab gives us some GPU access. This limited GPU is available to anyone with a Google account, who has signed up to use Colaboratory. We will begin by changing the runtime type to GPU. Follow the instruction below by clicking on “Runtime -&gt; Change runtime type -&gt; GPU” in the menu bar below the title of this notebook.</p>
<p><strong>Start the colab kernel with GPU</strong>: Runtime -&gt; Change runtime type -&gt; GPU</p>
<p>Below, we import tensorflow as tf, and check that the runtime has been changed to GPU.</p>
<p>kipoiseq is a package that helps us to extract sequences from fasta files given some intervals. We will install the package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make sure the GPU is enabled </span></span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Start the colab kernel with GPU: Runtime -&gt; Change runtime type -&gt; GPU'</span></span>
<span id="cb2-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Num GPUs Available: "</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>)))</span></code></pre></div>
</div>
<p>Biopython is a python package that helps us do many bioinfomatic analysis in python</p>
<div class="cell" data-outputid="ed234327-29b9-4d20-c68b-f4a290baad9b">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!pip install Biopython</span></span></code></pre></div>
</div>
<section id="setting-up-our-environments" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-our-environments">Setting up our environments</h3>
<p>We need to have some packages imported to help us do cool stuff.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for interacting with saved models and tensorflow hub</span></span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gzip <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating compressed files</span></span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating fasta files</span></span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># same as above, really</span></span>
<span id="cb4-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to index our reference genome file</span></span>
<span id="cb4-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating dataframes</span></span>
<span id="cb4-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for numerical computations</span></span>
<span id="cb4-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for plotting</span></span>
<span id="cb4-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for plotting</span></span>
<span id="cb4-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for plotting</span></span>
<span id="cb4-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pickle <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for saving large objects</span></span>
<span id="cb4-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># functions for interacting with the operating system</span></span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb4-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'retina'</span></span></code></pre></div>
</div>
<p><strong>Optional</strong></p>
<p>You may want to store your results. Google Drive gives about 15gb worth of storage space, used for all your files and emails.</p>
<p>Here, you can mount your Google Drive using the next line of code. You will need to provide permission access.</p>
<p>The line after that will automatically create a folder called “Enformer_Hackathon_2022” in your Google Drive.</p>
<div class="cell" data-outputid="4e8c150c-36e1-4ae0-be1f-9acac53236a0">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#from google.colab import drive</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#drive.mount('/content/drive')</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!mkdir -p "/content/drive/MyDrive/Enformer_Hackathon_2022/results/"</span></span></code></pre></div>
</div>
<p>Next,</p>
<p>We want to define some paths to save downloaded files for the duration of this notebook. These will be wiped off by Google as soon as we are done.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb7-2">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb7-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/genome.fa'</span></span></code></pre></div>
</div>
<p>We may inspect the tracks used to train the model. The CAGE prediction corresponding to B lymphoblastoid cell line is index 5110. We use B lymphoblastoid cell line predictions here because that is the cell line used to generate GEUVADIS gene expression data. You can copy the https link, paste in another tab in your browser and look through the large txt file for other tracks.</p>
<div class="cell" data-outputid="1c912c07-7a2e-46c4-fa8d-33ba698f030d">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download targets from Basenji2 dataset</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cite: Kelley et al Cross-species regulatory sequence activity prediction. PLoS Comput. Biol. 16, e1008050 (2020).</span></span>
<span id="cb8-3">targets_txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/calico/basenji/master/manuscripts/cross2020/targets_human.txt'</span></span>
<span id="cb8-4">df_targets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(targets_txt, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb8-5">df_targets[df_targets.index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>]</span></code></pre></div>
</div>
</section>
<section id="download-files" class="level3">
<h3 class="anchored" data-anchor-id="download-files">Download files</h3>
<p>We need to download some files. Give it a moment. We will download the following files: - The reference genome fasta file (we will also index this file in the process) - A text file for the transcription start sites for each chromosome - Per chromosome files that has annotation for the genes - A compressed file that contains the variant bed files for the genes and their locations.</p>
<p>Credit to Genome Reference Consortium: https://www.ncbi.nlm.nih.gov/grc</p>
<p>Schneider et al 2017 http://dx.doi.org/10.1101/gr.213611.116: Evaluation of GRCh38 and de novo haploid genome assemblies demonstrates the enduring quality of the reference assembly</p>
<p>Make a data directory, and download the necessary bed files and chromosome annotation files</p>
<p><strong>NB:</strong> You may decide to download these files into your “/content/drive/MyDrive/Enformer_Hackathon_2022/” directory. <strong>You don’t need to do this</strong>. But if you want permanent access to the files we use in this notebook, you can change the path from “/home/s1mi/enformer_tutorial/” to “/content/drive/MyDrive/Enformer_Hackathon_2022/”, and modify what you need accordingly.</p>
<p>The next line of code will download the reference genome fasta file and index this file.</p>
<div class="cell" data-outputid="09b1c79a-2b86-4555-f16b-36313b4d5dd9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reference genome and indexed</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!wget -O - https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz | gunzip -c &gt; {fasta_file}</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#pyfaidx.Faidx(fasta_file)</span></span></code></pre></div>
</div>
<p>The next lines of code will download the variation bed files, and we have created links to help us download the variation bed files for each chromosome, for each gene.</p>
<div class="cell" data-outputid="9de5f0ba-973b-441a-a498-618066bdd40f">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">chrom_bed_downloads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://uchicago.box.com/shared/static/du77wf31li38tciv8imivwu57svae03p.csv"</span>)</span>
<span id="cb10-2">chrom_bed_downloads.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chrom_bed_downloads[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chroms"</span>]</span>
<span id="cb10-3"></span>
<span id="cb10-4">chrom_bed_downloads.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<p>We will define a function to help us download bed variation files for a given gene or list of genes</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> download_chrom_beds(chromosome, genes, downloads_table<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chrom_bed_downloads):</span>
<span id="cb11-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Downloads bed/variation files for a chromosome and list of genes</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb11-5"></span>
<span id="cb11-6">  link <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> downloads_table.loc[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(chromosome), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"link"</span>]</span>
<span id="cb11-7">  chr_which <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> chromosome</span>
<span id="cb11-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes:</span>
<span id="cb11-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.exists(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/individual_beds/chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.bed'</span>): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if the file is in the folder, no need to download again</span></span>
<span id="cb11-10">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb11-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>curl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>L {link} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>chr_{chromosome}_bed.tar.gz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> cd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> tar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>zxf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>chr_{chromosome}_bed.tar.gz .<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>individual_beds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>{chr_which}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>{chr_which}_{gene}.bed</span>
<span id="cb11-12"></span>
<span id="cb11-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove the download tar.gz file</span></span>
<span id="cb11-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>chr_{chromosome}_bed.tar.gz</span></code></pre></div>
</div>
<p>We don’t need this function yet. But we can test out how it works.</p>
<p>Assuming we want to download the variation files for ‘ERAP1’, which is located on chromosome 5…</p>
<p>This will download the bed file into /home/s1mi/enformer_tutorial/individual_beds/chr5/</p>
<div class="cell" data-outputid="fbd87143-2693-44b9-941b-b39d856d99f0">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">download_chrom_beds(chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>, genes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>])</span></code></pre></div>
</div>
<p>And when you need the file, you can read it in like…</p>
<div class="cell" data-outputid="b098aa73-1e39-4410-e165-e28f689c42c5">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">erap1_variations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/individual_beds/chr5/chr5_ERAP1.bed'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb13-2">erap1_variations.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<p>You can pass in a list of genes as long as they are all located on that chromosome.</p>
<p>In the next block of code, we download the TSS for each chromosome and the genes in that chromosome, as wells as the per chromosome gene annotations. We need this information to estimate predictions.</p>
<div class="cell" data-outputid="bd64a030-c1c7-4377-f7d9-91834054774b">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!curl -L https://uchicago.box.com/shared/static/perc3uabzzd267cbp8zc0inwgrmur7pu.gz --output /home/s1mi/enformer_tutorial/chr_tss.tar.xz &amp;&amp; cd /home/s1mi/enformer_tutorial/ &amp;&amp; tar -zxf /home/s1mi/enformer_tutorial/chr_tss.tar.xz</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!mkdir -p /home/s1mi/enformer_tutorial/gene_chroms #creates a folder to hold our files</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!curl -L https://uchicago.box.com/shared/static/e2kiwrjlgqqio0pc37a2iz7l5bqbv57u.gz --output /home/s1mi/enformer_tutorial/gene_chroms/gene_chroms.tar.gz &amp;&amp; cd /home/s1mi/enformer_tutorial/gene_chroms/ &amp;&amp; tar -zxf /home/s1mi/enformer_tutorial/gene_chroms/gene_chroms.tar.gz</span></span></code></pre></div>
</div>
</section>
<section id="how-do-we-want-to-go-about-using-enformer-given-all-these-files-we-just-downloaded" class="level3">
<h3 class="anchored" data-anchor-id="how-do-we-want-to-go-about-using-enformer-given-all-these-files-we-just-downloaded">How do we want to go about using Enformer given all these files we just downloaded?</h3>
<p>As we know, enformer’s input is a single strand genome sequence. Yet, we are interested in predicting on population level data which includes individual-specific variation. To get around this limitation, we will treat each individual as the sum of their haplotypes. Using the phased variant data around each gene (stored in the variant bed files) to modify the reference sequence, we can create two distinct haplotype sequences for each individual. The sum of both of Enformer’s haplotype predictions serves as an individual-specific, additive estimate which we can correlate with true predictions. Together, the files we downloaded give us all the information we need to build these haplotype sequences.</p>
<p>Althought enformer predicts a wide array of functional output, we will focus here on gene expression in lymphoblastoid cells allowing for correlation against ground truth Geuvadis gene expression data.</p>
<p>There are many functions that we have defined in the next code block. You can explore them later, but for now, simply run the block by clicking on the play button.</p>
</section>
<section id="code" class="level3">
<h3 class="anchored" data-anchor-id="code">Code</h3>
<p>Next, we have some functions that will help us along the way. Classes and methods defined in this code block can be found in the <a href="https://colab.research.google.com/github/deepmind/deepmind_research/blob/master/enformer/enformer-usage.ipynb">original Enformer usage colab notebook</a>.</p>
<div class="cell" data-outputid="e6a400e0-0c95-486c-fa53-a59c20ffd1f1">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `Enformer`, `EnformerScoreVariantsNormalized`, `EnformerScoreVariantsPCANormalized`,</span></span>
<span id="cb15-2">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb15-5"></span>
<span id="cb15-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb15-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb15-8"></span>
<span id="cb15-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb15-10">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb15-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb15-12"></span>
<span id="cb15-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb15-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb15-15">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb15-16">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb15-17"></span>
<span id="cb15-18">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb15-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb15-20">      tape.watch(input_sequence)</span>
<span id="cb15-21">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb15-22">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb15-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb15-24"></span>
<span id="cb15-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb15-26">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb15-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-28"></span>
<span id="cb15-29"></span>
<span id="cb15-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsRaw:</span>
<span id="cb15-31"></span>
<span id="cb15-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb15-33">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(tfhub_url)</span>
<span id="cb15-34">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> organism</span>
<span id="cb15-35"></span>
<span id="cb15-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb15-37">    ref_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb15-38">    alt_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb15-39"></span>
<span id="cb15-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> alt_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ref_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-41"></span>
<span id="cb15-42"></span>
<span id="cb15-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsNormalized:</span>
<span id="cb15-44"></span>
<span id="cb15-45">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb15-46">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb15-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transforms only compatible with organism=human'</span></span>
<span id="cb15-48">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb15-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb15-50">      transform_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb15-51">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_pipeline.steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># StandardScaler.</span></span>
<span id="cb15-52"></span>
<span id="cb15-53">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb15-54">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb15-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)</span>
<span id="cb15-56"></span>
<span id="cb15-57"></span>
<span id="cb15-58"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsPCANormalized:</span>
<span id="cb15-59"></span>
<span id="cb15-60">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb15-61">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, num_top_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>):</span>
<span id="cb15-62">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb15-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb15-64">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb15-65">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_top_features</span>
<span id="cb15-66"></span>
<span id="cb15-67">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb15-68">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb15-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)[:, :<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features]</span>
<span id="cb15-70"></span>
<span id="cb15-71"></span>
<span id="cb15-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(avsec): Add feature description: Either PCX, or full names.</span></span>
<span id="cb15-73"></span>
<span id="cb15-74"></span>
<span id="cb15-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `variant_centered_sequences`</span></span>
<span id="cb15-76"></span>
<span id="cb15-77"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb15-78"></span>
<span id="cb15-79">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb15-80">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb15-81">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb15-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import pd.Interval as Interval</span></span>
<span id="cb15-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb15-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb15-85">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb15-86">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb15-87">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb15-88">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb15-89">                                    )</span>
<span id="cb15-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb15-91">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb15-92">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb15-93">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb15-94">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb15-95">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb15-96">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb15-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb15-98"></span>
<span id="cb15-99">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb15-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb15-101"></span>
<span id="cb15-102"></span>
<span id="cb15-103"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb15-104">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span>
<span id="cb15-105"></span>
<span id="cb15-106"></span>
<span id="cb15-107"></span>
<span id="cb15-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `plot_tracks`</span></span>
<span id="cb15-109"></span>
<span id="cb15-110"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb15-111">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb15-112">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb15-113">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb15-114">    ax.set_title(title)</span>
<span id="cb15-115">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb15-116">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb15-117">  plt.tight_layout()</span></code></pre></div>
</div>
<p>Here, we define some utility functions for ourselves, to help us make predictions and analyse our predictions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Bio</span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Bio.Seq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Seq</span>
<span id="cb16-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_rev_complement(dna_string):</span>
<span id="cb16-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(Seq(dna_string).reverse_complement()))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> prepare_for_quantify_prediction_per_TSS(predictions, gene, tss_df):</span>
<span id="cb17-2"></span>
<span id="cb17-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb17-4"></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters:</span></span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          predicitions (A numpy array): All predictions from the track</span></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          gene (a gene name, character): a gene</span></span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          tss_df: a list of dataframe of genes and their transcription start sites</span></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns:</span></span>
<span id="cb17-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          A dictionary of cage experiment predictions and a list of transcription start sites</span></span>
<span id="cb17-11"></span>
<span id="cb17-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb17-13"></span>
<span id="cb17-14">  output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb17-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tdf <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tss_df:</span>
<span id="cb17-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tdf.genes.values:</span>
<span id="cb17-17">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb17-18">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tdf[tdf.genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gene].txStart_Sites.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>).values</span>
<span id="cb17-19">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_tss_list]</span>
<span id="cb17-20">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(item) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> nestedlist <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_tss_list <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> nestedlist]</span>
<span id="cb17-21">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(gene_tss_list))</span>
<span id="cb17-22">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cage_predictions'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a numpy array</span></span>
<span id="cb17-23">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_TSS'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_tss_list <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a list</span></span>
<span id="cb17-24"></span>
<span id="cb17-25"></span>
<span id="cb17-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(output) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a dictionary</span></span>
<span id="cb17-27"></span>
<span id="cb17-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> quantify_prediction_per_TSS(low_range, TSS, cage_predictions):</span>
<span id="cb17-29"></span>
<span id="cb17-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb17-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters:</span></span>
<span id="cb17-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          low_range (int): The lower interval</span></span>
<span id="cb17-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          TSS (list of integers): A list of TSS for a gene</span></span>
<span id="cb17-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          cage_predictions: A 1D numpy array or a vector of predictions from enformer corresponding to track 5110 or CAGE predictions</span></span>
<span id="cb17-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns:</span></span>
<span id="cb17-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          A dictionary of gene expression predictions for each TSS for a gene</span></span>
<span id="cb17-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb17-38">  tss_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb17-39">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tss <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> TSS:</span>
<span id="cb17-40">    bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">768</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)</span>
<span id="cb17-41">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb17-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> tss:</span>
<span id="cb17-43">      bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb17-44">      count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb17-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(cage_predictions)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb17-46">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb17-47">    cage_preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb17-48">    tss_predictions[tss] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cage_preds</span>
<span id="cb17-49"></span>
<span id="cb17-50">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(tss_predictions)</span>
<span id="cb17-51"></span>
<span id="cb17-52"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> collect_intervals(chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"22"</span>], gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb17-53"></span>
<span id="cb17-54">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb17-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters :</span></span>
<span id="cb17-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      chromosomes : a list of chromosome numbers; each element should be a string format</span></span>
<span id="cb17-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      gene_list : a list of genes; the genes should be located on those chromosomes</span></span>
<span id="cb17-58"></span>
<span id="cb17-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns :</span></span>
<span id="cb17-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      A dictionary of genes (from gene_list) and their intervals within their respective chromosomes</span></span>
<span id="cb17-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb17-62"></span>
<span id="cb17-63">  gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Collect intervals for our genes of interest</span></span>
<span id="cb17-64"></span>
<span id="cb17-65">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> chrom <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chromosomes:</span>
<span id="cb17-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/gene_chroms/gene_"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> chrom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> chrom_genes:</span>
<span id="cb17-67">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chrom_genes:</span>
<span id="cb17-68">        split_line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> line.strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb17-69">        gene_intervals[split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb17-70">                                          split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb17-71">                                          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]),</span>
<span id="cb17-72">                                          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb17-73">                                        ]</span>
<span id="cb17-74"></span>
<span id="cb17-75">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if the user has supplied a list of genes they are interested in</span></span>
<span id="cb17-76">    use_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>((k, gene_intervals[k]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_intervals)</span>
<span id="cb17-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(use_genes)</span>
<span id="cb17-78">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)):</span>
<span id="cb17-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(gene_intervals)</span>
<span id="cb17-80"></span>
<span id="cb17-81"></span>
<span id="cb17-82"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> run_predictions(gene_intervals, tss_dataframe, individuals_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb17-83">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb17-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters :</span></span>
<span id="cb17-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    gene_intervals : the results from calling `collect_intervals`</span></span>
<span id="cb17-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_dataframe : a list of the TSSs dataframes i.e. the TSS for the genes in the chromosomes</span></span>
<span id="cb17-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    individuals_list : a list of individuals on which we want to make predictions; defaults to None</span></span>
<span id="cb17-88"></span>
<span id="cb17-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns :</span></span>
<span id="cb17-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A list of predictions; the first element is the predictions around the TSS for each gene. The second is the prediction across CAGE tracks</span></span>
<span id="cb17-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb17-92"></span>
<span id="cb17-93">  gene_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb17-94">  gene_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb17-95"></span>
<span id="cb17-96">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_intervals.keys():</span>
<span id="cb17-97">    gene_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb17-98">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb17-99">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb17-100">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># creates an interval to select the right sequences</span></span>
<span id="cb17-101">    target_fa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta_extractor.extract(target_interval.resize(SEQUENCE_LENGTH))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extracts the fasta sequences, and resizes such that it is compatible with the sequence_length</span></span>
<span id="cb17-102">    window_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_interval.resize(SEQUENCE_LENGTH) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we also need information about the start and end locations after resizing</span></span>
<span id="cb17-103">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb17-104">      cur_gene_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read in the appropriate bed file for the gene</span></span>
<span id="cb17-105">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb17-106">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb17-107">    individual_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb17-108">    individual_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb17-109"></span>
<span id="cb17-110">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(np.empty([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))):</span>
<span id="cb17-111">      use_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals_list</span>
<span id="cb17-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)):</span>
<span id="cb17-113">      use_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cur_gene_vars.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]</span>
<span id="cb17-114"></span>
<span id="cb17-115">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> use_individuals:</span>
<span id="cb17-116">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Currently on gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, and predicting on individual </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">...'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(gene, individual))</span>
<span id="cb17-117">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># two haplotypes per individual</span></span>
<span id="cb17-118">      haplo_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(target_fa[:])</span>
<span id="cb17-119">      haplo_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(target_fa[:])</span>
<span id="cb17-120"></span>
<span id="cb17-121">      ref_mismatch_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb17-122">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i,row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> cur_gene_vars.iterrows():</span>
<span id="cb17-123"></span>
<span id="cb17-124">        geno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[individual].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb17-125">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(haplo_2):</span>
<span id="cb17-126">          <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb17-127">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb17-128">          <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb17-129">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> geno[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>:</span>
<span id="cb17-130">          haplo_1[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ALT"</span>]</span>
<span id="cb17-131">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> geno[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>:</span>
<span id="cb17-132">          haplo_2[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ALT"</span>]</span>
<span id="cb17-133"></span>
<span id="cb17-134">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict on the individual's two haplotypes</span></span>
<span id="cb17-135">      prediction_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo_1))[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb17-136">      prediction_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo_2))[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb17-137"></span>
<span id="cb17-138">      temp_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [prediction_1[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>], prediction_2[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CAGE predictions we are interested in</span></span>
<span id="cb17-139">      individual_prediction[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_predictions</span>
<span id="cb17-140"></span>
<span id="cb17-141">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate TSS CAGE expression which correspond to column 5110 of the predictions above</span></span>
<span id="cb17-142">      temp_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb17-143"></span>
<span id="cb17-144">      pred_prepared_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_for_quantify_prediction_per_TSS(predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_1, gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene, tss_df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tss_dataframe)</span>
<span id="cb17-145">      tss_predictions_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quantify_prediction_per_TSS(low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> window_coords.start, TSS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_TSS'</span>], cage_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cage_predictions'</span>])</span>
<span id="cb17-146"></span>
<span id="cb17-147">      pred_prepared_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_for_quantify_prediction_per_TSS(predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_2, gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene, tss_df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tss_dataframe)</span>
<span id="cb17-148">      tss_predictions_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quantify_prediction_per_TSS(low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> window_coords.start, TSS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_TSS'</span>], cage_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cage_predictions'</span>])</span>
<span id="cb17-149"></span>
<span id="cb17-150">      temp_list.append(tss_predictions_1)</span>
<span id="cb17-151">      temp_list.append(tss_predictions_2) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># results here are a dictionary for each TSS for each haplotype</span></span>
<span id="cb17-152"></span>
<span id="cb17-153">      individual_results[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_list <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save for the individual</span></span>
<span id="cb17-154"></span>
<span id="cb17-155">    gene_output[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individual_results</span>
<span id="cb17-156">    gene_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individual_prediction</span>
<span id="cb17-157"></span>
<span id="cb17-158">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>([gene_output, gene_predictions])</span>
<span id="cb17-159"></span>
<span id="cb17-160"></span>
<span id="cb17-161"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> collect_target_intervals(gene_intervals):</span>
<span id="cb17-162"></span>
<span id="cb17-163">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb17-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns a dictionary of Interval objects (from kipoiseq) for each gene corresponding to the locations of the gene</span></span>
<span id="cb17-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb17-166"></span>
<span id="cb17-167">  target_intervals_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb17-168"></span>
<span id="cb17-169">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_intervals.keys():</span>
<span id="cb17-170">    gene_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb17-171">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb17-172">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb17-173">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb17-174">    target_intervals_dict[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_interval</span>
<span id="cb17-175"></span>
<span id="cb17-176">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(target_intervals_dict)</span>
<span id="cb17-177"></span>
<span id="cb17-178"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> prepare_for_plot_tracks(gene, individual, all_predictions, chromosome<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'22'</span>]):</span>
<span id="cb17-179"></span>
<span id="cb17-180">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb17-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  This returns a dictionary of gene tracks and gene intervals, prepared for the function plot_tracks.</span></span>
<span id="cb17-182"></span>
<span id="cb17-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters:</span></span>
<span id="cb17-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - gene</span></span>
<span id="cb17-185"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - individual</span></span>
<span id="cb17-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - all_predictions</span></span>
<span id="cb17-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb17-188"></span>
<span id="cb17-189">  haplo_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_predictions[gene][individual]</span>
<span id="cb17-190">  gene_tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | haplotype 1'</span>: np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]),</span>
<span id="cb17-191">                gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | haplotype 2'</span>: np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])}</span>
<span id="cb17-192"></span>
<span id="cb17-193">  gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chromosome, gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[gene])</span>
<span id="cb17-194">  gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_target_intervals(gene_intervals)</span>
<span id="cb17-195"></span>
<span id="cb17-196">  output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb17-197">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_tracks'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_tracks</span>
<span id="cb17-198">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_intervals'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb17-199"></span>
<span id="cb17-200">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(output)</span>
<span id="cb17-201"></span>
<span id="cb17-202"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> check_individuals(path_to_bed_file, list_of_individuals):</span>
<span id="cb17-203"></span>
<span id="cb17-204">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb17-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Checks if an individual is missing in bed variation files.</span></span>
<span id="cb17-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  These individuals should be removed prior to training</span></span>
<span id="cb17-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb17-208"></span>
<span id="cb17-209">  myfile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(path_to_bed_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb17-210">  myline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> myfile.readline()</span>
<span id="cb17-211">  bed_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> myline.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]</span>
<span id="cb17-212">  myfile.close()</span>
<span id="cb17-213"></span>
<span id="cb17-214">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(list_of_individuals).issubset(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(bed_names)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb17-215">    missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(list_of_individuals).difference(bed_names))</span>
<span id="cb17-216">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'This (or these) individual(s) is/are not present: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(missing))</span>
<span id="cb17-217">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb17-218">    missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb17-219">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All individuals are present in the bed file.'</span>)</span>
<span id="cb17-220"></span>
<span id="cb17-221">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(missing)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_predixcan_vs_geuvadis(interested_gene, interested_individuals, geuvadis_expression, predixcan_expression):</span>
<span id="cb18-2"></span>
<span id="cb18-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Show a plot and return correlation coefficient</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb18-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from predixcan expression</span></span>
<span id="cb18-7">  df_predixcan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predixcan_expression[predixcan_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> interested_gene].loc[:,interested_individuals]</span>
<span id="cb18-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from enformer</span></span>
<span id="cb18-9">  df_geuvadis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_expression[geuvadis_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> interested_gene].loc[:,interested_individuals]</span>
<span id="cb18-10"></span>
<span id="cb18-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># concatenate both</span></span>
<span id="cb18-12">  df_all <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([df_predixcan, df_geuvadis], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb18-13">  df_all.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predixcan'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GEUVADIS'</span>]</span>
<span id="cb18-14"></span>
<span id="cb18-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plotting</span></span>
<span id="cb18-16">  sns.regplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predixcan vs. GEUVADIS predictions on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals for gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_all.columns), interested_gene))</span>
<span id="cb18-17"></span>
<span id="cb18-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># correlation coefficient</span></span>
<span id="cb18-19">  corr_coef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-20"></span>
<span id="cb18-21">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>([df_all, corr_coef])</span>
<span id="cb18-22"></span>
<span id="cb18-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_enformer_vs_predixcan(prediction_results, interested_gene, interested_individuals, predixcan_expression, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>):</span>
<span id="cb18-24"></span>
<span id="cb18-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Show a plot and return correlation coefficient</span></span>
<span id="cb18-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb18-28"></span>
<span id="cb18-29">  enformer_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-30"></span>
<span id="cb18-31">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene, individuals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> prediction_results[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].items():</span>
<span id="cb18-32">    temp_individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual, haplo_predictions <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals.items():</span>
<span id="cb18-34">      temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb18-35">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])):</span>
<span id="cb18-36">        temp.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].values())[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].values())[i])</span>
<span id="cb18-37">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> how <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>:</span>
<span id="cb18-38">        temp_individual[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(temp)</span>
<span id="cb18-39">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> how <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max'</span>:</span>
<span id="cb18-40">        temp_individual[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(temp)</span>
<span id="cb18-41">    enformer_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_individual</span>
<span id="cb18-42"></span>
<span id="cb18-43">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from predixcan expression</span></span>
<span id="cb18-44">  df_predixcan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predixcan_expression[predixcan_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> interested_gene].loc[:,interested_individuals]</span>
<span id="cb18-45">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from enformer</span></span>
<span id="cb18-46">  df_enformer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(enformer_predictions[interested_gene], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).loc[:, df_predixcan.columns]</span>
<span id="cb18-47"></span>
<span id="cb18-48">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># concatenate both</span></span>
<span id="cb18-49">  df_all <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([df_enformer, df_predixcan], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb18-50">  df_all.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformer'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predixcan'</span>]</span>
<span id="cb18-51"></span>
<span id="cb18-52">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plotting</span></span>
<span id="cb18-53">  sns.regplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predixcan vs. Enformer predictions on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals for gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_all.columns), interested_gene))</span>
<span id="cb18-54"></span>
<span id="cb18-55">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># correlation coefficient</span></span>
<span id="cb18-56">  corr_coef_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-57"></span>
<span id="cb18-58">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>([df_all, corr_coef_predix])</span>
<span id="cb18-59"></span>
<span id="cb18-60"></span>
<span id="cb18-61"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_enformer_vs_geuvadis(prediction_results, interested_gene, interested_individuals, geuvadis_expression, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>):</span>
<span id="cb18-62"></span>
<span id="cb18-63">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Show a plot and return correlation coefficient</span></span>
<span id="cb18-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb18-66"></span>
<span id="cb18-67">  enformer_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-68"></span>
<span id="cb18-69">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene, individuals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> prediction_results[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].items():</span>
<span id="cb18-70">    temp_individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-71">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual, haplo_predictions <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals.items():</span>
<span id="cb18-72">      temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb18-73">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])):</span>
<span id="cb18-74">        temp.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].values())[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].values())[i])</span>
<span id="cb18-75">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> how <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>:</span>
<span id="cb18-76">        temp_individual[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(temp)</span>
<span id="cb18-77">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> how <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max'</span>:</span>
<span id="cb18-78">        temp_individual[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(temp)</span>
<span id="cb18-79">    enformer_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_individual</span>
<span id="cb18-80"></span>
<span id="cb18-81">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from geuvadis expression</span></span>
<span id="cb18-82">  df_geuvadis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_expression[geuvadis_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> interested_gene].loc[:,interested_individuals]</span>
<span id="cb18-83">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#df_enformer = np.transpose(pd.DataFrame(enformer_predictions)).loc[:, df_geuvadis.columns]</span></span>
<span id="cb18-84">  df_enformer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(enformer_predictions[interested_gene], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).loc[:, df_geuvadis.columns]</span>
<span id="cb18-85"></span>
<span id="cb18-86">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># concatenate both</span></span>
<span id="cb18-87">  df_all <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([df_enformer, df_geuvadis], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb18-88">  df_all.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformer'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GEUVADIS'</span>]</span>
<span id="cb18-89"></span>
<span id="cb18-90">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plotting</span></span>
<span id="cb18-91">  sns.regplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformer vs. Geuvadis predictions on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals for gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_all.columns), interested_gene))</span>
<span id="cb18-92"></span>
<span id="cb18-93">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># correlation coefficient</span></span>
<span id="cb18-94">  corr_coef_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-95"></span>
<span id="cb18-96">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>([df_all, corr_coef_geu])</span></code></pre></div>
</div>
</section>
</section>
<section id="make-predictions-on-the-geuvadis-dataset." class="level2">
<h2 class="anchored" data-anchor-id="make-predictions-on-the-geuvadis-dataset.">Make predictions on the GEUVADIS dataset.</h2>
<p>Here, we will begin to make predictions. Excited?!</p>
<p>We still need the model itself. The model has been graciously hosted on <a href="https://tfhub.dev/deepmind/enformer/1">Tensorflow Hub</a>, which hosts many other models too. You can click on the link and explore. When you click the link, you can see that the model is about 892 Mb large. Quite big. We will use the url to the model to download and use it here.</p>
<p>Earlier, we defined an Enformer class (see the codes section). We will load the model into this class. The model has been trained and the weights are freely available. All we need to do is to load this model and use it. Neat.</p>
<p>We also defined a class FastaStringExtractor, that can help us extract raw sequences from fasta files given the intervals we want. We will make use of this class too.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># here we load the model architecture.</span></span>
<span id="cb19-2"></span>
<span id="cb19-3">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we define a class called fasta_extractor to help us extra raw sequence data</span></span></code></pre></div>
</div>
<section id="exercise-1" class="level3">
<h3 class="anchored" data-anchor-id="exercise-1"><strong>EXERCISE 1:</strong></h3>
<p>For evaluation, we need to <strong>sum the predictions around each unique TSS for a given gene</strong>. We will be using this a lot so it is important that we define what it means. Essentially, for a gene with one TSS, we take the sum of predicitions of the 128 bp output bin containing the TSS and its two immediate neighboring bins. We do this for each haplotype and each TSS to give TSS-level predictions.</p>
<p>To get individual-level estimates for a whole gene, we sum each haplotype TSS estimate to summarize TSS-level predictions per individual, and then take either the sum or max of TSS-level predictions to summarize at the gene level.</p>
<p>There are many genes and many individuals in our datasets. To make illustration simpler, we will use four genes, <em>ERAP1</em>, <em>ERAP2</em>, <em>NUDT2</em>, and <em>PEX6</em>, located on chromosome 5, 5, 9, and 6 respectively. We will use predictions for 10 randomly selected individuals located in the bed files.</p>
<div class="cell" data-outputid="2791e673-9da7-4b9d-8531-7c794185fca7">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">download_chrom_beds(chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>])</span>
<span id="cb20-2">download_chrom_beds(chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NUDT2'</span>])</span>
<span id="cb20-3">download_chrom_beds(chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PEX6'</span>])</span></code></pre></div>
</div>
<p>Here, we read into a dataframe the TSS (transcription start sites) per gene for the chromosomes we are interested in. The dataframe has three columns. The first contains the genes, and the second contains the TSS(s) for that gene, and the third contains the strand information. We are interested in genes located on chromosomes 5, 6 and 9.</p>
<div class="cell" data-outputid="d8a76934-e1f0-40ba-8c1c-48f60601cd1a">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">chr5_tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/tss_by_chr/chr5_tss_by_gene.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb21-2">chr6_tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/tss_by_chr/chr6_tss_by_gene.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb21-3">chr9_tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/tss_by_chr/chr9_tss_by_gene.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb21-4"></span>
<span id="cb21-5">chr9_tss.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</div>
<section id="preparing-inputs-for-enformer" class="level4">
<h4 class="anchored" data-anchor-id="preparing-inputs-for-enformer">Preparing inputs for Enformer</h4>
<p>Now that we have downloaded the genetic information that we need, we want to prepare the inputs for Enformer.</p>
<p>We need the following - The genes we want to predict for - The genomic interval for these genes - Information about the transcription start sites for these genes - The individuals we want to predict for</p>
<p>We have a utility function that helps to define the intervals of a gene, and resize this interval to make it acceptable for Enformer. Enformer needs a specific, defined sequence length. We use the <strong>collect_intervals</strong> function. The result is a dictionary that contains chromosome and interval information for each gene.</p>
<p>For example, let’s explore ERAP1…</p>
<div class="cell" data-outputid="512f71af-1df8-42d8-8c16-317a030f1bda">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">ERAP1_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>], gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>])</span>
<span id="cb22-2">ERAP1_target_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_target_intervals(ERAP1_intervals)</span>
<span id="cb22-3">ERAP1_intervals, ERAP1_target_intervals</span></code></pre></div>
</div>
<p><strong>ERAP1_target_intervals</strong> is an Interval object created using the kipoiseq package we installed earlier. It is used during predictions, and we don’t need to know the methods of this object for the purpose of the next questions.</p>
<p>However, we have similar information in <strong>ERAP1_intervals</strong>, which is a python dictionary of lists. For the questions below, we will use the <strong>ERAP1_intervals</strong> object.</p>
</section>
<section id="question-1a" class="level4">
<h4 class="anchored" data-anchor-id="question-1a"><strong><em>Question 1a</em></strong></h4>
<p>What is the size of this interval? <em>Hint</em>: Look at the <strong>ERAP1_intervals</strong>, and remember that Python is 0-based indexed. You need to access the <strong>key</strong> of this dictionary, which is the gene name, and for the value, which is a list, you can access the first element using 0, the second element using 1, and so on.</p>
<div class="cell" data-outputid="e5072587-661b-4a61-84f7-911e106c9bc4">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">ERAP1_intervals[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ERAP1_intervals[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># your answers go in the ...</span></span></code></pre></div>
</div>
</section>
<section id="note" class="level4">
<h4 class="anchored" data-anchor-id="note"><strong><em>Note</em></strong></h4>
<p>You can roughly confirm this interval by going to the UCSC genome browser or Ensemble genome browser. We have provided a link for UCSC genome browser’s interval length <a href="https://genome.ucsc.edu/cgi-bin/hgTracks?db=hg19&amp;lastVirtModeType=default&amp;lastVirtModeExtraState=&amp;virtModeType=default&amp;virtMode=0&amp;nonVirtPosition=&amp;position=chr5%3A96096517%2D96143648&amp;hgsid=1316458921_99pz1X7GNzmiEg0WV1q2UmDp9nSB">for ERAP1 here</a>. Click on this link, the answer is right at the top of the browser.</p>
<p>Enformer takes in a defined sequence length. When we provide a gene and collect its intervals, we need to resize this interval to be acceptable for Enformer. Here, we will use the Intervals object define earlier, <strong>ERAP1_target_intervals</strong>.</p>
<div class="cell" data-outputid="3c37002b-46af-42fe-e540-be19b23afee3">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">ERAP1_target_interval_resized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ERAP1_target_intervals[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>].resize(SEQUENCE_LENGTH)</span>
<span id="cb24-2">ERAP1_target_interval_resized</span></code></pre></div>
</div>
</section>
<section id="question-1b" class="level4">
<h4 class="anchored" data-anchor-id="question-1b"><strong><em>Question 1b</em></strong></h4>
<p>What is the length of this interval? Simply run the next line of code.</p>
<div class="cell" data-outputid="c0a53c51-4692-4a47-ca57-237d27497a95">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">ERAP1_target_interval_resized.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ERAP1_target_interval_resized.start</span></code></pre></div>
</div>
<p>Essentially, we resized the length of the gene and pad it with the native sequences to the left and to the right, such that the length of the input sequence is 393216, and we can imagine our gene right at the center of this wider interval. This is the same interval length used to train ENCODE data to build Enformer. Since this value is pre-define, we really cannot change it. This is information that Enformer uses to make very good predictions. Below, we confirm that this is true.</p>
<div class="cell" data-outputid="db229dc2-931e-4e86-8005-87d09104762d">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">(ERAP1_target_interval_resized.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ERAP1_target_interval_resized.start) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> SEQUENCE_LENGTH</span></code></pre></div>
</div>
</section>
<section id="making-predictions-with-enformer" class="level4">
<h4 class="anchored" data-anchor-id="making-predictions-with-enformer">Making predictions with Enformer</h4>
<p>We will select 10 individuals (we have provided 10 randomly sample individuals for ease), and use four genes, <em>ERAP1</em>, <em>ERAP2</em>, <em>NUDT2</em>, and <em>PEX6</em>, located on chromosome 5, 5, 9, and 6 respectively</p>
<p>We will collect the intervals that correspond to these genes, collect the sequences for that interval from the reference fasta file, loop through each individual’s variations in the bed files we provided, switch around the variations for each haplotype and predict expression.</p>
<p>Eventually, for each individual, we should have predictions corresponding to each haplotype. We expect that since the haplotypes are different, the predictions should vary too.</p>
<p>Additionally, we need the TSS for these genes. Remember that we read in the dataframe earlier.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">exercise_1_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NUDT2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PEX6'</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># our gene of interest</span></span>
<span id="cb27-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#exercise_1_gene = ['NUDT2', 'ERAP2'] # our gene of interest</span></span>
<span id="cb27-3"></span>
<span id="cb27-4">exercise_1_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA11992'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA19235'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA20770'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HG00232'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HG00342'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA20502'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA19189'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HG00108'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HG00380'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA12872'</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># individuals we are interested in</span></span>
<span id="cb27-5"></span>
<span id="cb27-6">exercise_1_chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'6'</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the gene is on chromosome 5</span></span>
<span id="cb27-7"></span>
<span id="cb27-8">exercise_1_tss_dfs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [chr5_tss, chr9_tss, chr6_tss] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we use the TSS information</span></span></code></pre></div>
</div>
</section>
<section id="question-2" class="level4">
<h4 class="anchored" data-anchor-id="question-2"><strong><em>QUESTION 2</em></strong></h4>
<p>What is the id of the 8th individual? Hint: Python used 0-based indexing</p>
<div class="cell" data-outputid="82dff590-70e8-4b4d-915e-1c01ba9eb60c">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The 8th individual is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(exercise_1_individuals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>])) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># your code goes into the ellipsis</span></span></code></pre></div>
</div>
<p>It is possible to have individuals not present in our variation bed files for some reasons. So, we will do some sanity checks.</p>
<p>Using the <strong>check_individuals</strong> functions, we will check if all these individuals are present in the bed file for that gene.</p>
<div class="cell" data-outputid="23d7a637-f302-4080-c820-9570566d6967">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">missing_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_individuals(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr9/chr9_NUDT2.bed"</span>, list_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exercise_1_individuals)</span>
<span id="cb29-2">missing_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_individuals(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr5/chr5_ERAP2.bed"</span>, list_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exercise_1_individuals)</span>
<span id="cb29-3">missing_3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_individuals(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr5/chr5_ERAP1.bed"</span>, list_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exercise_1_individuals)</span>
<span id="cb29-4">missing_4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_individuals(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr6/chr6_PEX6.bed"</span>, list_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exercise_1_individuals)</span>
<span id="cb29-5">missing_1, missing_2, missing_3, missing_4</span></code></pre></div>
</div>
<p>It looks like all the individuals are present. Very nice! We are good to go.</p>
<p>To make predictions, we first collect the intervals for the genes we want to predict for.</p>
<div class="cell" data-outputid="47f26096-7eb7-4c09-aaeb-76e23e96f50a">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">exercise_1_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_chromosomes, gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># here, we collect the intervals for that gene</span></span>
<span id="cb30-2">exercise_1_interval</span></code></pre></div>
</div>
<p>Next, we use the <strong>run_predictions</strong> function</p>
<div class="cell" data-outputid="47b8f525-7b44-41df-9bc8-cfa848fd1744">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">exercise_1_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run_predictions(gene_intervals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_interval, tss_dataframe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_tss_dfs, individuals_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># here we make predictions and save it.</span></span></code></pre></div>
</div>
<p><strong>NB:</strong> If you intend to make predictions across many individuals and genes, it will be faster if you have larger GPU access. For now, we are using limited GPU. So, we have to limit our predictions.</p>
<p>Quite fast right? Very nice.</p>
<p>Our prediction object, <strong>exercise_1_predictions</strong> is a list of length two. - The first item in the list corresponds to the sum of predictions around each unique TSS, for each haplotype, for each individual, for each gene.</p>
<ul>
<li>The second item in the list corresponds to the CAGE:B lymphoblastoid cell line predictions across all 128bp bins for each haplotype, for each individual, for the genes. We will use the second item for plotting the tracks.</li>
</ul>
<p>Let us take a look at the object.</p>
<div class="cell" data-outputid="823cd61e-0778-485c-9fec-e64e401a2e77">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The exercise_1_predictions object is a </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> of length </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(exercise_1_predictions).<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(exercise_1_predictions)))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">exercise_1_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
</section>
<section id="plotting-the-cageb-lymphoblastoid-cell-line-tracks" class="level4">
<h4 class="anchored" data-anchor-id="plotting-the-cageb-lymphoblastoid-cell-line-tracks">Plotting the CAGE:B lymphoblastoid cell line tracks</h4>
<p>Next, we will plot the tracks. We have already defined two helper functions, <strong>prepare_for_plot_tracks</strong> and <strong>plot_tracks</strong> to plot the expression along the TSS for a gene, for an individual and for each haplotype.</p>
<p>For NUDT2…</p>
<div class="cell" data-outputid="cba34a3d-586a-4b86-f738-badedc155d37">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_for_plot_tracks(gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], individual<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], all_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], chromosome<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span>])</span>
<span id="cb34-2">plot_tracks(tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_tracks'</span>], interval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_intervals'</span>])</span></code></pre></div>
</div>
<p>Looks nice!</p>
<p>Although it looks like there is no variation in the predictions for the haplotypes, we can take a look at the actual prediction values across the TSS.</p>
<p>The columns are the transcription start sites, and the rows are the haplotypes for the individual. The entries are the sum of the predictions at the <em>TSS</em>, at <em>TSS - 1</em>, and at the <em>TSS + 1</em>.</p>
<p>We will look at the first individual, <strong>NA11992</strong>, for <strong>NUDT2</strong>…</p>
<div class="cell" data-outputid="58d37046-c581-4d26-f662-7284c2320253">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">pd.DataFrame(exercise_1_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][exercise_1_individuals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype_1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype_2'</span>])</span></code></pre></div>
</div>
<p>We will look at the first individual, <strong>NA11992</strong>, for <strong>PEX6</strong>…</p>
<div class="cell" data-outputid="15b8a889-62a0-4a85-a272-ba02ca66a85e">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">pd.DataFrame(exercise_1_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][exercise_1_individuals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype_1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype_2'</span>])</span></code></pre></div>
</div>
<p>Merely looking at the values, it looks like there are variations in the predictions across the haplotypes and the TSS. We expected some variations because we are predicting expression for each haplotype, which tend to have variations in them. Very nice!</p>
</section>
</section>
</section>
<section id="comparing-with-true-expression-from-geuvadis-and-with-predixcan" class="level2">
<h2 class="anchored" data-anchor-id="comparing-with-true-expression-from-geuvadis-and-with-predixcan">Comparing with true expression from GEUVADIS and with Predixcan</h2>
<p>We should read in the GEUVADIS and Predixcan predictions.</p>
<div class="cell" data-outputid="4fe9f470-89e2-4935-e4fd-0d49d8f8df03">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">geuvadis_gene_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://uchicago.box.com/shared/static/5vwc7pjw9qmtv7298c4rc7bcuicoyemt.gz'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb37-2">                                         dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_name'</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TargetID'</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Chr'</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>})</span>
<span id="cb37-3">geuvadis_gene_expression.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<div class="cell" data-outputid="379f904b-a2fb-4184-e4c6-c1177e831f51">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">predixcan_gene_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://uchicago.box.com/shared/static/4k68u7x7rxjpoljfdva6qipjxwzd3l0g.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb38-2">predixcan_gene_expression.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<section id="question-3a" class="level4">
<h4 class="anchored" data-anchor-id="question-3a"><strong><em>QUESTION 3a</em></strong></h4>
<p>What is the dimension/size/shape of the <strong>geuvadis_gene_expression</strong> dataframe? Hint: You can use the .shape method on a dataframe.</p>
<div class="cell" data-outputid="39658489-75be-4942-dce8-7840cdccbfe4">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">geuvadis_dimension <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression.shape</span>
<span id="cb39-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print("The geuvadis_gene_expression dataframe has {} rows and {} columns".format(*geuvadis_dimension))</span></span></code></pre></div>
</div>
</section>
<section id="question-4b" class="level4">
<h4 class="anchored" data-anchor-id="question-4b"><strong><em>QUESTION 4b</em></strong></h4>
<p>What is the dimension/size/shape of the <strong>predixcan_gene_expression</strong> dataframe? Hint: You can use the .shape method on a dataframe.</p>
<div class="cell" data-outputid="95c1343b-16e3-4bf6-ad89-d48e213c2077">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">predixcan_dimension <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predixcan_gene_expression.shape</span>
<span id="cb40-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The predixcan_gene_expression dataframe has </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> rows and </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> columns"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>predixcan_dimension))</span></code></pre></div>
</div>
<p>We select the individuals and the gene from the geuvadis_gene_expression dataframe.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1">erap1_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]].loc[:,exercise_1_individuals]</span>
<span id="cb41-2">nudt2_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]].loc[:,exercise_1_individuals]</span>
<span id="cb41-3">erap2_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]].loc[:,exercise_1_individuals]</span>
<span id="cb41-4">pex6_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]].loc[:,exercise_1_individuals]</span></code></pre></div>
</div>
<div class="cell" data-outputid="5f4daab7-3313-4280-dc46-6d189c1e8801">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">nudt2_geuvadis_expression</span></code></pre></div>
</div>
<p>We will sum the prediction for both haplotypes for each TSS, and take the sum of the resulting values. The function used here can also take the max instead of the sums.</p>
<p>We have 3 utility functions to help us - plot_enformer_vs_guevadis - plot_predixcan_vs_geuvadis - plot_enformer_vs_predixcan (if you think this is necessary)</p>
<div class="cell" data-outputid="7739e0d6-0361-4fd6-82e1-7f06eba81cc5">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">erap1_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression,</span>
<span id="cb43-2">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb43-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(erap1_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="f86c49af-cc3d-43f8-80ec-062508155318">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">pex6_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression,</span>
<span id="cb44-2">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb44-3"></span>
<span id="cb44-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(pex6_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="a7da3825-9b21-4d56-932d-ec635525298a">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">nudt_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression,</span>
<span id="cb45-2">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb45-3"></span>
<span id="cb45-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(nudt_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="82b41343-c295-4b4d-b485-af291495e33f">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">erap2_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression,</span>
<span id="cb46-2">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb46-3"></span>
<span id="cb46-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(erap2_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<p>Now, we can see how Predixcan performs on these individuals</p>
<div class="cell" data-outputid="d245f45e-a45c-4c48-f819-95f7dee22ffb">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">erap1_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb47-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(erap1_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="50e712e1-702c-4cd2-df84-40edb2e1dcb8">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1">pex6_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb48-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(pex6_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="a93acdf3-c3d4-40bb-f19e-ad481e9b063d">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">erap2_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb49-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(erap2_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="845939e4-e00a-4897-a490-1534f73fc5b6">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1">nudt2_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb50-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(nudt2_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<p>Quite neat and impressive!</p>
</section>
</section>
<section id="exercise-2" class="level2">
<h2 class="anchored" data-anchor-id="exercise-2"><strong>EXERCISE 2</strong></h2>
<p>In this exercise, you will get your hands dirty, and run Enformer on your gene(s) of interest.</p>
<ol type="1">
<li><p>Select your favorite gene(s). <strong>Note that the more genes you use, the longer it will take to run</strong>.</p></li>
<li><p>Randomly select 10 individuals, just because we don’t have all the computational power.</p></li>
<li><p>Run predictions</p></li>
</ol>
<p>We only have data for a finite set of genes (sorry!). Here is a list of available genes you can use:</p>
<div class="cell" data-outputid="944612e4-f856-4624-e9a6-a025205575a4">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>curl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>L https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>uchicago.box.com<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>shared<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>static<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>x8d7dx1ykefz49ep6sxot42v44sfvcv5.tsv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>all_genes.tsv</span>
<span id="cb51-2"></span>
<span id="cb51-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/all_genes.tsv"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ag:</span>
<span id="cb51-4">  all_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [line.strip() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> ag]</span>
<span id="cb51-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(all_genes))</span>
<span id="cb51-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First 5 genes all_genes:"</span>, all_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span></code></pre></div>
</div>
<ol type="1">
<li>Select your genes</li>
</ol>
<div class="cell" data-outputid="105b0902-3b12-4878-ddda-8c2d322d2473">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1">my_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ATAD3A'</span>]</span>
<span id="cb52-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My gene(s) is/are </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>.join(my_genes)))</span></code></pre></div>
</div>
<ol start="2" type="1">
<li>Read in the TSS txt files where those chromosome are located. If you have genes located on more than one chromosome, copy the <strong>pd.read_table</strong> line for each chromosome you have, and replace the chromosome number (ellipses) as appropriate.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1">my_chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put in the chromosomes where the genes are located. Just the numbers will do, or you can put them in as a string type</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1">my_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb54-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> my_chromosomes:</span>
<span id="cb54-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>)</span>
<span id="cb54-4">  bed_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/tss_by_chr/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_tss_by_gene.txt'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>)</span>
<span id="cb54-5">  my_tss_list.append(pd.read_table(bed_file, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we read in the TSSs for each chromosome, and put them into a list</span></span></code></pre></div>
</div>
<ol start="3" type="1">
<li>Randomly select 10 individuals</li>
</ol>
<div class="cell" data-outputid="a3e1a0eb-3488-4634-8465-334ba3572e0e">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># let us set a seed to randomly select 10 individuals</span></span>
<span id="cb55-2">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># replace ... with an integer you want</span></span>
<span id="cb55-3"></span>
<span id="cb55-4">number_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb55-5"></span>
<span id="cb55-6">my_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>number_of_individuals, replace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># individuals we are interested in</span></span>
<span id="cb55-7">my_individuals</span></code></pre></div>
</div>
<ol start="4" type="1">
<li>We want to make sure that we have complete variation information for all 10 individuals.</li>
</ol>
<p>First, we need to download the variation bed files for these individuals</p>
<div class="cell" data-outputid="25de8c34-1e39-499c-bd99-7c2810b38eb3">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1">download_chrom_beds(chromosome<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>, genes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_genes) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remember that the genes should be on that chromosome, and you can use this code for each chromosome you have.</span></span></code></pre></div>
</div>
<p>Read in the variation bed files</p>
<div class="cell" data-outputid="f18fb43a-ca0b-4ad6-e571-f419e19347e0">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb57-2"></span>
<span id="cb57-3">my_missing_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb57-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> my_chromosomes:</span>
<span id="cb57-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> my_genes:</span>
<span id="cb57-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>)</span>
<span id="cb57-7">    file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/individual_beds/chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.bed'</span></span>
<span id="cb57-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.exists(file_path):</span>
<span id="cb57-9">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb57-10">    my_missing_list.append(check_individuals(file_path, my_individuals))</span></code></pre></div>
</div>
<section id="question-4" class="level4">
<h4 class="anchored" data-anchor-id="question-4"><strong><em>QUESTION 4</em></strong></h4>
<p>Are there missing individuals? All answers, based on your results are correct. If there are missing individuals, can you remove them? You can add new code blocks as you like.</p>
<div class="cell" data-outputid="06b151c0-3d6f-4f4a-f59b-d7246fa4c7f1">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1">my_missing_list</span></code></pre></div>
</div>
<p>It looks like we are almost set to make predictions.</p>
<ol start="5" type="1">
<li>Make predictions. First, we will collect the intervals for the genes we want, check the object and make sure we are on the right track. Next, we will call our <strong>run_predictions</strong> function.</li>
</ol>
<div class="cell" data-outputid="d651b2b2-d50d-4af3-e9f9-39722bdc7203">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1">my_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_chromosomes, gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_genes) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># here, we collect the intervals for that gene; replace ... with the right objects</span></span>
<span id="cb59-2">my_intervals</span></code></pre></div>
</div>
<div class="cell" data-outputid="3c7c3263-c304-4c31-ba57-d74ea116b251">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1">my_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run_predictions(gene_intervals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_intervals, tss_dataframe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_tss_list, individuals_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_individuals)</span></code></pre></div>
</div>
<p>At this point, we will leave you to make your own plots…</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1">atad3a_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> my_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]].loc[:,my_individuals]</span>
<span id="cb61-2">atad3a_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, </span>
<span id="cb61-3">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb61-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(atad3a_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1">atad3a_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb62-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(atad3a_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
</section>
</section>
<section id="average-haplotype-vs-average-epigenome" class="level2">
<h2 class="anchored" data-anchor-id="average-haplotype-vs-average-epigenome">Average Haplotype vs Average Epigenome</h2>
<p>Get ERAP2 interval:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1">ERAP2_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>], gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>])</span>
<span id="cb63-2">ERAP2_target_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_target_intervals(ERAP2_intervals)</span>
<span id="cb63-3">ERAP2_intervals, ERAP2_target_intervals</span></code></pre></div>
</div>
<p>Select random individual</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb64-1">rand_individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, replace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># individuals we are interested in</span></span>
<span id="cb64-2">rand_individual</span></code></pre></div>
</div>
<p>Run predictions (returns average epigenome):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1">my_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run_predictions(gene_intervals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_intervals, tss_dataframe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_tss_list, individuals_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_individuals)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/hackathon-enformer-usage/Hackathon_enformer_usage_participant.html</guid>
  <pubDate>Thu, 13 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Getting started on Polaris</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/polaris-intro/index.html</link>
  <description><![CDATA[ 




<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>More info can be found on:</p>
<ul>
<li><a href="https://docs.alcf.anl.gov/polaris/getting-started/">Main Page</a></li>
<li><a href="https://docs.alcf.anl.gov/running-jobs/example-job-scripts/">Example Job Scripts</a></li>
</ul>
</section>
<section id="shortcuts" class="level2">
<h2 class="anchored" data-anchor-id="shortcuts">Shortcuts</h2>
<ul>
<li>Login: <code>ssh s1mi@polaris.alcf.anl.gov</code></li>
<li>Main project storage: <code>/lus/grand/projects/TFXcan</code></li>
<li>Interactive Job: <code>qsub -I -A TFXcan -l select=1 -l filesystems=home:grand -l walltime=1:00:00 -q debug</code></li>
</ul>
</section>
<section id="basic-job-script" class="level2">
<h2 class="anchored" data-anchor-id="basic-job-script">Basic Job Script</h2>
<pre><code>#!/bin/bash
#PBS -A $PROJECT
#PBS -lwalltime=01:00:00
#PBS -lselect=4
#PBS -lsystem=polaris
#PBS -lfilesystems=home:eagle

rpn=4 # assume 1 process per GPU
procs=$((PBS_NODES*rpn))

# job to “run” from your submission directory
cd $PBS_O_WORKDIR

module load &lt;something&gt;

set +x # report all commands to stderr
env
mpiexec -n $procs -ppn $rpn --cpu-bind core -genvall ./bin &lt;opts&gt;
</code></pre>
</section>
<section id="conda-environments" class="level2">
<h2 class="anchored" data-anchor-id="conda-environments">Conda Environments</h2>
<p>Before activating and deactivating environments, we need to run <code>module load conda</code>.</p>
<p>To create an environment:</p>
<pre><code>module load conda

export http_proxy=http://proxy.alcf.anl.gov:3128
export https_proxy=$http_proxy

conda create -n ml-python python=3.10
conda activate ml-python
conda install -y jupyter nb_conda ipykernel mpi
conda install -y pytorch torchvision -c pytorch
conda install -c conda-forge tensorflow
python -m ipykernel install --user --name ml-python</code></pre>
<p>The last line creates a new directory <code>~/.local/share/jupyter/kernels/ml-python</code>. We add a couple lines to <code>kernel.json</code> so that we can use the new environment in the our Jupyter notebooks:</p>
<pre><code>{
  "argv": [
    "/home/s1mi/.conda/envs/ml-python/bin/python",
    "-m",
    "ipykernel_launcher",
    "-f",
    "{connection_file}"
  ],
  "display_name": "ml-python",
  "language": "python",
  "env": {
    "CONDA_PREFIX": "/home/s1mi/.conda/envs/ml-python",
    "PATH": "/home/s1mi/.conda/envs/ml-python:${PATH}",
    "http_proxy": "http://proxy.alcf.anl.gov:3128",
    "https_proxy": "http://proxy.alcf.anl.gov:3128"
  },
  "metadata": {
    "debugger": true
  }
}</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/polaris-intro/index.html</guid>
  <pubDate>Mon, 26 Jun 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Week 1</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/week-1/index.html</link>
  <description><![CDATA[ 




<p>Here’s my notes from the <a href="https://www.w3schools.com/python/numpy/numpy_intro.asp">w3 NumPy tutorial</a>:</p>
<section id="data-types-in-numpy" class="level2">
<h2 class="anchored" data-anchor-id="data-types-in-numpy">Data Types in Numpy:</h2>
<p>By default, Python has strings, integer, float, boolean, and complex. NumPy has extra data types:</p>
<ul>
<li>i: integer</li>
<li>b: boolean</li>
<li>u: unsigned integer</li>
<li>f: float</li>
<li>c: complex float</li>
<li>m: timedelta</li>
<li>M: datetime</li>
<li>O: object</li>
<li>S: string</li>
<li>U: unicode string</li>
<li>V: void</li>
</ul>
</section>
<section id="pytorch-notes" class="level1">
<h1>PyTorch Notes</h1>
<p>PyTorch is a machine learning framework leveraging two key features:</p>
<ul>
<li>Tensor computing on GPUs</li>
<li>Deep neural networks on an automatic differentiation engine</li>
</ul>
<p>Deep learning softwares including Enformer are built on top of PyTorch.</p>
<p>We covered the basics of the pytorch library in Python, starting with <a href="https://pytorch.org/tutorials/beginner/blitz/tensor_tutorial.html">Tensors</a>. Tensors function very similarly to NumPy arrays, but the operations can be run on GPUs. As a result, the tensor operations have counterparts in the numpy library.</p>
<p>We’ll only write about new concepts:</p>
<section id="tensors" class="level3">
<h3 class="anchored" data-anchor-id="tensors">Tensors</h3>
<p>By default, tensors are intialized on CPU. To move a tensor from CPU to GPU, we run:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"></span>
<span id="cb1-4">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb1-5">x_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(data)</span>
<span id="cb1-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tensor([[1, 2],
        [3, 4]])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> torch.cuda.is_available():</span>
<span id="cb3-2">  tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>)</span>
<span id="cb3-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Device tensor is stored on: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tensor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>device<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</div>
<p>Tensors on the CPU and NumPy arrays can share their underlying memory locations, and changing one will change the other.</p>
<p>Below we convert a torch tensor to numpy array and add 1 to every element.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ones(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"t: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-3">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.numpy()</span>
<span id="cb4-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"n: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">t.add_(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"t: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"n: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="neural-networks" class="level3">
<h3 class="anchored" data-anchor-id="neural-networks">Neural Networks</h3>
<p>We use <code>torch.nn</code> and <code>torch.autograd</code> packages to develop neural networks.</p>
<p>We learned how to compute gradients for backward propagation with <code>torch.autograd</code> automatic differentiation.</p>
<p>We can <code>torch.nn</code> to first define a neural network in a <code>forward</code> function. Next, we chose a loss function, <code>nn.MSELoss</code> and run back prop as before. We update the weights with SGD update rule:</p>
<pre><code>weight = weight - learning_rate * gradient
</code></pre>
<p><code>torch.optim</code> includes various update rules that take parameters and learning rate as input.</p>
<p>We summarize the typical training procedure for a neural network:</p>
<ul>
<li>Define the neural network that has some learnable parameters (or weights)</li>
<li>Iterate over a dataset of inputs</li>
<li>Process input through the network</li>
<li>Compute the loss (how far is the output from being correct)</li>
<li>Propagate gradients back into the network’s parameters</li>
<li>Update the weights of the network, typically using a simple update rule: <code>weight = weight - learning_rate * gradient</code></li>
</ul>
<p>Lastly, we looked at training on the CIFAR-10 dataset. The process involved the same steps as before, but with a more complex network and more iterations in the training process. We also tested the model.</p>


</section>
</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/week-1/index.html</guid>
  <pubDate>Fri, 23 Jun 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Overview of LLM in Molecular Biology article by Serafim Batzoglou</title>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/llm-in-molecular-biology-article/index.html</link>
  <description><![CDATA[ 




<p>Read the paper <a href="https://towardsdatascience.com/large-language-models-in-molecular-biology-9eb6b65d8a30">here</a></p>
<section id="introduction-to-large-language-models" class="level2">
<h2 class="anchored" data-anchor-id="introduction-to-large-language-models">Introduction to Large Language Models</h2>
<ul>
<li>Large language models like GPT-3 are trained on extensive text data and excel at generating coherent and contextually relevant text.</li>
<li>These models can be adapted for molecular biology tasks by encoding molecular information and training them on relevant datasets.</li>
</ul>
</section>
<section id="protein-structure-prediction" class="level2">
<h2 class="anchored" data-anchor-id="protein-structure-prediction">Protein Structure Prediction</h2>
<ul>
<li>Large language models can assist in predicting protein structures from amino acid sequences.</li>
<li>Language models can generate plausible protein structures, aiding in protein folding predictions and protein engineering.</li>
<li>Challenges include the vast conformational space and the need for high-quality training data to improve accuracy.</li>
</ul>
</section>
<section id="analyzing-dna-sequences" class="level2">
<h2 class="anchored" data-anchor-id="analyzing-dna-sequences">Analyzing DNA Sequences</h2>
<ul>
<li>Language models can be trained to recognize patterns in DNA sequences and identify regulatory elements.</li>
<li>They can predict the effects of genetic mutations, aiding in understanding genetic diseases and personalized medicine.</li>
<li>Large language models have the potential to improve upon existing methods for DNA sequence analysis.</li>
</ul>
</section>
<section id="molecular-design" class="level2">
<h2 class="anchored" data-anchor-id="molecular-design">Molecular Design</h2>
<ul>
<li>Language models can generate novel molecules with desired properties, contributing to drug discovery and material science.</li>
<li>They can suggest potential compounds based on specified criteria, accelerating the search for new drugs.</li>
<li>Large language models in molecular design can assist in exploring the chemical space and generating molecules that were not previously considered.</li>
</ul>
</section>
<section id="limitations-and-challenges" class="level2">
<h2 class="anchored" data-anchor-id="limitations-and-challenges">Limitations and Challenges</h2>
<ul>
<li>Obtaining high-quality training data for molecular biology tasks remains a challenge.</li>
<li>Interpreting the outputs of language models and understanding the underlying biological mechanisms is essential.</li>
<li>Incorporating domain-specific knowledge into language models is crucial for accurate and reliable results.</li>
</ul>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/llm-in-molecular-biology-article/index.html</guid>
  <pubDate>Tue, 20 Jun 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
