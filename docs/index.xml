<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>deep-learning-in-genomics</title>
<link>https://sabrinami.quarto.pub/deep-learning-in-genomics/index.html</link>
<atom:link href="https://sabrinami.quarto.pub/deep-learning-in-genomics/index.xml" rel="self" type="application/rss+xml"/>
<description>Sabrina&#39;s blog for Deep Learning in Genomics course</description>
<generator>quarto-1.3.361</generator>
<lastBuildDate>Tue, 22 Aug 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>Correlation between human reference CAGE predictions to mean expression across GTEx genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-21-comparing-enformer-to-observed-human-gene-expression/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_coding_TSS.tsv"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>)</span>
<span id="cb1-2">gex_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer"</span>: CAGE_predictions}, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hg38_annot.index)</span>
<span id="cb1-3">gex_df.head()</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-2">gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb2-3">gtex_tpm.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gex_df.index.intersection(gtex_tpm.index)</span>
<span id="cb3-2">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.loc[gene_list]</span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gtex_tpm.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes in both GTEx and BioMart datasets"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb4-2">gtex_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-3">gtex_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join observed gene expression with Enformer CAGE predicted</span></span>
<span id="cb5-2">gex_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gex_df.merge(gtex_mean_tpm, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>).dropna()</span>
<span id="cb5-3">gex_df.head()</span></code></pre></div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-21-comparing-enformer-to-observed-human-gene-expression/index.html</guid>
  <pubDate>Tue, 22 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>biomaRt tutorial for querying gene annotation</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-18-gene-annotation-query-example-hg38/index.html</link>
  <description><![CDATA[ 




<p>BioMart is a database with gene annotations for various species, builds, etc. We can use the package biomaRt package to query information.</p>
<section id="install-biomart" class="level3">
<h3 class="anchored" data-anchor-id="install-biomart">Install biomaRt</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">requireNamespace</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BiocManager"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb1-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BiocManager"</span>)</span>
<span id="cb1-3">BiocManager<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"biomaRt"</span>)</span></code></pre></div>
</div>
</section>
<section id="example-1-getting-a-list-of-human-genes-and-their-tss-in-hg38" class="level3">
<h3 class="anchored" data-anchor-id="example-1-getting-a-list-of-human-genes-and-their-tss-in-hg38">Example 1: Getting a list of human genes and their TSS in hg38</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(biomaRt)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># connect to BioMart database for human genes</span></span>
<span id="cb3-2">mart <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useMart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">biomart =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSEMBL_MART_ENSEMBL"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens_gene_ensembl"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">host =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.ensembl.org'</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># query canonical TSS for protein-coding genes on chr 1-22, X, and Y</span></span>
<span id="cb3-5">protein_coding_TSS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> biomaRt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getBM</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">attributes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_start"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_end"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_biotype"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcription_start_site"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_is_canonical"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strand"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filters =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_biotype"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_is_canonical"</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_coding"</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mart =</span> mart)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract columns of interest</span></span>
<span id="cb3-8">protein_coding_TSS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> protein_coding_TSS[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcription_start_site"</span>)]</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write to file</span></span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.table</span>(protein_coding_TSS, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_coding_TSS.tsv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
</section>
<section id="example-2-getting-a-list-of-rat-genes-with-orthologs-in-humans" class="level3">
<h3 class="anchored" data-anchor-id="example-2-getting-a-list-of-rat-genes-with-orthologs-in-humans">Example 2: Getting a list of rat genes with orthologs in humans</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># connect to BioMart database for rat genes</span></span>
<span id="cb4-2">ensembl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useMart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">biomart=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSEMBL_MART_ENSEMBL"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rnorvegicus_gene_ensembl"</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># query all relevant data and store in a dataframe</span></span>
<span id="cb4-5">ortho_rat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getBM</span>( <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">attributes=</span></span>
<span id="cb4-6">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>, </span>
<span id="cb4-7">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens_homolog_ensembl_gene"</span>,</span>
<span id="cb4-8">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>),</span>
<span id="cb4-9">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filters =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"with_hsapiens_homolog"</span>,</span>
<span id="cb4-10">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb4-11">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mart =</span> ensembl,</span>
<span id="cb4-12">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bmHeader=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write to file</span></span>
<span id="cb4-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.table</span>(ortho_rat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog_genes_rats_humans.tsv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-18-gene-annotation-query-example-hg38/index.html</guid>
  <pubDate>Fri, 18 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Querying Human Reference Epigenome</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-17-querying-human-reference-epigenome/all_hg38_genes.html</link>
  <description><![CDATA[ 




<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-7"></span>
<span id="cb1-8"></span>
<span id="cb1-9">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (num_bins, len(tracks))</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-24"></span>
<span id="cb1-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb1-26">    center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-27">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb1-28">    </span>
<span id="cb1-29">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-30">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb1-31">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb1-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if num_bins is odd</span></span>
<span id="cb1-33">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-34"></span>
<span id="cb1-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb1-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-38">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb1-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-40">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb1-41"></span>
<span id="cb1-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</div>
</section>
<section id="collect-tss-for-all-human-genes" class="level2">
<h2 class="anchored" data-anchor-id="collect-tss-for-all-human-genes">Collect TSS for all human genes</h2>
<p>We collected all protein-coding genes and their cannonical TSS using the biomaRt package.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"></span>
<span id="cb2-2">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_coding_TSS.tsv"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>)</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(hg38_annot.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes with TSS annotation"</span>)</span>
<span id="cb2-4">hg38_annot.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>19688 genes with TSS annotation</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">external_gene_name</th>
<th data-quarto-table-cell-role="th">chromosome_name</th>
<th data-quarto-table-cell-role="th">transcription_start_site</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142611</td>
<td>PRDM16</td>
<td>1</td>
<td>3069203</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000157911</td>
<td>PEX10</td>
<td>1</td>
<td>2412564</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142655</td>
<td>PEX14</td>
<td>1</td>
<td>10474950</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000149527</td>
<td>PLCH2</td>
<td>1</td>
<td>2476289</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000171621</td>
<td>SPSB1</td>
<td>1</td>
<td>9292894</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>We computed the predicted human reference epigenome by running Enformer on all intervals spanning the genome and concatenting the results. Now we extract the CAGE:Brain track at the bins where each gene’s TSS fall in order to quantify relative expression across genes.</p>
</section>
<section id="query-reference-epigenome-at-tss" class="level2">
<h2 class="anchored" data-anchor-id="query-reference-epigenome-at-tss">Query reference epigenome at TSS</h2>
<p>I found that querying the epigenome at certain positions returned NA, so I investigated those positions further by querying a larger window and plotting the CAGE track 4980.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> hg38_annot.index:</span>
<span id="cb4-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>]</span>
<span id="cb4-4">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>]</span>
<span id="cb4-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>,tss, num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> np.isnan(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span>):</span>
<span id="cb4-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid query:"</span>, gene, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"at"</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb4-9">    CAGE_predictions.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Invalid query: ENSG00000173451 at 12:71664301</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr12_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb6-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matrix shape:"</span>, f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>].shape)</span>
<span id="cb6-3">    center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71664301</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb6-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSG00000173451 TTS at bin"</span>, center)</span>
<span id="cb6-5">    epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>][center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>:center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb6-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of NA along track:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(np.isnan(epigen)))</span>
<span id="cb6-7">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>matrix shape: (1041214, 5313)
ENSG00000173451 TTS at bin 559877
Number of NA along track: 448</code></pre>
</div>
</div>
<p>We adapted a function from the Enformer usage notebook to plot a single track.</p>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_track(title, y, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb8-2">  fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height))</span>
<span id="cb8-3">  ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb8-4">  ax.set_title(title)</span>
<span id="cb8-5">  sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-6">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb8-7">  plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71664301</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71664301</span>)</span>
<span id="cb9-2">plot_track(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, ENSG00000173451'</span>, epigen, tss.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-17-querying-human-reference-epigenome/all_hg38_genes_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-17-querying-human-reference-epigenome/all_hg38_genes.html</guid>
  <pubDate>Thu, 17 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Testing the Enformer pipeline’s handling of unphased VCFs</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/average_haplotype_test.html</link>
  <description><![CDATA[ 




<section id="read-in-h5-prediction-file" class="level3">
<h3 class="anchored" data-anchor-id="read-in-h5-prediction-file">Read in h5 prediction file</h3>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_rat_single_gene/predictions_2023-08-16/enformer_predictions/000789972A/haplotype0/chr20_12118762_12118762_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb2-2">predictions1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr20_12118762_12118762'</span>][()]</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(predictions1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[0.23258275 0.2962714  0.52013165 ... 0.19615567 1.1101408  0.25560504]
 [0.15570731 0.20205402 0.3755348  ... 0.04365927 0.24989623 0.08517855]
 [0.1536611  0.21689793 0.4510562  ... 0.05227472 0.2147567  0.08478698]
 ...
 [0.1794057  0.22463816 0.29514343 ... 0.01105995 0.02652512 0.03385386]
 [0.1694869  0.20448665 0.26207498 ... 0.01688805 0.04071837 0.06028533]
 [0.15269741 0.20196484 0.22278813 ... 0.02438667 0.03900523 0.05988767]]</code></pre>
</div>
</div>
</section>
<section id="run-non-pipeline-enformer" class="level3">
<h3 class="anchored" data-anchor-id="run-non-pipeline-enformer">Run non-pipeline Enformer</h3>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EnformerVCF</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb4-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/rn7_genome.fasta'</span></span>
<span id="cb4-4">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read VCFs and encode haplotypes</span></span>
<span id="cb5-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>)</span>
<span id="cb5-3">chr20_vcf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.read_vcf(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/enformer_rat_data/BrainVCFs/chr20.vcf.gz"</span>)</span>
<span id="cb5-4">haplo1, haplo2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.vcf_to_seq(target_interval, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'000789972A'</span>, chr20_vcf, fasta_extractor)</span>
<span id="cb5-5">haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo1))[np.newaxis]</span>
<span id="cb5-6">haplo2_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo2))[np.newaxis]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">mean_haplo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo2_enc) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb6-2">predictions2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(mean_haplo)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"There are"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(predictions1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> predictions2)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between the two matrices."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are 0 differences between the two matrices.</code></pre>
</div>
</div>
<p>It looks like our edits worked!</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/average_haplotype_test.html</guid>
  <pubDate>Wed, 16 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation of Enformer CAGE predictions and observed expression across all rn7 genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index.html</link>
  <description><![CDATA[ 




<p>Our goal is to test whether Enformer can determine relative gene expression levels in rat Brain tissues. We used mean gene expression in Br rats as the ground truth, and predicted the CAGE Brain track at each gene’s TSS. We found a correlation of 0.45 between reference genome CAGE predictions for humans and observed mean gene expression, compared to a correlation of 0.63 in our baseline comparison of CAGE predictions against mean gene expression in GTEx Brain cortex tissues.</p>
<section id="reference-genome" class="level2">
<h2 class="anchored" data-anchor-id="reference-genome">Reference Genome</h2>
<section id="read-in-expression-files" class="level3">
<h3 class="anchored" data-anchor-id="read-in-expression-files">Read in expression files</h3>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-2">tpm.head()</span></code></pre></div>
</div>
</section>
<section id="calculate-average-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="calculate-average-gene-expression">Calculate average gene expression</h3>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm.iloc[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(mean_tpm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>gene_id
ENSRNOG00000065394    0.000000
ENSRNOG00000065356    0.000000
ENSRNOG00000070568    0.000912
ENSRNOG00000065706    0.005029
ENSRNOG00000069644    0.000265
                        ...   
ENSRNOG00000067420    0.000000
ENSRNOG00000069298    0.000559
ENSRNOG00000066131    0.000529
ENSRNOG00000068239    0.000500
ENSRNOG00000069552    0.001088
Length: 30231, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">mean_iqn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iqn.iloc[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(mean_iqn)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>gene_id
ENSRNOG00000065394    0.000000
ENSRNOG00000065356    0.000000
ENSRNOG00000070568    0.052617
ENSRNOG00000065706    0.022574
ENSRNOG00000069644    0.011569
                        ...   
ENSRNOG00000067420    0.000000
ENSRNOG00000069298    0.004439
ENSRNOG00000066131    0.008208
ENSRNOG00000068239    0.004439
ENSRNOG00000069552    0.017464
Length: 30231, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Put both means into dataframe</span></span>
<span id="cb7-2">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>: mean_tpm, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'iqn'</span>: mean_iqn, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>: np.full(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30231</span>, np.nan), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr'</span>: np.full(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30231</span>, np.nan)})</span>
<span id="cb7-3">corr_df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="30">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tpm</th>
<th data-quarto-table-cell-role="th">iqn</th>
<th data-quarto-table-cell-role="th">predicted</th>
<th data-quarto-table-cell-role="th">chr</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000065394</td>
<td>0.000000</td>
<td>0.000000</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065356</td>
<td>0.000000</td>
<td>0.000000</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070568</td>
<td>0.000912</td>
<td>0.052617</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065706</td>
<td>0.005029</td>
<td>0.022574</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000069644</td>
<td>0.000265</td>
<td>0.011569</td>
<td>NaN</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="calculate-gene-expression-from-enformer-predictions-on-reference-genome" class="level3">
<h3 class="anchored" data-anchor-id="calculate-gene-expression-from-enformer-predictions-on-reference-genome">Calculate gene expression from Enformer predictions on reference genome</h3>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">reference_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes/predictions_2023-08-11/enformer_predictions/reference_Br/haplotype0"</span></span>
<span id="cb8-2"></span>
<span id="cb8-3">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb8-4">annot_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_36254/3273646084.py:3: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geneSymbol</th>
<th data-quarto-table-cell-role="th">chromosome</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">strand</th>
<th data-quarto-table-cell-role="th">tss</th>
<th data-quarto-table-cell-role="th">description</th>
<th data-quarto-table-cell-role="th">hasEqtl</th>
<th data-quarto-table-cell-role="th">expr_BLA</th>
<th data-quarto-table-cell-role="th">expr_Brain</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">sqtl_BLA</th>
<th data-quarto-table-cell-role="th">sqtl_Brain</th>
<th data-quarto-table-cell-role="th">sqtl_Eye</th>
<th data-quarto-table-cell-role="th">sqtl_IL</th>
<th data-quarto-table-cell-role="th">sqtl_LHb</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc2</th>
<th data-quarto-table-cell-role="th">sqtl_OFC</th>
<th data-quarto-table-cell-role="th">sqtl_PL</th>
<th data-quarto-table-cell-role="th">sqtl_PL2</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">geneId</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000066169</td>
<td>ENSRNOG00000066169</td>
<td>1</td>
<td>36112690</td>
<td>36122387</td>
<td>-</td>
<td>36122387</td>
<td>NaN</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000070168</td>
<td>Olr56</td>
<td>1</td>
<td>157231467</td>
<td>157232417</td>
<td>+</td>
<td>157231467</td>
<td>olfactory receptor family 51 subfamily F membe...</td>
<td>True</td>
<td>False</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070901</td>
<td>Irgq</td>
<td>1</td>
<td>80123925</td>
<td>80131881</td>
<td>+</td>
<td>80123925</td>
<td>immunity-related GTPase Q</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
</tbody>
</table>

<p>3 rows × 68 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for gene in corr_df.index:</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     gene_annot = annot_df.loc[gene]</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     corr_df['chr'].loc[gene] = gene_annot['chromosome']</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     interval = f"chr{gene_annot['chromosome']}_{gene_annot['tss']}_{gene_annot['tss']}"</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     path = os.path.join(predictions_dir, f"{interval}_predictions.h5")</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     if os.path.isfile(path):</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         predictions = h5py.File(path, "r")</span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         pred_expr = np.average(predictions[interval][446:450, 4980])</span></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         corr_df['predicted'].loc[gene] = pred_expr</span></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     else:</span></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         continue</span></span>
<span id="cb10-12"></span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># corr_df.dropna().to_csv("rn7_reference_epigenome_predicted_vs_observed.csv", index=True)</span></span>
<span id="cb10-15"></span>
<span id="cb10-16">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rn7_reference_epigenome_predicted_vs_observed.csv"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb10-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(corr_df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                         tpm  predicted  chr
gene_id                                     
ENSRNOG00000065394  0.000000   0.002946  1.0
ENSRNOG00000065356  0.000000   0.004051  1.0
ENSRNOG00000070568  0.000912   0.003553  1.0
ENSRNOG00000065706  0.005029   0.005847  1.0
ENSRNOG00000069644  0.000265   0.001334  1.0
...                      ...        ...  ...
ENSRNOG00000067420  0.000000   0.001928    Y
ENSRNOG00000069298  0.000559   0.003280    Y
ENSRNOG00000066131  0.000529   0.003569    Y
ENSRNOG00000068239  0.000500   0.001887    Y
ENSRNOG00000069552  0.001088   0.001822    Y

[19493 rows x 3 columns]</code></pre>
</div>
</div>
<p>I ran Enformer on roughly ~30,000 intervals, but it looks like we only have predictions for 2/3 of them. I’ll investigate in another post.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Drop rows with NaN values</span></span>
<span id="cb12-2">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> corr_df.dropna()</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatter plot with colors based on column z</span></span>
<span id="cb12-5">plt.scatter(corr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>], corr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set labels and title</span></span>
<span id="cb12-8">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Br Mean TPM Gene Expression'</span>)</span>
<span id="cb12-9">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Rat Reference Gene Expression'</span>)</span>
<span id="cb12-10">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb12-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index_files/figure-html/cell-9-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">corr_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]].corr()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tpm</th>
<th data-quarto-table-cell-role="th">predicted</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">tpm</td>
<td>1.000000</td>
<td>0.433632</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">predicted</td>
<td>0.433632</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>The correlation between CAGE predictions and gene expression measured by relative abundance of transcripts is lower than we wanted. We’ll compare it with average gene expression in human brain tissue.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-2">gtex_tpm.head()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># strip off ensembl version tag</span></span>
<span id="cb15-2">gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb15-3">gtex_tpm.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">id</th>
<th data-quarto-table-cell-role="th">Name</th>
<th data-quarto-table-cell-role="th">Description</th>
<th data-quarto-table-cell-role="th">GTEX-1117F-3226-SM-5N9CT</th>
<th data-quarto-table-cell-role="th">GTEX-111FC-3126-SM-5GZZ2</th>
<th data-quarto-table-cell-role="th">GTEX-1128S-2726-SM-5H12C</th>
<th data-quarto-table-cell-role="th">GTEX-117XS-3026-SM-5N9CA</th>
<th data-quarto-table-cell-role="th">GTEX-1192X-3126-SM-5N9BY</th>
<th data-quarto-table-cell-role="th">GTEX-11DXW-1126-SM-5H12Q</th>
<th data-quarto-table-cell-role="th">GTEX-11DXY-3226-SM-5GIDE</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">GTEX-ZAK1-3026-SM-5S2MJ</th>
<th data-quarto-table-cell-role="th">GTEX-ZDXO-2126-SM-4WKFI</th>
<th data-quarto-table-cell-role="th">GTEX-ZE7O-3126-SM-5HL5X</th>
<th data-quarto-table-cell-role="th">GTEX-ZE9C-3026-SM-4WKHB</th>
<th data-quarto-table-cell-role="th">GTEX-ZF28-3026-SM-4WKHP</th>
<th data-quarto-table-cell-role="th">GTEX-ZUA1-3026-SM-59HJC</th>
<th data-quarto-table-cell-role="th">GTEX-ZVT3-3026-SM-5E43N</th>
<th data-quarto-table-cell-role="th">GTEX-ZYFD-3026-SM-5E44C</th>
<th data-quarto-table-cell-role="th">GTEX-ZYY3-3126-SM-5SI9L</th>
<th data-quarto-table-cell-role="th">GTEX-ZZPT-3026-SM-5GZXH</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>ENSG00000223972</td>
<td>DDX11L1</td>
<td>0.0178</td>
<td>0.0000</td>
<td>0.0171</td>
<td>0.0000</td>
<td>0.0260</td>
<td>0.0000</td>
<td>0.000</td>
<td>...</td>
<td>0.0000</td>
<td>0.0184</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.000</td>
<td>0.0355</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0187</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1</td>
<td>ENSG00000227232</td>
<td>WASH7P</td>
<td>6.8920</td>
<td>4.2250</td>
<td>2.3590</td>
<td>3.6930</td>
<td>5.0400</td>
<td>2.2010</td>
<td>2.394</td>
<td>...</td>
<td>2.4190</td>
<td>3.0860</td>
<td>3.6510</td>
<td>1.9050</td>
<td>3.7270</td>
<td>2.542</td>
<td>1.8740</td>
<td>2.3140</td>
<td>4.3050</td>
<td>2.1230</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2</td>
<td>ENSG00000278267</td>
<td>MIR6859-1</td>
<td>0.0000</td>
<td>0.4912</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.000</td>
<td>...</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>3</td>
<td>ENSG00000243485</td>
<td>MIR1302-2HG</td>
<td>0.0000</td>
<td>0.0771</td>
<td>0.0341</td>
<td>0.0308</td>
<td>0.0519</td>
<td>0.0000</td>
<td>0.000</td>
<td>...</td>
<td>0.1409</td>
<td>0.0367</td>
<td>0.0427</td>
<td>0.0551</td>
<td>0.0336</td>
<td>0.000</td>
<td>0.0000</td>
<td>0.0374</td>
<td>0.0468</td>
<td>0.0000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>4</td>
<td>ENSG00000237613</td>
<td>FAM138A</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0242</td>
<td>0.0219</td>
<td>0.0000</td>
<td>0.0231</td>
<td>0.000</td>
<td>...</td>
<td>0.0000</td>
<td>0.0261</td>
<td>0.0304</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
</tr>
</tbody>
</table>

<p>5 rows × 258 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># human to rat gene dictionary</span></span>
<span id="cb16-2">ortho_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog_genes_rats_humans.tsv"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, usecols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rnorvegicus_homolog_ensembl_gene'</span>])</span>
<span id="cb16-3">ortho_genes.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th">rnorvegicus_homolog_ensembl_gene</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ENSG00000198888</td>
<td>ENSRNOG00000030644</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>ENSG00000198763</td>
<td>ENSRNOG00000031033</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>ENSG00000198804</td>
<td>ENSRNOG00000034234</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>ENSG00000198712</td>
<td>ENSRNOG00000030371</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>ENSG00000228253</td>
<td>ENSRNOG00000033299</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use this map to swap human gene names with rat orthologs</span></span>
<span id="cb17-2">merged_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.merge(ortho_genes, left_on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, right_on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>)</span>
<span id="cb17-3">merged_df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">id</th>
<th data-quarto-table-cell-role="th">Name</th>
<th data-quarto-table-cell-role="th">Description</th>
<th data-quarto-table-cell-role="th">GTEX-1117F-3226-SM-5N9CT</th>
<th data-quarto-table-cell-role="th">GTEX-111FC-3126-SM-5GZZ2</th>
<th data-quarto-table-cell-role="th">GTEX-1128S-2726-SM-5H12C</th>
<th data-quarto-table-cell-role="th">GTEX-117XS-3026-SM-5N9CA</th>
<th data-quarto-table-cell-role="th">GTEX-1192X-3126-SM-5N9BY</th>
<th data-quarto-table-cell-role="th">GTEX-11DXW-1126-SM-5H12Q</th>
<th data-quarto-table-cell-role="th">GTEX-11DXY-3226-SM-5GIDE</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">GTEX-ZE7O-3126-SM-5HL5X</th>
<th data-quarto-table-cell-role="th">GTEX-ZE9C-3026-SM-4WKHB</th>
<th data-quarto-table-cell-role="th">GTEX-ZF28-3026-SM-4WKHP</th>
<th data-quarto-table-cell-role="th">GTEX-ZUA1-3026-SM-59HJC</th>
<th data-quarto-table-cell-role="th">GTEX-ZVT3-3026-SM-5E43N</th>
<th data-quarto-table-cell-role="th">GTEX-ZYFD-3026-SM-5E44C</th>
<th data-quarto-table-cell-role="th">GTEX-ZYY3-3126-SM-5SI9L</th>
<th data-quarto-table-cell-role="th">GTEX-ZZPT-3026-SM-5GZXH</th>
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th">rnorvegicus_homolog_ensembl_gene</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>7</td>
<td>ENSG00000186092</td>
<td>OR4F5</td>
<td>0.1004</td>
<td>0.0364</td>
<td>0.0322</td>
<td>0.0581</td>
<td>0.0489</td>
<td>0.0919</td>
<td>0.045</td>
<td>...</td>
<td>0.0</td>
<td>0.052</td>
<td>0.0634</td>
<td>0.1199</td>
<td>0.2343</td>
<td>0.0705</td>
<td>0.0</td>
<td>0.0</td>
<td>ENSG00000186092</td>
<td>ENSRNOG00000047700</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>7</td>
<td>ENSG00000186092</td>
<td>OR4F5</td>
<td>0.1004</td>
<td>0.0364</td>
<td>0.0322</td>
<td>0.0581</td>
<td>0.0489</td>
<td>0.0919</td>
<td>0.045</td>
<td>...</td>
<td>0.0</td>
<td>0.052</td>
<td>0.0634</td>
<td>0.1199</td>
<td>0.2343</td>
<td>0.0705</td>
<td>0.0</td>
<td>0.0</td>
<td>ENSG00000186092</td>
<td>ENSRNOG00000046942</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>7</td>
<td>ENSG00000186092</td>
<td>OR4F5</td>
<td>0.1004</td>
<td>0.0364</td>
<td>0.0322</td>
<td>0.0581</td>
<td>0.0489</td>
<td>0.0919</td>
<td>0.045</td>
<td>...</td>
<td>0.0</td>
<td>0.052</td>
<td>0.0634</td>
<td>0.1199</td>
<td>0.2343</td>
<td>0.0705</td>
<td>0.0</td>
<td>0.0</td>
<td>ENSG00000186092</td>
<td>ENSRNOG00000055449</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>7</td>
<td>ENSG00000186092</td>
<td>OR4F5</td>
<td>0.1004</td>
<td>0.0364</td>
<td>0.0322</td>
<td>0.0581</td>
<td>0.0489</td>
<td>0.0919</td>
<td>0.045</td>
<td>...</td>
<td>0.0</td>
<td>0.052</td>
<td>0.0634</td>
<td>0.1199</td>
<td>0.2343</td>
<td>0.0705</td>
<td>0.0</td>
<td>0.0</td>
<td>ENSG00000186092</td>
<td>ENSRNOG00000042991</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>14</td>
<td>ENSG00000222623</td>
<td>RNU6-1100P</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.000</td>
<td>...</td>
<td>0.0</td>
<td>0.000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.0</td>
<td>0.0</td>
<td>ENSG00000222623</td>
<td>ENSRNOG00000055395</td>
</tr>
</tbody>
</table>

<p>5 rows × 260 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">gtex_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_df.iloc[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb18-2">gtex_mean_tpm.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rnorvegicus_homolog_ensembl_gene'</span>]</span>
<span id="cb18-3">gtex_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span></span>
<span id="cb18-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gtex_mean_tpm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>rnorvegicus_homolog_ensembl_gene
ENSRNOG00000047700        0.143794
ENSRNOG00000046942        0.143794
ENSRNOG00000055449        0.143794
ENSRNOG00000042991        0.143794
ENSRNOG00000055395        0.001240
                          ...     
ENSRNOG00000031053    26848.819608
ENSRNOG00000029707    54407.450980
ENSRNOG00000029971    10158.058824
ENSRNOG00000029042     9048.839216
ENSRNOG00000031766    31076.035294
Name: gtex, Length: 22411, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="52">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatter plot with colors based on column z</span></span>
<span id="cb20-2">plt.scatter(corr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span>], corr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set labels and title</span></span>
<span id="cb20-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GTEx Brain Cortex Mean TPM'</span>)</span>
<span id="cb20-6">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Rat Reference Gene Expression'</span>)</span>
<span id="cb20-7">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb20-10">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index_files/figure-html/cell-16-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="51">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#corr_df.join(gtex_mean_tpm).dropna()</span></span>
<span id="cb21-2">corr_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span>]].corr()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="51">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tpm</th>
<th data-quarto-table-cell-role="th">predicted</th>
<th data-quarto-table-cell-role="th">gtex</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">tpm</td>
<td>1.000000</td>
<td>0.456471</td>
<td>0.629975</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">predicted</td>
<td>0.456471</td>
<td>1.000000</td>
<td>0.306466</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">gtex</td>
<td>0.629975</td>
<td>0.306466</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Lastly, we’ll concatenate all the prediction matrices into one h5 file.</p>
</section>
</section>
<section id="concatenate-predictions" class="level2">
<h2 class="anchored" data-anchor-id="concatenate-predictions">Concatenate Predictions</h2>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> concatenate_predictions(predictions_dir, output_path):</span>
<span id="cb22-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_file:</span>
<span id="cb22-3">        files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb22-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files:</span>
<span id="cb22-5">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb22-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(os.path.join(predictions_dir, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_file:</span>
<span id="cb22-7">                output_file.create_dataset(interval, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_file[interval][()], shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">concatenate_predictions(reference_predictions, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/2023-08-16_predictions_some_missing_genes.h5"</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index.html</guid>
  <pubDate>Tue, 15 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Preparing rat VCFs for Enformer pipeline</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-14-updated-preparing-rat-vcf-inputs-for-enformer-pipeline/index.html</link>
  <description><![CDATA[ 




<section id="download-vcf" class="level3">
<h3 class="anchored" data-anchor-id="download-vcf">Download VCF</h3>
<pre class="{bash}"><code>cd enformer_rat_data
wget https://ratgtex.org/data/geno/Brain.rn7.vcf.gz
</code></pre>
</section>
<section id="changing-vcf-chrom-notation" class="level3">
<h3 class="anchored" data-anchor-id="changing-vcf-chrom-notation">Changing VCF CHROM notation</h3>
<pre class="{bash}"><code>gunzip Brain.rn7.vcf.gz
awk '{if($0 !~ /^#/) print "chr"$0; else print $0}' Brain.rn7.vcf &gt; output.rn7.vcf
</code></pre>
</section>
<section id="replace-missing-genotypes-with-reference-alleles" class="level3">
<h3 class="anchored" data-anchor-id="replace-missing-genotypes-with-reference-alleles">Replace missing genotypes with reference alleles</h3>
<p>Note: There are a number of good reasons filling in missing genotypes with two reference alleles is discouraged. However, our goal is to predict the epigenome from a sequence of 393,216 base pairs, so we assume that changing a snp will have negligible effect on Enformer predictions. Additionally, we are not using allele frequency to draw any conclusions about our population.</p>
<pre class="{bash}"><code>sed 's/\.\/\./0\/0/g' output.rn7.vcf &gt; Brain.rn7.no_missing.vcf
bgzip Brain.rn7.no_missing.vcf
bcftools index -t Brain.rn7.no_missing.vcf.gz
</code></pre>
</section>
<section id="split-vcfs" class="level3">
<h3 class="anchored" data-anchor-id="split-vcfs">Split VCFs</h3>
<p>First by chromosome number:</p>
<pre class="{bash}"><code>
mkdir BrainVCFs
# Split VCF by chromosome
vcf_in=Brain.rn7.no_missing.vcf.gz

vcf_out_prefix=BrainVCFs/chr

for i in {1..20}
do
    echo "Working on chromosome ${i}..."
    bcftools view ${vcf_in} --regions chr${i} -o ${vcf_out_prefix}${i}.vcf.gz -Oz
done


# Index VCFs
for i in {1..20}
do
    echo "Indexing chromosome ${i}..."
    bcftools index -t BrainVCFs/chr${i}.vcf.gz
done</code></pre>
<p>Then for the sex chromosomes:</p>
<pre class="{bash}"><code>vcf_in=Brain.rn7.no_missing.vcf.gz
vcf_out_prefix=BrainVCFs/chr

bcftools view ${vcf_in} --regions X -o ${vcf_out_prefix}X.vcf.gz -Oz
bcftools view ${vcf_in} --regions Y -o ${vcf_out_prefix}Y.vcf.gz -Oz

bcftools index -t BrainVCFs/chrX.vcf.gz
bcftools index -t BrainVCFs/chrY.vcf.gz
</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-14-updated-preparing-rat-vcf-inputs-for-enformer-pipeline/index.html</guid>
  <pubDate>Mon, 14 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>An introduction to cyvcf2</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-14-cyvcf2-tutorial/test_vcf_query.html</link>
  <description><![CDATA[ 




<section id="read-vcf" class="level2">
<h2 class="anchored" data-anchor-id="read-vcf">Read VCF</h2>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cyvcf2</span>
<span id="cb1-2">vcf_rn7 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cyvcf2.cyvcf2.VCF(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/chr20.vcf.gz"</span>)</span>
<span id="cb1-3">vcf_hg38 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cyvcf2.cyvcf2.VCF(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/hg38_data/ALL.chr22.shapeit2_integrated_SNPs_v2a_27022019.GRCh38.phased.vcf.gz"</span>)</span>
<span id="cb1-4">    </span></code></pre></div>
</div>
<p>We query the VCF for all snp positions and put it into a list.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">snps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_rn7:</span>
<span id="cb2-3">    snps.append(variant.POS)</span>
<span id="cb2-4">region <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [snp <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> snp <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> snps <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11922155</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> snp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12315371</span>]</span></code></pre></div>
</div>
<p>Our region of interest is centered at the TSS for gene ENSRNOG00000054549. We subset to all snps within 196608 bp of position 12118763 on chromosome 20.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(region)</span></span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(region), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"snps found in interval"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1957 snps found in interval</code></pre>
</div>
</div>
<p>We’ll print the first lines from both human and rat VCFs.</p>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_rn7:</span>
<span id="cb5-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(variant)</span>
<span id="cb5-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb5-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_hg38:</span>
<span id="cb5-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(variant)</span>
<span id="cb5-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>20  7226    chr20:7226  A   G   .   PASS    AC=17763;AN=27342   GT  0/1 1/1 0/1 1/1 0/1 1/1 1/1 1/1 1/1 1/1 1/1 1/1 1/1 0/1 1/1 0/1 0/1 0/1 0/0 0/0 1/1 0/1 1/1 0/0 1/1 0/1 0/0 0/0 0/1 1/1 0/1 1/1 0/0 1/1 1/1 0/0 0/1 0/1 1/1 0/1 0/1 0/1 0/1 0/1 0/1 0/1 1/1 0/1 0/1 0/0 1/1 1/1 1/1 1/1 0/0 0/0 0/1 0/1 0/0 1/1 0/1 0/1 0/1 0/0 1/1 1/1 1/1 1/1 0/1 1/1 0/1 0/1 0/1 1/1 1/1 1/1 1/1 0/0 1/1 0/1 0/1 1/1 0/1 0/0 0/1 0/1 1/1 1/1 1/1 0/1 0/1 1/1 0/1 0/1 0/1 0/1 0/1 1/1 0/1 0/1 0/0 1/1 0/1 0/1 1/1 0/0 0/0 1/1 0/1 1/1 1/1 0/0 0/0 1/1 1/1 1/1 0/1 0/1 1/1 0/1 0/1 0/0 0/1 0/1 1/1 0/1 0/1 0/1 0/0 0/1 0/1 0/0 1/1 0/1 0/1 0/1 1/1 0/0 0/0 0/0 1/1 0/1 0/1 0/1 0/0 0/1 0/1 1/1 1/1 1/1 0/1 0/1 1/1 1/1 0/0 0/1 0/1 1/1 0/0 0/0 1/1 0/0 0/1 0/0 0/1 0/1 0/1 0/1 0/1 0/0 0/1 0/0 0/0 0/0 0/1 1/1 0/1 0/1 0/1 0/0 0/1 1/1 1/1 1/1 1/1 0/1 0/1 1/1 0/1 0/0 1/1 0/0 1/1 1/1 0/1 ./. 1/1 1/1 0/0 0/1 1/1 0/1 1/1 1/1 1/1 1/1 0/1 1/1 0/1 0/1 0/1 0/1 1/1 1/1 1/1 0/0 1/1 1/1 1/1 1/1 1/1 0/1 1/1 1/1 1/1 0/1 0/1 1/1 1/1 1/1 1/1 0/1 0/1 0/1 1/1 1/1 1/1 0/1 0/1 0/1 1/1 1/1 1/1 1/1 1/1 0/0 0/1 0/1 1/1 1/1 1/1 1/1 0/0 1/1 0/1 0/1 0/1 1/1 1/1 1/1 0/1 0/1 1/1 1/1 0/0 0/0 1/1 0/1 0/1 0/0 1/1 0/1 1/1 1/1 0/1 0/0 0/0 0/0 0/0 0/1 0/0 0/1 0/1 1/1 0/1 0/1 0/0 ./. 0/0 0/1 1/1 0/1 1/1 1/1 1/1 0/1 0/0 0/0 1/1 0/0 0/1 0/1 0/1 0/1 0/1 0/1 0/0 1/1 0/1 1/1 0/1 1/1 0/1 1/1 1/1 1/1 1/1 0/1 1/1 0/0 0/1 1/1 0/1 1/1 1/1 1/1 1/1 0/1 0/1 1/1 0/1 0/0 0/1 1/1 1/1 0/1 0/0 1/1 0/1 0/0

chr22   10522217    .   G   A   .   PASS    AC=89;AF=0.02;AFR_AF=0.07;AMR_AF=0;AN=5096;DP=9085;EAS_AF=0;EUR_AF=0;NS=2548;SAS_AF=0;VT=SNP    GT  0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 1|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 0|0 0|0 1|1 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 1|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|1 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 1|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|0 1|1 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 1|0 1|0 0|0 0|1 1|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 0|1 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 1|0 0|0 0|0 0|1 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0
</code></pre>
</div>
</div>
<p>The first three columns look different, which might explain our bugs with our rat VCFs when running the Enformer pipeline. We’ll try querying these regions from the VCFs.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_hg38(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr22:10516173-10909389"</span>):</span>
<span id="cb7-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(variant)</span>
<span id="cb7-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>chr22   10516173    .   A   G   .   PASS    AC=121;AF=0.02;AFR_AF=0.06;AMR_AF=0.02;AN=5096;DP=8203;EAS_AF=0;EUR_AF=0.02;NS=2548;SAS_AF=0;VT=SNP GT  0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 1|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|1 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 1|0 0|0 0|0 1|0 0|0 0|0 1|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|1 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0
</code></pre>
</div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_rn7(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20:11922155-12315371"</span>):</span>
<span id="cb9-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(variant)</span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>20  11922570    chr20:11922570  G   A   .   PASS    AC=10302;AN=28910   GT  0/0 0/1 0/0 1/1 0/1 0/0 ./. 0/1 0/0 0/1 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/1 0/1 1/1 0/1 0/1 0/0 0/1 0/1 0/0 0/1 0/0 0/1 0/0 0/1 0/0 1/1 0/1 0/1 0/1 0/0 0/1 1/1 0/1 0/0 0/0 0/0 1/1 0/0 0/1 0/0 0/1 1/1 0/1 0/0 1/1 0/0 0/0 0/0 0/1 0/0 0/1 0/1 0/1 0/0 0/0 1/1 0/1 0/1 0/0 0/0 0/0 0/0 1/1 0/0 0/0 0/1 0/0 0/1 0/1 0/0 0/1 0/1 0/0 0/0 0/0 0/1 0/0 1/1 0/1 0/1 0/1 0/1 0/1 0/1 0/0 0/0 1/1 0/0 0/1 0/0 0/0 0/0 0/1 0/1 0/0 0/0 0/1 0/0 0/0 0/0 0/0 0/1 0/1 0/0 0/0 0/0 0/0 0/1 0/0 0/0 0/1 0/1 0/0 0/0 1/1 0/1 0/0 0/0 1/1 0/1 0/0 0/1 1/1 0/0 0/1 0/0 0/0 0/1 0/0 0/1 1/1 0/0 0/0 0/1 0/1 0/1 0/0 0/0 0/1 0/0 1/1 0/0 0/0 0/1 0/0 0/1 1/1 0/0 0/0 0/0 0/1 0/1 0/0 0/1 0/0 0/1 1/1 0/1 0/1 0/1 0/1 1/1 0/1 0/0 0/0 0/0 0/0 0/0 1/1 0/1 1/1 0/0 0/1 0/1 0/0 0/0 0/0 0/0 0/0 1/1 0/1 1/1 0/1 0/1 0/1 0/1 0/1 0/1 1/1 0/0 0/0 0/1 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/1 0/0 0/0 0/0 0/0 1/1 0/1 0/0 0/0 0/0 0/0 0/1 1/1 0/0 0/0 0/1 0/1 0/0 0/0 0/0 0/1 0/0 0/1 0/1 0/1 0/0 0/0 0/0 0/0 0/0 0/0 0/1 0/0 0/0 0/0 0/0 0/0 0/1 0/1 0/1 0/1 0/1 0/1 0/0 0/0 0/1 0/0 0/1 0/0 0/1 0/0 0/0 1/1 0/1 0/0 0/0 0/0 0/1 0/0 0/0 0/0 1/1 1/1 0/1 0/1 0/1 0/1 0/1 0/0 0/0 0/1 1/1 0/0 1/1 0/0 0/1 0/1 1/1 0/0 1/1 0/1 0/1 0/1 0/0 0/0 0/1 1/1 0/1 0/1 0/0 0/1 0/0 0/1 0/1 0/0 0/0 0/1 0/0 0/1 0/1 0/0 0/1 0/1 0/0 0/0 0/0 0/0 0/1 0/1 1/1 0/0 0/0 0/0 0/1 0/1 0/0 0/0 0/0 0/0 0/0 0/1 0/1 0/0 0/1 0/0 1/1 0/1 0/1 0/0
</code></pre>
</div>
</div>
<p>Because of the difference in chromosome notations, we have to query the rat VCFs without the extra “chr” string at the start. Unfortunately, we need the “chr” string for other parts of the pipeline, so we cannot just remove the “chr” prefix from our <code>intervals.txt</code> file, but rather we need to add “chr” to the CHROM column of our rn7 VCFs.</p>
<pre><code>awk '{if($0 !~ /^#/) print "chr"$0; else print $0}' Brain.rn7.vcf &gt; output.vcf

</code></pre>
<p>I will update the <a href="https://sabrina-dl.hakyimlab.org/posts/preparing-rat-vcfs-for-enformer/">Preparing Rat VCFs for Enformer</a> blog post.</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-14-cyvcf2-tutorial/test_vcf_query.html</guid>
  <pubDate>Mon, 14 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Testing the Enformer pipeline with added parameters for personalized prediction on rats</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/index.html</link>
  <description><![CDATA[ 




<section id="test-for-a-single-individual-and-gene" class="level2">
<h2 class="anchored" data-anchor-id="test-for-a-single-individual-and-gene">Test for a single individual and gene</h2>
<p>We chose <code>ENSRNOG00000054549</code>, centered at the TSS chr20:12118762.</p>
<pre><code>conda activate enformer-predict-tools

cd /Users/sabrinami/Github/shared_pipelines/enformer_pipeline

python scripts/enformer_predict.py --parameters /Users/sabrinami/Github/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/local_test_personalized.json
</code></pre>
</section>
<section id="compare-results-to-non-pipeline-method" class="level2">
<h2 class="anchored" data-anchor-id="compare-results-to-non-pipeline-method">Compare results to non-pipeline method</h2>
<section id="read-in-h5-prediction-files" class="level3">
<h3 class="anchored" data-anchor-id="read-in-h5-prediction-files">Read in h5 prediction files</h3>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_rat_single_gene/predictions_2023-08-15/enformer_predictions/000789972A/haplotype1/chr20_12118762_12118762_predictions.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb3-2">haplotype1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr20_12118762_12118762'</span>][()]</span>
<span id="cb3-3">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_rat_single_gene/predictions_2023-08-15/enformer_predictions/000789972A/haplotype2/chr20_12118762_12118762_predictions.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb3-4">haplotype2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr20_12118762_12118762'</span>][()]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype1:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, haplotype1)</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype2:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, haplotype2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>haplo1:
 [[0.24076067 0.30101207 0.5132549  ... 0.20521325 1.1217918  0.25558835]
 [0.15946281 0.20442429 0.37761706 ... 0.04465578 0.24607326 0.08344302]
 [0.15568599 0.21775411 0.4520394  ... 0.05306218 0.20978831 0.08246609]
 ...
 [0.17938398 0.22463004 0.29506153 ... 0.01107231 0.02651541 0.0338815 ]
 [0.16948122 0.2044945  0.2620006  ... 0.01690046 0.04069382 0.06031117]
 [0.15266503 0.201914   0.22262897 ... 0.02438843 0.03895664 0.05986918]]
haplo2:
 [[0.23317184 0.29741773 0.5182305  ... 0.20385785 1.1424272  0.26008573]
 [0.15613721 0.20323968 0.37887666 ... 0.04524086 0.257699   0.08468267]
 [0.15380262 0.21736239 0.45358157 ... 0.05439655 0.22475001 0.08432709]
 ...
 [0.17942066 0.2246648  0.29515463 ... 0.01105907 0.02650285 0.03387856]
 [0.16946748 0.20452495 0.2621123  ... 0.0168827  0.04067391 0.06034191]
 [0.15272975 0.20209791 0.22299151 ... 0.0243816  0.03896997 0.05996798]]</code></pre>
</div>
</div>
</section>
<section id="run-non-pipeline-enformer" class="level3">
<h3 class="anchored" data-anchor-id="run-non-pipeline-enformer">Run non-pipeline Enformer</h3>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EnformerVCF</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>2023-08-16 15:01:14.430478: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/rn7_genome.fasta'</span></span>
<span id="cb8-2">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## read vcf and encode haplotypes</span></span>
<span id="cb9-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>)</span>
<span id="cb9-3">chr20_vcf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.read_vcf(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/enformer_rat_data/BrainVCFs/chr20.vcf.gz"</span>)</span>
<span id="cb9-4">haplo1, haplo2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.vcf_to_seq(target_interval, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'000789972A'</span>, chr20_vcf, fasta_extractor)</span>
<span id="cb9-5">haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo1))[np.newaxis]</span>
<span id="cb9-6">haplo2_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo2))[np.newaxis]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## run predictions</span></span>
<span id="cb10-2">prediction1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(haplo1_enc)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb10-3">prediction2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(haplo2_enc)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"There are"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(haplotype1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> prediction1)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between haplotype1 matrices and"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(haplotype2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> prediction2)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between haplotype2 matrices."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are 0 differences between haplotype1 matrices and 0 differences between haplotype2 matrices.</code></pre>
</div>
</div>
<p>The pipeline outputs are the same!</p>
</section>
</section>
<section id="test-mouse-head-on-reference-genome" class="level2">
<h2 class="anchored" data-anchor-id="test-mouse-head-on-reference-genome">Test mouse head on reference genome</h2>
<pre><code>conda activate enformer-predict-tools

cd /Users/sabrinami/Github/shared_pipelines/enformer_pipeline

python scripts/enformer_predict.py --parameters /Users/sabrinami/Github/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/local_test_reference.json
</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/index.html</guid>
  <pubDate>Sat, 12 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Debugging Enformer predictions for eQTL genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/debugging.html</link>
  <description><![CDATA[ 




<section id="read-genotypes" class="level2">
<h2 class="anchored" data-anchor-id="read-genotypes">Read Genotypes</h2>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"></span>
<span id="cb1-4">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_147902/538256472.py:4: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000054549'</span></span>
<span id="cb3-2">gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span>
<span id="cb3-3">chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]</span>
<span id="cb3-4">tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb3-5">start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">196608</span>)</span>
<span id="cb3-6">end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">196608</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">region <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene region:"</span>, region)</span>
<span id="cb4-3">vcf_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/home/s1mi/enformer_rat_data/BrainVCFs/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.vcf.gz"</span></span>
<span id="cb4-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VCF file:"</span>, vcf_file)</span>
<span id="cb4-5">output_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/home/s1mi/enformer_rat_data/misc/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.vcf.gz"</span></span>
<span id="cb4-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output VCF:"</span>, output_file)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Gene region: 20:11922154-12315370
VCF file: /home/s1mi/enformer_rat_data/BrainVCFs/chr20.vcf.gz
Output VCF: /home/s1mi/enformer_rat_data/misc/ENSRNOG00000054549.vcf.gz</code></pre>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>bcftools view {vcf_file} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>regions {region}  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o {output_file} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Oz</span></code></pre></div>
</div>
<p>After a quick scroll through the VCF, there is too much genotype variation across the population to result in uniform Enformer predictions.</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/debugging.html</guid>
  <pubDate>Fri, 11 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing predicted vs observed gene expression for rat genes selected for variation in expression across Br population, number of eQTLs, and elastic net prediction performance</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/index.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq </span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval </span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/personalized_Br_selected_genes/predictions_2023-08-11/enformer_predictions"</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb2-4">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb2-7">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().splitlines()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_135100/534672817.py:4: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<section id="initialize-dataframes-with-observed-expression" class="level3">
<h3 class="anchored" data-anchor-id="initialize-dataframes-with-observed-expression">Initialize Dataframes with Observed Expression</h3>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">pred_vs_obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-3">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb4-4">    pred_vs_obs[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
</section>
<section id="quantify-gene-expression" class="level2">
<h2 class="anchored" data-anchor-id="quantify-gene-expression">Quantify Gene Expression</h2>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb5-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb5-5">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb5-6">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-7">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-8">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> pred_vs_obs[gene].index:</span>
<span id="cb5-10">        haplo1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb5-11">        haplo2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype2/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb5-12">        predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (haplo1[interval][()] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo2[interval][()]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb5-13">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(predictions[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">447</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb5-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb5-15">        pred_vs_obs[gene].loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span>
<span id="cb5-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_135100/1897498957.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000054549
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_predicted_vs_observed(gene):</span>
<span id="cb8-2">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[gene]</span>
<span id="cb8-3"></span>
<span id="cb8-4">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>]</span>
<span id="cb8-5">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]</span>
<span id="cb8-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb8-7">    plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-8"></span>
<span id="cb8-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb8-10">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb8-11">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb8-12">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb8-13"></span>
<span id="cb8-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb8-15">    plt.show()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb9-2">    plot_predicted_vs_observed(gene)</span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/index_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/index.html</guid>
  <pubDate>Fri, 11 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Selecting Rat genes for Enformer CAGE predictions</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-selecting-genes/selecting-well-predicted-gene-regions.html</link>
  <description><![CDATA[ 




<section id="calculate-gene-expression-variance-across-individuals" class="level2">
<h2 class="anchored" data-anchor-id="calculate-gene-expression-variance-across-individuals">Calculate gene expression variance across individuals</h2>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Read in expression data</span></span>
<span id="cb2-2">tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-3">iqn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.iqn.bed"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_238845/1386399847.py:2: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  tpm = pd.read_csv("/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed", header = 0, sep="\t",  index_col= 'gene_id')
/tmp/ipykernel_238845/1386399847.py:3: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  iqn = pd.read_csv("/home/s1mi/enformer_rat_data/Brain.rn7.expr.iqn.bed", header = 0, sep="\t",  index_col= 'gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">tpm_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].var(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-2">np.average(tpm_var)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>1003.8945129200853</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">iqn_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iqn.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].var(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-2">np.average(iqn_var)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>0.6306594759954833</code></pre>
</div>
</div>
<p>We first subset to genes in the top decile for both TPM and IQN variance.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">tpm_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm_var.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb8-2">iqn_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iqn_var.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb8-3">high_tpm_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(tpm[tpm_var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> tpm_threshold].index)</span>
<span id="cb8-4">high_iqn_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(iqn[iqn_var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> iqn_threshold].index)</span>
<span id="cb8-5">high_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> high_tpm_var_genes.intersection(high_iqn_var_genes)</span>
<span id="cb8-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(high_var_genes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes with high variance"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>167 genes with high variance</code></pre>
</div>
</div>
</section>
<section id="count-eqtls" class="level2">
<h2 class="anchored" data-anchor-id="count-eqtls">Count eQTLs</h2>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">eqtl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/Brain.rn7.cis_qtl_signif.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-2">eqtl.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th">variant_id</th>
<th data-quarto-table-cell-role="th">tss_distance</th>
<th data-quarto-table-cell-role="th">af</th>
<th data-quarto-table-cell-role="th">ma_samples</th>
<th data-quarto-table-cell-role="th">ma_count</th>
<th data-quarto-table-cell-role="th">pval_nominal</th>
<th data-quarto-table-cell-role="th">slope</th>
<th data-quarto-table-cell-role="th">slope_se</th>
<th data-quarto-table-cell-role="th">pval_nominal_threshold</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002359</td>
<td>695174</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002361</td>
<td>695176</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002408</td>
<td>695223</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002450</td>
<td>695265</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002464</td>
<td>695279</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> eqtl[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>].value_counts()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">counts.describe()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>count    11238.000000
mean      2312.935398
std       1490.079008
min          1.000000
25%       1160.250000
50%       2236.000000
75%       3277.750000
max      10799.000000
Name: gene_id, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">eqtl_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb14-2">eqtl_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts[counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> eqtl_threshold].index</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(eqtl_genes)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Index(['ENSRNOG00000031024', 'ENSRNOG00000000451', 'ENSRNOG00000032708',
       'ENSRNOG00000000455', 'ENSRNOG00000021507', 'ENSRNOG00000009389',
       'ENSRNOG00000066838', 'ENSRNOG00000000432', 'ENSRNOG00000039396',
       'ENSRNOG00000002232',
       ...
       'ENSRNOG00000016364', 'ENSRNOG00000008471', 'ENSRNOG00000043350',
       'ENSRNOG00000012337', 'ENSRNOG00000005248', 'ENSRNOG00000068325',
       'ENSRNOG00000012868', 'ENSRNOG00000068200', 'ENSRNOG00000005610',
       'ENSRNOG00000008356'],
      dtype='object', length=1124)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> high_var_genes.intersection(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(eqtl_genes))</span>
<span id="cb17-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gene_list), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"candidate genes for enformer prediction experiments"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>17 candidate genes for enformer prediction experiments</code></pre>
</div>
</div>
</section>
<section id="check-elastic-net-prediction-performance" class="level2">
<h2 class="anchored" data-anchor-id="check-elastic-net-prediction-performance">Check Elastic Net Prediction Performance</h2>
<p>Now that we have a manageable number of genes, we can individual check that these genes have sufficient prediction performance.</p>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">model_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/highestR2genes.csv"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>)</span>
<span id="cb19-2">model_genes.loc[[gene <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_genes.index]]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">genename</th>
<th data-quarto-table-cell-role="th">pred.perf.R2</th>
<th data-quarto-table-cell-role="th">n.snps.in.model</th>
<th data-quarto-table-cell-role="th">pred.perf.pval</th>
<th data-quarto-table-cell-role="th">cor</th>
<th data-quarto-table-cell-role="th">pred.perf.qval</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">gene</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000009734</td>
<td>Akr1b8</td>
<td>0.050379</td>
<td>4</td>
<td>6.577101e-04</td>
<td>0.224453</td>
<td>4.811327e-04</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000001311</td>
<td>Rab36</td>
<td>0.559618</td>
<td>2</td>
<td>6.036613e-42</td>
<td>0.748076</td>
<td>7.693936e-41</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000010079</td>
<td>Ca3</td>
<td>0.003307</td>
<td>2</td>
<td>3.884876e-01</td>
<td>0.057507</td>
<td>1.439053e-01</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000028436</td>
<td>Rprml</td>
<td>0.228241</td>
<td>3</td>
<td>2.407910e-14</td>
<td>0.477745</td>
<td>5.222104e-14</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000032908</td>
<td>Acaa1a</td>
<td>0.548779</td>
<td>2</td>
<td>9.394297e-41</td>
<td>0.740796</td>
<td>1.111821e-39</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000050647</td>
<td>Hspa1b</td>
<td>0.078443</td>
<td>6</td>
<td>1.847947e-05</td>
<td>0.280077</td>
<td>1.706734e-05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000012235</td>
<td>Ppp1r17</td>
<td>0.370200</td>
<td>2</td>
<td>2.229702e-24</td>
<td>0.608441</td>
<td>9.825564e-24</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000048258</td>
<td>Cisd2</td>
<td>0.661901</td>
<td>2</td>
<td>6.783282e-55</td>
<td>0.813573</td>
<td>2.391336e-53</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000054549</td>
<td>Lss</td>
<td>0.124023</td>
<td>3</td>
<td>4.970816e-08</td>
<td>0.352169</td>
<td>6.169430e-08</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000004430</td>
<td>Cep131</td>
<td>0.650722</td>
<td>2</td>
<td>2.657264e-53</td>
<td>0.806673</td>
<td>8.153414e-52</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>All of the genes found in the model have positive correlation. For now, we will keep all 17 genes in our list to run Enformer on.</p>
</section>
<section id="run-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="run-pipeline">Run Pipeline</h2>
<section id="write-metadata" class="level3">
<h3 class="anchored" data-anchor-id="write-metadata">Write Metadata</h3>
<p>First, write our <code>metadata/intervals.txt</code> file with the 17 genes we have narrowed down to.</p>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_intervals(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb20-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb20-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb20-4">            gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb20-5">            tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb20-6">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb20-7">            f.write(interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb21-4">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(gene_list))</span>
<span id="cb21-5">write_intervals(gene_list, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_238845/487979158.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
</div>
<p>Use all 340 individuals:</p>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>bcftools query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_rat_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Brain.rn7.vcf.gz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> metadata<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>individuals.txt</span></code></pre></div>
</div>
</section>
<section id="submit-jobs" class="level3">
<h3 class="anchored" data-anchor-id="submit-jobs">Submit Jobs</h3>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline
python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-10-selecting-genes/personalized_config.json
</code></pre>


</section>
</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-selecting-genes/selecting-well-predicted-gene-regions.html</guid>
  <pubDate>Thu, 10 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Enformer across all rn7 genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/running-enformer-across-all-rat-genes.html</link>
  <description><![CDATA[ 




<section id="collect-gene-intervals" class="level2">
<h2 class="anchored" data-anchor-id="collect-gene-intervals">Collect Gene Intervals</h2>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gene annotation</span></span>
<span id="cb2-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb2-3">annot_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_69524/1963999151.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geneSymbol</th>
<th data-quarto-table-cell-role="th">chromosome</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">strand</th>
<th data-quarto-table-cell-role="th">tss</th>
<th data-quarto-table-cell-role="th">description</th>
<th data-quarto-table-cell-role="th">hasEqtl</th>
<th data-quarto-table-cell-role="th">expr_BLA</th>
<th data-quarto-table-cell-role="th">expr_Brain</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">sqtl_BLA</th>
<th data-quarto-table-cell-role="th">sqtl_Brain</th>
<th data-quarto-table-cell-role="th">sqtl_Eye</th>
<th data-quarto-table-cell-role="th">sqtl_IL</th>
<th data-quarto-table-cell-role="th">sqtl_LHb</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc2</th>
<th data-quarto-table-cell-role="th">sqtl_OFC</th>
<th data-quarto-table-cell-role="th">sqtl_PL</th>
<th data-quarto-table-cell-role="th">sqtl_PL2</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">geneId</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000066169</td>
<td>ENSRNOG00000066169</td>
<td>1</td>
<td>36112690</td>
<td>36122387</td>
<td>-</td>
<td>36122387</td>
<td>NaN</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000070168</td>
<td>Olr56</td>
<td>1</td>
<td>157231467</td>
<td>157232417</td>
<td>+</td>
<td>157231467</td>
<td>olfactory receptor family 51 subfamily F membe...</td>
<td>True</td>
<td>False</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070901</td>
<td>Irgq</td>
<td>1</td>
<td>80123925</td>
<td>80131881</td>
<td>+</td>
<td>80123925</td>
<td>immunity-related GTPase Q</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
</tbody>
</table>

<p>3 rows × 68 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb4-2">obs_gene_expr.head()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_69524/3189498692.py:1: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv("/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed", sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">#chr</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">000789972A</th>
<th data-quarto-table-cell-role="th">0007899884</th>
<th data-quarto-table-cell-role="th">000789FF64</th>
<th data-quarto-table-cell-role="th">00079298B1</th>
<th data-quarto-table-cell-role="th">00079299B5</th>
<th data-quarto-table-cell-role="th">0007929A79</th>
<th data-quarto-table-cell-role="th">0007929B36</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">0007899761</th>
<th data-quarto-table-cell-role="th">0007899866</th>
<th data-quarto-table-cell-role="th">00078A00E6</th>
<th data-quarto-table-cell-role="th">0007929938</th>
<th data-quarto-table-cell-role="th">0007929956</th>
<th data-quarto-table-cell-role="th">00079FF7D6</th>
<th data-quarto-table-cell-role="th">0007899826</th>
<th data-quarto-table-cell-role="th">0007929917</th>
<th data-quarto-table-cell-role="th">00077E82E3</th>
<th data-quarto-table-cell-role="th">00078A18A7</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000065394</td>
<td>1</td>
<td>31563</td>
<td>31564</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065356</td>
<td>1</td>
<td>41634</td>
<td>41635</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070568</td>
<td>1</td>
<td>76833</td>
<td>76834</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.01</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065706</td>
<td>1</td>
<td>184235</td>
<td>184236</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.18</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000069644</td>
<td>1</td>
<td>272252</td>
<td>272253</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
</tbody>
</table>

<p>5 rows × 343 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">obs_gene_expr[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#chr'</span>].unique()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>array([1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 3, 4, 5, 6, 7, 8,
       9, '9', 'JACYVU010000238.1', 'JACYVU010000315.1',
       'JACYVU010000319.1', 'JACYVU010000493.1', 'JACYVU010000587.1',
       'JACYVU010000589.1', 'JACYVU010000619.1', 'JACYVU010000634.1',
       'JACYVU010000642.1', 'JACYVU010000653.1', 'JACYVU010000665.1',
       'JACYVU010000706.1', 'JACYVU010000731.1', 'JACYVU010000732.1',
       'JACYVU010000738.1', 'JACYVU010000744.1', 'JACYVU010000754.1',
       'MT', 'MU150189.1', 'MU150193.1', 'MU150196.1', 'MU150200.1',
       'MU150203.1', 'MU150220.1', 'MU150222.1', 'MU150223.1', 'X', 'Y'],
      dtype=object)</code></pre>
</div>
</div>
<p>We want to filter to genes on chromosomes 1 through 20 and X.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">keys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>]</span>
<span id="cb8-2"></span>
<span id="cb8-3">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-4">interval_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> obs_gene_expr.index:</span>
<span id="cb8-7">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-8">    chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>])</span>
<span id="cb8-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> chromosome <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> keys:</span>
<span id="cb8-10">        tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb8-11">        interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-12">        gene_list.append(gene)</span>
<span id="cb8-13">        interval_list.append(interval)</span>
<span id="cb8-14">        </span>
<span id="cb8-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb8-16">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(interval_list))</span>
<span id="cb8-17"></span>
<span id="cb8-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/genes.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb8-19">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(gene_list))</span>
<span id="cb8-20">    </span></code></pre></div>
</div>
<section id="sample-individuals" class="level3">
<h3 class="anchored" data-anchor-id="sample-individuals">Sample Individuals</h3>
<p>We “randomly” sampled three rats until we had a set that had at least some variety in color and sex.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">rat_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.RatGTEx_rats.tsv"</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rat_id"</span>)</span>
<span id="cb9-2">all_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.columns.tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb9-3">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(all_individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb9-4">rat_info.loc[sample]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="31">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">coatcolor</th>
<th data-quarto-table-cell-role="th">tissues</th>
<th data-quarto-table-cell-role="th">sex</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">rat_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">00079FE6B4</td>
<td>BLACKHOOD</td>
<td>Brain</td>
<td>F</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">0007899981</td>
<td>BROWNHOOD</td>
<td>Brain</td>
<td>M</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">00078A19B2</td>
<td>BROWN</td>
<td>Brain</td>
<td>M</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/individuals.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb10-2">    f.write(sample.join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span></code></pre></div>
</div>
</section>
</section>
<section id="run-enformer-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="run-enformer-pipeline">Run Enformer Pipeline</h2>
<p>Run personalized for sampled rats:</p>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline

python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/all_genes_personalized_config.json
</code></pre>
<p>Run on reference genome:</p>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline

python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/all_genes_reference_config.json</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/running-enformer-across-all-rat-genes.html</guid>
  <pubDate>Thu, 10 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Enformer across all rn7 genes (continued)</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-16-correlation-across-genes-human-and-mouse-tracks/index.html</link>
  <description><![CDATA[ 




<section id="create-list-of-regions-to-exclude" class="level2">
<h2 class="anchored" data-anchor-id="create-list-of-regions-to-exclude">Create list of regions to exclude</h2>
<p>We have successful predictions for 19,493 genes out of the 30,057 intervals supplied. We want to exclude them in the next run of the pipeline.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"></span>
<span id="cb1-3">job_log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes/predictions_2023-08-18/job_logs"</span></span>
<span id="cb1-4">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes/predictions_2023-08-16/enformer_predictions/reference_Br/haplotype0"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"></span>
<span id="cb2-2">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb2-3">predicted_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions]</span>
<span id="cb2-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>job_log_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/invalid_queries.csv"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb2-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"region</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(predicted_regions))</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-16-correlation-across-genes-human-and-mouse-tracks/index.html</guid>
  <pubDate>Thu, 10 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Debugging the issue of low variance in Enformer CAGE prediction</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks.html</link>
  <description><![CDATA[ 




<section id="setup" class="level3">
<h3 class="anchored" data-anchor-id="setup">Setup</h3>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq </span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-13">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_Br_genes/predictions_2023-08-08/enformer_predictions"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb2-2">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb2-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/rn7_genome.fasta'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"></span>
<span id="cb3-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_14448/515731113.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `Enformer`, `EnformerScoreVariantsNormalized`, `EnformerScoreVariantsPCANormalized`,</span></span>
<span id="cb5-2">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb5-5"></span>
<span id="cb5-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb5-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb5-8"></span>
<span id="cb5-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-10">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb5-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb5-12"></span>
<span id="cb5-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb5-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb5-15">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb5-16">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb5-17"></span>
<span id="cb5-18">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb5-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb5-20">      tape.watch(input_sequence)</span>
<span id="cb5-21">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb5-22">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb5-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb5-24"></span>
<span id="cb5-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb5-26">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-28"></span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsRaw:</span>
<span id="cb5-31"></span>
<span id="cb5-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb5-33">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(tfhub_url)</span>
<span id="cb5-34">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> organism</span>
<span id="cb5-35"></span>
<span id="cb5-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-37">    ref_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb5-38">    alt_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb5-39"></span>
<span id="cb5-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> alt_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ref_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-41"></span>
<span id="cb5-42"></span>
<span id="cb5-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsNormalized:</span>
<span id="cb5-44"></span>
<span id="cb5-45">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb5-46">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb5-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transforms only compatible with organism=human'</span></span>
<span id="cb5-48">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb5-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-50">      transform_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb5-51">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_pipeline.steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># StandardScaler.</span></span>
<span id="cb5-52"></span>
<span id="cb5-53">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-54">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb5-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)</span>
<span id="cb5-56"></span>
<span id="cb5-57"></span>
<span id="cb5-58"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsPCANormalized:</span>
<span id="cb5-59"></span>
<span id="cb5-60">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb5-61">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, num_top_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>):</span>
<span id="cb5-62">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb5-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-64">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb5-65">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_top_features</span>
<span id="cb5-66"></span>
<span id="cb5-67">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-68">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb5-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)[:, :<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features]</span>
<span id="cb5-70"></span>
<span id="cb5-71"></span>
<span id="cb5-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(avsec): Add feature description: Either PCX, or full names.</span></span>
<span id="cb5-73"></span>
<span id="cb5-74"></span>
<span id="cb5-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `variant_centered_sequences`</span></span>
<span id="cb5-76"></span>
<span id="cb5-77"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb5-78"></span>
<span id="cb5-79">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb5-80">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb5-81">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb5-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import pd.Interval as Interval</span></span>
<span id="cb5-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb5-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb5-85">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb5-86">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb5-87">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb5-88">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb5-89">                                    )</span>
<span id="cb5-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb5-91">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb5-92">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb5-93">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb5-94">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb5-95">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-96">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb5-98"></span>
<span id="cb5-99">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb5-101"></span>
<span id="cb5-102"></span>
<span id="cb5-103"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb5-104">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span>
<span id="cb5-105"></span>
<span id="cb5-106"></span>
<span id="cb5-107"></span>
<span id="cb5-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `plot_tracks`</span></span>
<span id="cb5-109"></span>
<span id="cb5-110"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb5-111">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-112">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb5-113">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb5-114">    ax.set_title(title)</span>
<span id="cb5-115">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-116">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb5-117">  plt.tight_layout()</span>
<span id="cb5-118"></span>
<span id="cb5-119"></span>
<span id="cb5-120">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_track(title, y, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb5-121">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height))</span>
<span id="cb5-122">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb5-123">    ax.set_title(title)</span>
<span id="cb5-124">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-125">    ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb5-126">    plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path)</span>
<span id="cb6-2"></span>
<span id="cb6-3">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> compute_tss_bin(output_window_coords_resized, tss_position, output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>, bin_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, rc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb7-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Computes the bin index of the enformer output bin containing the TSS</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Inputs:</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_window_coords_resized: Kipoiseq interval for the output window of Enformer, should already be resized to the model output window size</span></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_position: absolute location of TSS</span></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_length: Length of output window in base pairs</span></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    bin_size: Length of output bins in base pairs</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Outputs:</span></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_bin: Index of bin containing TSS</span></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb7-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb7-13">        relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(tss_position) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_window_coords_resized.start)</span>
<span id="cb7-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb7-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position)</span></span>
<span id="cb7-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(output_window_coords_resized.start)</span></span>
<span id="cb7-17">        sys.exit()</span>
<span id="cb7-18"></span>
<span id="cb7-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> output_length:</span>
<span id="cb7-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position, "appears to be out of bounds for output window: ",output_window_coords_resized)</span></span>
<span id="cb7-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> </span>
<span id="cb7-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-23">        center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> bin_length</span>
<span id="cb7-24"></span>
<span id="cb7-25">        </span>
<span id="cb7-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> rc:</span>
<span id="cb7-27">            number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin_length)</span>
<span id="cb7-28">            new_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> center</span>
<span id="cb7-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(new_center)</span></span>
<span id="cb7-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,new_center,new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(center)</span></span>
<span id="cb7-33">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,center,center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
</section>
<section id="check-reference-genome-for-peaks" class="level2">
<h2 class="anchored" data-anchor-id="check-reference-genome-for-peaks">Check reference genome for peaks</h2>
<p>We selected 7 genes based of prediction performance in elastic training, and ran Enformer on 340 individuals centered at the TSS for each gene. Since we did not see any association between predicted and observed expression, we run Enformer with the reference genome to consider their relative expression levels compared in a transcriptome-wide context.</p>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb8-2">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().splitlines()</span>
<span id="cb8-3"></span>
<span id="cb8-4">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb8-7">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-8">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>], gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>])</span>
<span id="cb8-9">    sequence_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> one_hot_encode(fasta_extractor.extract(tss.resize(SEQUENCE_LENGTH)))</span>
<span id="cb8-10">    prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(sequence_one_hot[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb8-11">    CAGE_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prediction[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb8-12">    plot_track(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene, np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> CAGE_predictions[gene]), tss.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>))</span>
<span id="cb8-13">    </span>
<span id="cb8-14">    </span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-7.png" class="img-fluid"></p>
</div>
</div>
<p>Several genes have peaks at the center of the interval, where we fixed the TSS. This indicates that Enformer is correctly identifying TSS, even if some genes don’t show peaks at the TSS.</p>
</section>
<section id="variance-across-interval" class="level2">
<h2 class="anchored" data-anchor-id="variance-across-interval">Variance across Interval</h2>
<p>We have two genes with CAGE:Brain peaks at the TSS, now we take a closer look at the predictions generated from the pipeline compared to the original usage notebook.</p>
<div class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">genes_of_interest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>]</span>
<span id="cb9-2">individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb9-3"></span>
<span id="cb9-4"></span>
<span id="cb9-5">old_predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-26/enformer_predictions"</span></span>
<span id="cb9-6">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb9-7"></span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes_of_interest:</span>
<span id="cb9-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb9-11">    predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals)</span>
<span id="cb9-12">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb9-13">    interval_obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>], gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>])</span>
<span id="cb9-14">    tss_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compute_tss_bin(interval_obj.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>])</span>
<span id="cb9-15">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb9-17">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>old_predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb9-18">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb9-19">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[tss_bins, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb9-20">        predictions[gene].loc[individual, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000020624
ENSRNOG00000058006</code></pre>
</div>
</div>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes_of_interest:</span>
<span id="cb11-2">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb11-3">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb11-4">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb11-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb11-6">        interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb11-7">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb11-8">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb11-9">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">447</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">449</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb11-10">        predictions[gene].loc[individual,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span></code></pre></div>
</div>
<div class="cell" data-execution_count="64">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes_of_interest:</span>
<span id="cb12-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb12-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old Range:"</span>, predictions[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].unique())</span>
<span id="cb12-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New Range:"</span>, predictions[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].unique())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000020624
Old Range: [4.09390497 4.09556913 4.09526396]
New Range: [6.03277731 6.03283596]
ENSRNOG00000058006
Old Range: [0.0266992  0.0266884  0.02666909]
New Range: [0.01251906 0.01252023]</code></pre>
</div>
</div>
</section>
<section id="conclusions" class="level2">
<h2 class="anchored" data-anchor-id="conclusions">Conclusions</h2>
<p>For both genes, centering enformer predictions at the TSS, rather than the start and end of genes, reduces variation in CAGE predictions. It is unclear to me why shifting the center increases CAGE values around the TSS for one gene but decreases them for the other gene. I think I should focus on picking genes with (1) more variation in observed expression, (2) CAGE peaks at the TSS, and (3) high R2 in elasticnet models, and continue centering our intervals around the start and end of our genes.</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks.html</guid>
  <pubDate>Wed, 09 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Generating plots of Enformer CAGE predictions centered at TSS</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression.html</link>
  <description><![CDATA[ 




<p>Last time, we tried to generate plots of predicted vs observed expression, but we saw very little variance in the enformer predictions, resulting in the plots showing no association between the two. I reran the enformer pipeline again but with more genes and centering intervals at gene TSS. The steps are documented <a href="https://github.com/hakyimlab/sabrina-deep-learning-in-genomics/blob/main/posts/running-enformer-on-rat-genes-at-TSS/pipeline.ipynb">here</a></p>
<p>In this notebook, I started to develop a pipeline to generate plots. We observed that only around half of genes showed tracks that peak where we’d expect in the center. In addition, there was even less variance in predicted expression across the population than when we centered intervals around the start and end of the gene.</p>
<p>Overall, it looks like centering intervals at the TSS leads worsened prediction performance because expression levels looked more uniform.</p>
<p>Tomorrow, I will calculate variance in gene expression across individuals for each gene to refine the gene selection process. Hopefully, using genes with high R2 performance in elastic net models and high variation across individuals will all us to try to capture more variance in CAGE prediction.</p>
<div class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq </span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval </span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-11"></span>
<span id="cb1-12"></span>
<span id="cb1-13">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_Br_genes/predictions_2023-08-08/enformer_predictions"</span></span></code></pre></div>
</div>
<section id="read-observed-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="read-observed-gene-expression">Read Observed Gene Expression</h3>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb2-2">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb2-5">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().splitlines()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_15456/2188858492.py:2: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">pred_vs_obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-3">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb4-4">    pred_vs_obs[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
</section>
<section id="quantify-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="quantify-gene-expression">Quantify Gene Expression</h3>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb5-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb5-5">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb5-6">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-7">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-8">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> pred_vs_obs[gene].index:</span>
<span id="cb5-10">        predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb5-11">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions[interval][()]</span>
<span id="cb5-12">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">447</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb5-13">        pred_vs_obs[gene].loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_15456/1723122919.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000001342
ENSRNOG00000020624
ENSRNOG00000058006
ENSRNOG00000060045
ENSRNOG00000047706
ENSRNOG00000029386
ENSRNOG00000011944</code></pre>
</div>
</div>
</section>
<section id="plot-tracks" class="level3">
<h3 class="anchored" data-anchor-id="plot-tracks">Plot Tracks</h3>
<p>Collect all predictions along 896 bins for CAGE:Brain track.</p>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb8-4">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-5">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb8-6">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb8-7">    gene_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb8-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(predictions_dir):</span>
<span id="cb8-9">        interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-10">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb8-11">        gene_predictions[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb8-12">    predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_predictions</span></code></pre></div>
</div>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb9-2">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb9-4">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb9-5">    ax.set_title(title)</span>
<span id="cb9-6">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-7">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb9-8">  plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_individual_tracks(gene):</span>
<span id="cb10-2">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb10-3">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb10-4">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb10-5"></span>
<span id="cb10-6">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, start, end)</span>
<span id="cb10-7">    tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb10-8">    individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(pred_vs_obs[gene].index)</span>
<span id="cb10-9">    sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb10-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample:</span>
<span id="cb10-11">        tracks[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictions[gene][individual][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb10-12">    plot_tracks(tracks, target_interval)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb11-2">    plot_individual_tracks(gene)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-9-output-7.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="57">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_predicted_vs_observed(gene):</span>
<span id="cb12-2">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[gene]</span>
<span id="cb12-3"></span>
<span id="cb12-4">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>]</span>
<span id="cb12-5">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]</span>
<span id="cb12-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb12-7">    plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb12-8"></span>
<span id="cb12-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb12-10">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb12-11">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb12-12">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb12-13"></span>
<span id="cb12-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb12-15">    plt.show()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="58">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb13-2">    plot_predicted_vs_observed(gene)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression_files/figure-html/cell-11-output-7.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/compare-CAGE-expression.html</guid>
  <pubDate>Tue, 08 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Preparing pipeline inputs for Enformer predictions centered at canonical TSS”</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/pipeline.html</link>
  <description><![CDATA[ 




<section id="write-gene-intervals" class="level3">
<h3 class="anchored" data-anchor-id="write-gene-intervals">Write Gene Intervals</h3>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3">model_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"highestR2genes.csv"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-4">model_genes.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">gene</th>
<th data-quarto-table-cell-role="th">genename</th>
<th data-quarto-table-cell-role="th">pred.perf.R2</th>
<th data-quarto-table-cell-role="th">n.snps.in.model</th>
<th data-quarto-table-cell-role="th">pred.perf.pval</th>
<th data-quarto-table-cell-role="th">cor</th>
<th data-quarto-table-cell-role="th">pred.perf.qval</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ENSRNOG00000001342</td>
<td>Wdr66</td>
<td>0.844361</td>
<td>3</td>
<td>7.502608e-93</td>
<td>0.918891</td>
<td>1.243114e-89</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>ENSRNOG00000020624</td>
<td>Acadsb</td>
<td>0.829218</td>
<td>3</td>
<td>2.602032e-88</td>
<td>0.910614</td>
<td>2.155665e-85</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>ENSRNOG00000060523</td>
<td>AABR07044362.6</td>
<td>0.820292</td>
<td>8</td>
<td>8.068512e-86</td>
<td>0.905700</td>
<td>4.456263e-83</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>ENSRNOG00000058006</td>
<td>Sncg</td>
<td>0.816705</td>
<td>6</td>
<td>7.472730e-85</td>
<td>0.903717</td>
<td>3.095408e-82</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>ENSRNOG00000060045</td>
<td>Pi4ka</td>
<td>0.815282</td>
<td>3</td>
<td>1.784460e-84</td>
<td>0.902930</td>
<td>5.913374e-82</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gene annotation</span></span>
<span id="cb2-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb2-3">annot_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_164253/1218160640.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geneSymbol</th>
<th data-quarto-table-cell-role="th">chromosome</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">strand</th>
<th data-quarto-table-cell-role="th">tss</th>
<th data-quarto-table-cell-role="th">description</th>
<th data-quarto-table-cell-role="th">hasEqtl</th>
<th data-quarto-table-cell-role="th">expr_BLA</th>
<th data-quarto-table-cell-role="th">expr_Brain</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">sqtl_BLA</th>
<th data-quarto-table-cell-role="th">sqtl_Brain</th>
<th data-quarto-table-cell-role="th">sqtl_Eye</th>
<th data-quarto-table-cell-role="th">sqtl_IL</th>
<th data-quarto-table-cell-role="th">sqtl_LHb</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc2</th>
<th data-quarto-table-cell-role="th">sqtl_OFC</th>
<th data-quarto-table-cell-role="th">sqtl_PL</th>
<th data-quarto-table-cell-role="th">sqtl_PL2</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">geneId</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000066169</td>
<td>ENSRNOG00000066169</td>
<td>1</td>
<td>36112690</td>
<td>36122387</td>
<td>-</td>
<td>36122387</td>
<td>NaN</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000070168</td>
<td>Olr56</td>
<td>1</td>
<td>157231467</td>
<td>157232417</td>
<td>+</td>
<td>157231467</td>
<td>olfactory receptor family 51 subfamily F membe...</td>
<td>True</td>
<td>False</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070901</td>
<td>Irgq</td>
<td>1</td>
<td>80123925</td>
<td>80131881</td>
<td>+</td>
<td>80123925</td>
<td>immunity-related GTPase Q</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
</tbody>
</table>

<p>3 rows × 68 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_intervals(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-4">            gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb4-5">            tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb4-6">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb4-7">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb4-8">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-9">            f.write(interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [gene <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> annot_df.index]</span>
<span id="cb5-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-3">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(gene_list))</span>
<span id="cb5-4">write_intervals(gene_list, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>)</span></code></pre></div>
</div>
</section>
<section id="write-individuals-list" class="level3">
<h3 class="anchored" data-anchor-id="write-individuals-list">Write Individuals List</h3>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>bcftools query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_rat_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Brain.rn7.vcf.gz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> metadata<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>individuals.txt</span></code></pre></div>
</div>
<p>I added these parameters to the config file: <code>/home/s1mi/Github/deep-learning-in-genomics/posts/running-enformer-on-rat-genes-at-TSS/run_on_polaris_personalized.json</code></p>
</section>
<section id="run-enformer" class="level3">
<h3 class="anchored" data-anchor-id="run-enformer">Run Enformer</h3>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline
python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/running-enformer-on-rat-genes-at-TSS/run_on_polaris_personalized.json
</code></pre>
</section>
<section id="concatenate-predictions" class="level3">
<h3 class="anchored" data-anchor-id="concatenate-predictions">Concatenate Predictions</h3>
<div class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> concatenate_predictions(predictions_dir, output_path):</span>
<span id="cb8-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_file:</span>
<span id="cb8-6">        individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb8-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb8-8">            group <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_file.create_group(individual)</span>
<span id="cb8-9"></span>
<span id="cb8-10">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(predictions_dir, individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype1"</span>)</span>
<span id="cb8-11">            filenames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>)</span>
<span id="cb8-12"></span>
<span id="cb8-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> filenames:</span>
<span id="cb8-14">                interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb8-15">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(os.path.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_file:</span>
<span id="cb8-16">                    group.create_dataset(interval, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_file[interval][()], shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"></span>
<span id="cb9-2">predictions_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Github/deep-learning-in-genomics/posts/running-enformer-on-rat-genes-at-TSS/predictions_folder/personalized_Br_genes/predictions_2023-08-08/enformer_predictions"</span></span>
<span id="cb9-3">concatenate_predictions(predictions_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Br_2023-08-08_predictions.h5"</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/pipeline.html</guid>
  <pubDate>Tue, 08 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>CAGE Brain plots for three well-predicted genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain-plots-at-TSS/index.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make sure the GPU is enabled</span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Start the colab kernel with GPU: Runtime -&gt; Change runtime type -&gt; GPU'</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>2023-08-11 15:54:08.579990: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-08-11 15:54:14.184182: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /soft/compilers/cudatoolkit/cuda-11.8.0/extras/CUPTI/lib64:/soft/compilers/cudatoolkit/cuda-11.8.0/lib64:/soft/libraries/trt/TensorRT-8.5.2.2.Linux.x86_64-gnu.cuda-11.8.cudnn8.6/lib:/soft/libraries/nccl/nccl_2.16.2-1+cuda11.8_x86_64/lib:/soft/libraries/cudnn/cudnn-11-linux-x64-v8.6.0.163/lib:/opt/cray/pe/gcc/11.2.0/snos/lib64:/opt/cray/pe/papi/6.0.0.14/lib64:/opt/cray/libfabric/1.11.0.4.125/lib64:/dbhome/db2cat/sqllib/lib64:/dbhome/db2cat/sqllib/lib64/gskit:/dbhome/db2cat/sqllib/lib32:${LD_LIBRARY_PATH}
2023-08-11 15:54:14.185125: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /soft/compilers/cudatoolkit/cuda-11.8.0/extras/CUPTI/lib64:/soft/compilers/cudatoolkit/cuda-11.8.0/lib64:/soft/libraries/trt/TensorRT-8.5.2.2.Linux.x86_64-gnu.cuda-11.8.cudnn8.6/lib:/soft/libraries/nccl/nccl_2.16.2-1+cuda11.8_x86_64/lib:/soft/libraries/cudnn/cudnn-11-linux-x64-v8.6.0.163/lib:/opt/cray/pe/gcc/11.2.0/snos/lib64:/opt/cray/pe/papi/6.0.0.14/lib64:/opt/cray/libfabric/1.11.0.4.125/lib64:/dbhome/db2cat/sqllib/lib64:/dbhome/db2cat/sqllib/lib64/gskit:/dbhome/db2cat/sqllib/lib32:${LD_LIBRARY_PATH}
2023-08-11 15:54:14.185137: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gzip</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb3-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx</span>
<span id="cb3-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl</span>
<span id="cb3-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb3-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb4-2">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb4-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/rn7_genome.fasta'</span></span>
<span id="cb4-4"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">targets_txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/calico/basenji/master/manuscripts/cross2020/targets_human.txt'</span></span>
<span id="cb5-2">df_targets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(targets_txt, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `Enformer`, `EnformerScoreVariantsNormalized`, `EnformerScoreVariantsPCANormalized`,</span></span>
<span id="cb6-2">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb6-5"></span>
<span id="cb6-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb6-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb6-8"></span>
<span id="cb6-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb6-10">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb6-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb6-12"></span>
<span id="cb6-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb6-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb6-15">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb6-16">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb6-17"></span>
<span id="cb6-18">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb6-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb6-20">      tape.watch(input_sequence)</span>
<span id="cb6-21">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb6-22">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb6-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb6-24"></span>
<span id="cb6-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb6-26">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-28"></span>
<span id="cb6-29"></span>
<span id="cb6-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsRaw:</span>
<span id="cb6-31"></span>
<span id="cb6-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb6-33">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(tfhub_url)</span>
<span id="cb6-34">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> organism</span>
<span id="cb6-35"></span>
<span id="cb6-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb6-37">    ref_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb6-38">    alt_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb6-39"></span>
<span id="cb6-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> alt_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ref_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-41"></span>
<span id="cb6-42"></span>
<span id="cb6-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsNormalized:</span>
<span id="cb6-44"></span>
<span id="cb6-45">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb6-46">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb6-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transforms only compatible with organism=human'</span></span>
<span id="cb6-48">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb6-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb6-50">      transform_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb6-51">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_pipeline.steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># StandardScaler.</span></span>
<span id="cb6-52"></span>
<span id="cb6-53">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb6-54">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb6-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)</span>
<span id="cb6-56"></span>
<span id="cb6-57"></span>
<span id="cb6-58"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsPCANormalized:</span>
<span id="cb6-59"></span>
<span id="cb6-60">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb6-61">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, num_top_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>):</span>
<span id="cb6-62">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb6-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb6-64">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb6-65">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_top_features</span>
<span id="cb6-66"></span>
<span id="cb6-67">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb6-68">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb6-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)[:, :<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features]</span>
<span id="cb6-70"></span>
<span id="cb6-71"></span>
<span id="cb6-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(avsec): Add feature description: Either PCX, or full names.</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `variant_centered_sequences`</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb7-4"></span>
<span id="cb7-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb7-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb7-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb7-8"></span>
<span id="cb7-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb7-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb7-11">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb7-12">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb7-13">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb7-14">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb7-15">                                    )</span>
<span id="cb7-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb7-17">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb7-18">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb7-19">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb7-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb7-21">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-22">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb7-24"></span>
<span id="cb7-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb7-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb7-27"></span>
<span id="cb7-28"></span>
<span id="cb7-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> variant_generator(vcf_file, gzipped<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb7-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Yields a kipoiseq.dataclasses.Variant for each row in VCF file."""</span></span>
<span id="cb7-31">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _open(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb7-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> gzip.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(vcf_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rt'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gzipped <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(vcf_file)</span>
<span id="cb7-33"></span>
<span id="cb7-34">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> _open(vcf_file) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb7-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> f:</span>
<span id="cb7-36">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> line.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#'</span>):</span>
<span id="cb7-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb7-38">      chrom, pos, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, ref, alt_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> line.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb7-39">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split ALT alleles and return individual variants as output.</span></span>
<span id="cb7-40">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> alt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> alt_list.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">','</span>):</span>
<span id="cb7-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> kipoiseq.dataclasses.Variant(chrom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chrom, pos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pos,</span>
<span id="cb7-42">                                           ref<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ref, alt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>alt, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span>
<span id="cb7-43"></span>
<span id="cb7-44"></span>
<span id="cb7-45"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb7-46">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span>
<span id="cb7-47"></span>
<span id="cb7-48"></span>
<span id="cb7-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> variant_centered_sequences(vcf_file, sequence_length, gzipped<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb7-50">                               chr_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>):</span>
<span id="cb7-51">  seq_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.extractors.VariantSeqExtractor(</span>
<span id="cb7-52">    reference_sequence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>FastaStringExtractor(fasta_file))</span>
<span id="cb7-53"></span>
<span id="cb7-54">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> variant_generator(vcf_file, gzipped<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gzipped):</span>
<span id="cb7-55">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(chr_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> variant.chrom,</span>
<span id="cb7-56">                        variant.pos, variant.pos)</span>
<span id="cb7-57">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval.resize(sequence_length)</span>
<span id="cb7-58">    center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval.center() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> interval.start</span>
<span id="cb7-59"></span>
<span id="cb7-60">    reference <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq_extractor.extract(interval, [], anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>center)</span>
<span id="cb7-61">    alternate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq_extractor.extract(interval, [variant], anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>center)</span>
<span id="cb7-62"></span>
<span id="cb7-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inputs'</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>: one_hot_encode(reference),</span>
<span id="cb7-64">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>: one_hot_encode(alternate)},</span>
<span id="cb7-65">           <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'metadata'</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chrom'</span>: chr_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> variant.chrom,</span>
<span id="cb7-66">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pos'</span>: variant.pos,</span>
<span id="cb7-67">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>: variant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb7-68">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>: variant.ref,</span>
<span id="cb7-69">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>: variant.alt}}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `plot_tracks`</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb8-4">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb8-6">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb8-7">    ax.set_title(title)</span>
<span id="cb8-8">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-9">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb8-10">  plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path)</span>
<span id="cb9-2"></span>
<span id="cb9-3">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>]</span>
<span id="cb10-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb10-3">gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene_list].iloc[:, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_102315/2838342331.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb12-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span></code></pre></div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span></span>
<span id="cb13-2">chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb13-3">start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33261476</span></span>
<span id="cb13-4">end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33293932</span></span>
<span id="cb13-5">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-26/enformer_predictions"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_annot.index:</span>
<span id="cb14-4">    chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]</span>
<span id="cb14-5">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]</span>
<span id="cb14-6">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]</span>
<span id="cb14-7">    gene_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb14-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(predictions_dir):</span>
<span id="cb14-9">        interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb14-10">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb14-11">        gene_predictions[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb14-12">    predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_predictions</span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene_annot)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                            geneSymbol chromosome      start        end  \
geneId                                                                    
ENSRNOG00000001342  ENSRNOG00000001342         12   33261476   33293932   
ENSRNOG00000020624              Acadsb          1  186188987  186230379   
ENSRNOG00000058006                Sncg         16    9700514    9705368   

                   strand        tss  
geneId                                
ENSRNOG00000001342      -   33293932  
ENSRNOG00000020624      +  186188987  
ENSRNOG00000058006      -    9705368  </code></pre>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title Plot tracks</span></span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'ENSRNOG00000001342'</span></span>
<span id="cb17-4">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33261476</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33293932</span>).resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>)</span>
<span id="cb17-5">tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb17-6">individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(predictions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>].keys())</span>
<span id="cb17-7">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb17-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample:</span>
<span id="cb17-9">    tracks[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>][individual][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb17-10">plot_tracks(tracks, target_interval)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain-plots-at-TSS/index_files/figure-html/cell-15-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>We sampled 3 rats to plot CAGE expression around ENSRNOG00000001342. The TSS is at 33293932, where we see a small peak at the edge of the plot. But the biggest peak lies somewhere in the middle of the gene, which we’ll have to investigate futher. We’ll also check the other two genes.</p>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ENSRNOG00000020624</span></span>
<span id="cb18-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr1'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">186188987</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">186230379</span>).resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>)</span>
<span id="cb18-3">tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb18-4">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb18-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample:</span>
<span id="cb18-6">    tracks[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>][individual][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb18-7">plot_tracks(tracks, target_interval)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain-plots-at-TSS/index_files/figure-html/cell-16-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>The peak at the start lines up with the TSS for ENSRNOG00000020624 (pos: 186230379). The second, smaller peak could be another TSS.</p>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ENSRNOG00000058006</span></span>
<span id="cb19-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr16'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9700514</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9705368</span>).resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>)</span>
<span id="cb19-3">tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb19-4">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(individuals, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb19-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample:</span>
<span id="cb19-6">    tracks[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>][individual][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb19-7">plot_tracks(tracks, target_interval)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain-plots-at-TSS/index_files/figure-html/cell-17-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>The TSS for ENSRNOG00000058006 is at the end (9705368), which is roughly the peak in the plot. In summary, two out of three genes have CAGE peaks where we expected at the TSS.</p>
<p>This probably means Enformer is correctly identifying TSS, and the low CAGE values around the TSS for the first gene indicate that ENSRNOG00000001342 is not expressed in brain tissue.</p>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-07-CAGE-Brain-plots-at-TSS/index.html</guid>
  <pubDate>Fri, 04 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>First attempt of comparing predicted vs observed gene expression</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-03-comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_156512/1612639889.py:5: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000060045'</span>]</span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(obs_gene_expr.loc[gene_list])</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">pred_vs_obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb3-6">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb3-7">    pred_vs_obs[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> compute_tss_bin(output_window_coords_resized, tss_position, output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>, bin_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, rc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb4-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Computes the bin index of the enformer output bin containing the TSS</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Inputs:</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_window_coords_resized: Kipoiseq interval for the output window of Enformer, should already be resized to the model output window size</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_position: absolute location of TSS</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_length: Length of output window in base pairs</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    bin_size: Length of output bins in base pairs</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Outputs:</span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_bin: Index of bin containing TSS</span></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb4-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb4-13">        relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(tss_position) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_window_coords_resized.start)</span>
<span id="cb4-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb4-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position)</span></span>
<span id="cb4-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(output_window_coords_resized.start)</span></span>
<span id="cb4-17">        sys.exit()</span>
<span id="cb4-18"></span>
<span id="cb4-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> output_length:</span>
<span id="cb4-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position, "appears to be out of bounds for output window: ",output_window_coords_resized)</span></span>
<span id="cb4-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> </span>
<span id="cb4-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-23">        center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> bin_length</span>
<span id="cb4-24"></span>
<span id="cb4-25">        </span>
<span id="cb4-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> rc:</span>
<span id="cb4-27">            number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin_length)</span>
<span id="cb4-28">            new_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> center</span>
<span id="cb4-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(new_center)</span></span>
<span id="cb4-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,new_center,new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb4-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(center)</span></span>
<span id="cb4-33">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,center,center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(annot_df.loc[gene_list])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                            geneSymbol chromosome      start        end  \
geneId                                                                    
ENSRNOG00000001342  ENSRNOG00000001342         12   33261476   33293932   
ENSRNOG00000020624              Acadsb          1  186188987  186230379   
ENSRNOG00000058006                Sncg         16    9700514    9705368   
ENSRNOG00000060045               Pi4ka         11   83609069   83724080   

                   strand        tss  \
geneId                                 
ENSRNOG00000001342      -   33293932   
ENSRNOG00000020624      +  186188987   
ENSRNOG00000058006      -    9705368   
ENSRNOG00000060045      +   83609069   

                                                     description  hasEqtl  \
geneId                                                                      
ENSRNOG00000001342     cilia and flagella associated protein 251     True   
ENSRNOG00000020624  acyl-CoA dehydrogenase, short/branched chain     True   
ENSRNOG00000058006                              synuclein, gamma     True   
ENSRNOG00000060045           phosphatidylinositol 4-kinase alpha     True   

                    expr_BLA  expr_Brain  ...  sqtl_BLA  sqtl_Brain  sqtl_Eye  \
geneId                                    ...                                   
ENSRNOG00000001342      True        True  ...     False        True     False   
ENSRNOG00000020624      True        True  ...      True        True     False   
ENSRNOG00000058006      True        True  ...     False        True     False   
ENSRNOG00000060045      True        True  ...     False       False     False   

                    sqtl_IL  sqtl_LHb  sqtl_NAcc  sqtl_NAcc2  sqtl_OFC  \
geneId                                                                   
ENSRNOG00000001342    False     False      False       False     False   
ENSRNOG00000020624    False     False      False        True     False   
ENSRNOG00000058006    False     False      False       False     False   
ENSRNOG00000060045    False     False      False       False     False   

                    sqtl_PL  sqtl_PL2  
geneId                                 
ENSRNOG00000001342    False     False  
ENSRNOG00000020624    False      True  
ENSRNOG00000058006    False     False  
ENSRNOG00000060045    False     False  

[4 rows x 68 columns]</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_156512/3990301426.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating fasta files</span></span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># same as above, really</span></span>
<span id="cb8-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb8-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb8-5">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-26/enformer_predictions"</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb8-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb8-10">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-11">    interval_obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>], gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>])</span>
<span id="cb8-12">    tss_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compute_tss_bin(interval_obj.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>])</span>
<span id="cb8-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tss_bins <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb8-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Skipping"</span>, gene)</span>
<span id="cb8-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb8-16">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> pred_vs_obs[gene].index:</span>
<span id="cb8-18">        predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb8-19">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions[interval][()]</span>
<span id="cb8-20">        extra_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  [tss_bins[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tss_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [tss_bins[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb8-21">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[tss_bins, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb8-22">        pred_vs_obs[gene].loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span>
<span id="cb8-23"></span>
<span id="cb8-24">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000001342
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
ENSRNOG00000020624
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
[5.7819533  4.290507   7.8848658  0.10634203 0.05630142]
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
ENSRNOG00000058006
[1.4247483e+01 5.7383850e-02 1.2978141e-02 9.7031957e-03 1.5117653e-02]
[1.42411528e+01 5.73353358e-02 1.29730888e-02 9.69883148e-03
 1.51052885e-02]
[1.4247483e+01 5.7383850e-02 1.2978141e-02 9.7031957e-03 1.5117653e-02]
[1.4247483e+01 5.7383850e-02 1.2978141e-02 9.7031957e-03 1.5117653e-02]
[1.4247483e+01 5.7383850e-02 1.2978141e-02 9.7031957e-03 1.5117653e-02]
ENSRNOG00000060045
Skipping ENSRNOG00000060045</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pred_vs_obs)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'ENSRNOG00000001342':            observed  predicted
000789972A     7.53   0.005984
0007899884    11.35   0.005984
000789FF64     9.33   0.005984
00079298B1     9.88   0.005984
00079299B5      9.9   0.005984
...             ...        ...
00079FF7D6     7.63   0.005984
0007899826     2.83   0.005984
0007929917     8.29   0.005984
00077E82E3    10.05   0.005985
00078A18A7     6.73   0.005984

[340 rows x 2 columns], 'ENSRNOG00000020624':            observed  predicted
000789972A    44.43   4.095569
0007899884    50.12   4.093905
000789FF64    62.47   4.095569
00079298B1    64.97   4.095569
00079299B5    57.53   4.095569
...             ...        ...
00079FF7D6     53.3   4.093905
0007899826    52.88   4.093905
0007929917    54.19   4.093905
00077E82E3    74.91   4.095569
00078A18A7     50.0   4.093905

[340 rows x 2 columns], 'ENSRNOG00000058006':            observed  predicted
000789972A    75.75   0.026688
0007899884    98.29   0.026669
000789FF64     26.2   0.026688
00079298B1    91.46   0.026688
00079299B5     34.1   0.026688
...             ...        ...
00079FF7D6    80.28   0.026669
0007899826   133.57   0.026669
0007929917    59.49   0.026669
00077E82E3    43.07   0.026669
00078A18A7    45.07   0.026669

[340 rows x 2 columns], 'ENSRNOG00000060045':            observed  predicted
000789972A    87.16        0.0
0007899884     87.5        0.0
000789FF64    94.36        0.0
00079298B1    89.63        0.0
00079299B5    87.33        0.0
...             ...        ...
00079FF7D6    94.34        0.0
0007899826    85.75        0.0
0007929917    80.93        0.0
00077E82E3    80.16        0.0
00078A18A7    79.55        0.0

[340 rows x 2 columns]}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb12-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>]</span>
<span id="cb12-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>])</span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zscore</span>
<span id="cb12-6">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>]</span>
<span id="cb12-7">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]</span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb12-9">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb12-10"></span>
<span id="cb12-11"></span>
<span id="cb12-12"></span>
<span id="cb12-13"></span>
<span id="cb12-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb12-15">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb12-16">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb12-17">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb12-18"></span>
<span id="cb12-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb12-20">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>000789972A    44.43
0007899884    50.12
000789FF64    62.47
00079298B1    64.97
00079299B5    57.53
              ...  
00079FF7D6     53.3
0007899826    52.88
0007929917    54.19
00077E82E3    74.91
00078A18A7     50.0
Name: observed, Length: 340, dtype: object</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-03-comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression_files/figure-html/cell-8-output-2.png" class="img-fluid"></p>
</div>
</div>
<section id="how-we-could-improve-plots" class="level3">
<h3 class="anchored" data-anchor-id="how-we-could-improve-plots">How we could improve plots:</h3>
<ul>
<li>Use all 340 individuals (instead of the 80 that I moved to Box before polaris shut down)</li>
<li>Rerun predictions with sequences centered at TSS (instead of gene start and end)</li>
<li>The upside is that the Enformer predictions so far agree with basic expectations:
<ul>
<li>There is variation in predicted gene expression between individuals (although slim)</li>
<li>CAGE expression peaks around TSS and tapers off</li>
</ul></li>
</ul>
</section>
<section id="extra-plots" class="level3">
<h3 class="anchored" data-anchor-id="extra-plots">Extra Plots</h3>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predixcan = '/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/data-Github/rat-genomic-analysis/PTRS-Analysis/RatXcan/Results/Br_EN__predict.txt'</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pred_gene_expr = pd.read_csv(predixcan, sep="\t", header=0, index_col='IID')</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pred_gene_expr = pred_gene_expr.loc[individuals]</span></span>
<span id="cb14-4"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="112">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pred_gene_expr[[gene]].join(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>], how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            ENSRNOG00000060045  predicted
00077E90D8            1.286916   4.095569
00078997FE            0.011189   4.095569
00079FF7D6            2.644286   4.093905
00078A1A62            0.009481   4.093905
000792A3F9            2.646413   4.093905
...                        ...        ...
00078A072C            0.009487   4.093905
000792A07E            1.288204   4.095264
000792A420            1.370338   4.093905
00078997BF            0.009408   4.093905
00077E7666            0.010847   4.095569

[80 rows x 2 columns]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gene = 'ENSRNOG00000020624'</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df = pred_vs_obs[gene]</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df = pred_gene_expr[[gene]].join(df['predicted'], how = 'inner')</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(df)</span></span>
<span id="cb17-5"></span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from scipy.stats import zscore</span></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x = zscore(df[gene])</span></span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y = zscore(df['predicted'])</span></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # Create the dot plot</span></span>
<span id="cb17-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.scatter(x, y, color='blue', marker='o', s=100)</span></span>
<span id="cb17-11"></span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>NameError: name 'pred_gene_expr' is not defined</code></pre>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>]</span>
<span id="cb19-2"></span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zscore</span>
<span id="cb19-5">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>])</span>
<span id="cb19-6">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb19-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb19-8">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb19-9"></span>
<span id="cb19-10"></span>
<span id="cb19-11"></span>
<span id="cb19-12"></span>
<span id="cb19-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb19-14">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb19-15">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb19-16">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb19-17"></span>
<span id="cb19-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb19-19">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>TypeError: loop of ufunc does not support argument 0 of type numpy.float64 which has no callable sqrt method</code></pre>
</div>
</div>
<div class="cell" data-execution_count="90">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb21-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>]</span>
<span id="cb21-3"></span>
<span id="cb21-4"></span>
<span id="cb21-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zscore</span>
<span id="cb21-6">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>])</span>
<span id="cb21-7">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb21-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb21-9">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb21-10"></span>
<span id="cb21-11"></span>
<span id="cb21-12"></span>
<span id="cb21-13"></span>
<span id="cb21-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb21-15">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb21-16">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb21-17">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb21-18"></span>
<span id="cb21-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb21-20">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-03-comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression_files/figure-html/cell-13-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-03-comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression.html</guid>
  <pubDate>Thu, 03 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Enformer pipeline on 3 well-predicted genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-26-running-enformer-on-high-R2-rat-gene-target-intervals/index.html</link>
  <description><![CDATA[ 




<section id="select-well-predicted-genes" class="level3">
<h3 class="anchored" data-anchor-id="select-well-predicted-genes">Select Well-Predicted Genes</h3>
<p>We used R2 values from <a href="https://sabrina-mi.github.io/PTRS-Rat-Analysis/Br_EN_Validation">ElasticNet training</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-26-running-enformer-on-high-R2-rat-gene-target-intervals/WellPredGenes.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Well-Predicted Genes</figcaption>
</figure>
</div>
</section>
<section id="collect-gene-intervals" class="level3">
<h3 class="anchored" data-anchor-id="collect-gene-intervals">Collect Gene Intervals</h3>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2">gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb1-3">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000060045'</span>]</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_intervals(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb1-8">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb1-9">            row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot.loc[gene]</span>
<span id="cb1-10">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-11">            f.write(interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13">write_intervals(gene_list, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>)</span>
<span id="cb1-14"></span>
<span id="cb1-15">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000001342
ENSRNOG00000020624
ENSRNOG00000058006
ENSRNOG00000060045</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_71445/1580764274.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  gene_annot = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
</div>
</section>
<section id="concatenate-h5-outputs" class="level3">
<h3 class="anchored" data-anchor-id="concatenate-h5-outputs">Concatenate h5 outputs</h3>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">predictions_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-26/enformer_predictions"</span></span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> concatenate_predictions(predictions_dir, output_path):</span>
<span id="cb5-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_file:</span>
<span id="cb5-3">        individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb5-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb5-5">            group <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_file.create_group(individual)</span>
<span id="cb5-6"></span>
<span id="cb5-7">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(predictions_dir, individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype1"</span>)</span>
<span id="cb5-8">            filenames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>)</span>
<span id="cb5-9"></span>
<span id="cb5-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> filenames:</span>
<span id="cb5-11">                interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb5-12">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(os.path.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_file:</span>
<span id="cb5-13">                    group.create_dataset(interval, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_file[interval][()], shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>))</span>
<span id="cb5-14">            </span>
<span id="cb5-15"></span>
<span id="cb5-16"></span>
<span id="cb5-17">    </span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">concatenate_predictions(predictions_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/Br_enformer_predictions.h5"</span>)</span></code></pre></div>
</div>
</section>
<section id="calculate-predicted-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="calculate-predicted-gene-expression">Calculate predicted gene expression</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> calculate_gene_expression(matrix, target_interval, tss):</span>
<span id="cb7-2">    window_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_interval.resize(SEQUENCE_LENGTH)</span>
<span id="cb7-3">    low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> window_coords.start</span>
<span id="cb7-4">    CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> matrix[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb7-5">    </span>
<span id="cb7-6">    bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">768</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)</span>
<span id="cb7-7">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> tss:</span>
<span id="cb7-9">      bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb7-10">      count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(cage_predictions)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb7-12">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb7-13">    cage_preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-07-26-running-enformer-on-high-R2-rat-gene-target-intervals/index.html</guid>
  <pubDate>Wed, 26 Jul 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Running the Enformer Pipeline locally</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-locally/run_locally.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">SCRIPTS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Github/shared_folder/enformer_pipeline/scripts/"</span> </span>
<span id="cb1-2">MODULES<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SCRIPTS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modules/"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Collecting cyvcf2
  Downloading cyvcf2-0.30.22-cp39-cp39-macosx_10_9_x86_64.whl (3.2 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.2/3.2 MB 5.3 MB/s eta 0:00:0000:0100:01
Requirement already satisfied: numpy in /Users/sabrinami/miniconda3/envs/tf/lib/python3.9/site-packages (from cyvcf2) (1.24.3)
Collecting coloredlogs (from cyvcf2)
  Using cached coloredlogs-15.0.1-py2.py3-none-any.whl (46 kB)
Requirement already satisfied: click in /Users/sabrinami/miniconda3/envs/tf/lib/python3.9/site-packages (from cyvcf2) (8.1.4)
Collecting humanfriendly&gt;=9.1 (from coloredlogs-&gt;cyvcf2)
  Downloading humanfriendly-10.0-py2.py3-none-any.whl (86 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 86.8/86.8 kB 1.4 MB/s eta 0:00:00a 0:00:01
Installing collected packages: humanfriendly, coloredlogs, cyvcf2
Successfully installed coloredlogs-15.0.1 cyvcf2-0.30.22 humanfriendly-10.0
Note: you may need to restart the kernel to use updated packages.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys, json, re</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating dataframes</span></span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##import parsl ## local runs, no parsl</span></span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> date</span>
<span id="cb3-6"></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># some locations and folders</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># whereis_script = os.path.dirname(__file__) #os.path.dirname(sys.argv[0]) # or os.path.dirname(__file__)</span></span>
<span id="cb3-10">script_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SCRIPTS</span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch_utils_path = os.path.join(script_path, 'modules')</span></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sys.path.append(batch_utils_path)</span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## MODULES should be the location of the modules</span></span>
<span id="cb3-15">sys.path.append(MODULES)</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> loggerUtils</span>
<span id="cb3-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> directives</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> enformer_predict(parameters):</span>
<span id="cb4-3"></span>
<span id="cb4-4">    params_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters</span>
<span id="cb4-5"></span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isabs(params_path):</span>
<span id="cb4-7">        params_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.abspath(params_path)</span>
<span id="cb4-8"></span>
<span id="cb4-9">    p_two <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(script_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'modules'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictUtils_two.py'</span>)</span>
<span id="cb4-10"></span>
<span id="cb4-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>params_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-12">        parameters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb4-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The rest of the script remains the same</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">        prediction_data_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_data_name'</span>]</span>
<span id="cb4-16">        prediction_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_id'</span>]</span>
<span id="cb4-17">        run_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> date.today().strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-18"></span>
<span id="cb4-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sub_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb4-20">            project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'project_dir'</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictions_folder'</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'predictions_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sub_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb4-22">            project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'project_dir'</span>], <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'predictions_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-24">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERROR - `sub_dir` argument must be a boolean, either true or false'</span>)</span>
<span id="cb4-25"></span>
<span id="cb4-26">        interval_list_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'interval_list_file'</span>]</span>
<span id="cb4-27">        predictions_log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(project_dir, parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictions_log_dir'</span>])</span>
<span id="cb4-28">        job_log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(project_dir, parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'write_log'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logdir'</span>])</span>
<span id="cb4-29">        n_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_regions"</span>]</span>
<span id="cb4-30">        batch_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'batch_regions'</span>])</span>
<span id="cb4-31">        use_parsl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'use_parsl'</span>]</span>
<span id="cb4-32">        parsl_parameters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'parsl_parameters'</span>]</span>
<span id="cb4-33">        sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence_source'</span>]</span>
<span id="cb4-34">        exclude_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exclude_regions"</span>]</span>
<span id="cb4-35">        reverse_complement <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reverse_complement"</span>]</span>
<span id="cb4-36">    </span>
<span id="cb4-37">        metadata_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'metadata_dir'</span>]</span>
<span id="cb4-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(metadata_dir):</span>
<span id="cb4-39">            os.makedirs(metadata_dir)</span>
<span id="cb4-40"></span>
<span id="cb4-41">        output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(project_dir, parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'output_dir'</span>])</span>
<span id="cb4-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(output_dir):</span>
<span id="cb4-43">            os.makedirs(output_dir)</span>
<span id="cb4-44"></span>
<span id="cb4-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_regions) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb4-46">            n_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_regions) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-48">            n_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n_regions) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(n_regions, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-49"></span>
<span id="cb4-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># personalized parameters </span></span>
<span id="cb4-51">        individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'individuals'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-52">        vcf_files_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vcf_files'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-53"></span>
<span id="cb4-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span>:</span>
<span id="cb4-55">             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use only the chromosomes that have been made available in the config file vcf params</span></span>
<span id="cb4-56">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Sequence source is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sequence_source<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. Using a reference genome + vcf files.'</span>)</span>
<span id="cb4-57">            chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(vcf_files_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'files'</span>].keys())</span>
<span id="cb4-58"></span>
<span id="cb4-59">            batch_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch_individuals"</span>]</span>
<span id="cb4-60">            n_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_individuals'</span>])</span>
<span id="cb4-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of chromosomes (if the sequence source is reference)</span></span>
<span id="cb4-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>:</span>
<span id="cb4-63">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Sequence source is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sequence_source<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. Using a reference genome.'</span>)</span>
<span id="cb4-64">            chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>)]</span>
<span id="cb4-65">            chromosomes.extend([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chrX'</span>])</span>
<span id="cb4-66"></span>
<span id="cb4-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> reverse_complement:</span>
<span id="cb4-68">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Predicting on reverse complements too'</span>)</span>
<span id="cb4-69"></span>
<span id="cb4-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # write the params_path to a config.json file in a predefined folder</span></span>
<span id="cb4-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tmp_config_data = {'params_path': params_path}</span></span>
<span id="cb4-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tmp_config_file = os.path.join(batch_utils_path, f'tmp_config_{prediction_data_name}_{prediction_id}.json')</span></span>
<span id="cb4-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with open(tmp_config_file, mode='w') as cj:</span></span>
<span id="cb4-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     json.dump(tmp_config_data, cj)</span></span>
<span id="cb4-75"></span>
<span id="cb4-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modify parsl parameters to add the working directory</span></span>
<span id="cb4-77">    parsl_parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'working_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> project_dir</span>
<span id="cb4-78"></span>
<span id="cb4-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(job_log_dir):</span>
<span id="cb4-80">        os.makedirs(job_log_dir)</span>
<span id="cb4-81"></span>
<span id="cb4-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set parsl directives</span></span>
<span id="cb4-83">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_parsl:</span>
<span id="cb4-84">        directives.parsl_directives(use_parsl, parsl_parameters)</span>
<span id="cb4-85">    </span>
<span id="cb4-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># importing this module does not work; best to execute it here</span></span>
<span id="cb4-87">    predict_utils_one <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(script_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'modules'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictUtils_one.py'</span>)</span>
<span id="cb4-88">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exec</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(predict_utils_one).read(), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>(), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>())</span>
<span id="cb4-89"></span>
<span id="cb4-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># decorate the prediction function with or without parsl</span></span>
<span id="cb4-91">    prediction_fxn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> return_prediction_function(use_parsl)</span>
<span id="cb4-92"></span>
<span id="cb4-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># determine what individuals to predict on and all that</span></span>
<span id="cb4-94">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span>:</span>
<span id="cb4-95">        </span>
<span id="cb4-96">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>):</span>
<span id="cb4-97">            id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals</span>
<span id="cb4-98">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb4-99">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'str'</span>)):</span>
<span id="cb4-100">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isfile(individuals):</span>
<span id="cb4-101">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb4-102">                    id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(individuals, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:]</span>
<span id="cb4-103">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> n_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-104">                    id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(individuals, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:(n_individuals)]</span>
<span id="cb4-105">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-106">                id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [individuals]</span>
<span id="cb4-107">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(id_list)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals to predict on'</span>)</span>
<span id="cb4-108"></span>
<span id="cb4-109">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>:</span>
<span id="cb4-110">        id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [prediction_data_name]</span>
<span id="cb4-111">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found one reference set named </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>id_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> to predict on'</span>)</span>
<span id="cb4-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'random'</span>:</span>
<span id="cb4-113">        id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [prediction_data_name]</span>
<span id="cb4-114">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Prediction will be on a randomly generated set'</span>)</span>
<span id="cb4-115"></span>
<span id="cb4-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set log files to be put in a folder and touch the log files per sample</span></span>
<span id="cb4-117">    prediction_logfiles_folder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_log_dir</span>
<span id="cb4-118">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(prediction_logfiles_folder):</span>
<span id="cb4-119">        os.makedirs(prediction_logfiles_folder)</span>
<span id="cb4-120">        </span>
<span id="cb4-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of intervals to be predicted on</span></span>
<span id="cb4-122">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(interval_list_file, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>).dropna(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#.drop_duplicates(subset=['region', 'sample', 'status', 'sequence_source'], keep='last')</span></span>
<span id="cb4-123">    list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:(n_regions)] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a list of queries</span></span>
<span id="cb4-124">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(list_of_regions)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> regions to be split into batches with at most </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>batch_regions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> regions in each batch.'</span>)</span>
<span id="cb4-125"></span>
<span id="cb4-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># filter the list of chromosomes to be compatible with the available regions</span></span>
<span id="cb4-127">    chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>([r.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> list_of_regions]))</span>
<span id="cb4-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(f'INFO - Chromosomes to predict on are: {chromosomes}')</span></span>
<span id="cb4-129"></span>
<span id="cb4-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># should some regions be excluded?</span></span>
<span id="cb4-131">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> exclude_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb4-132">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seach for the invalid_regions.csv file</span></span>
<span id="cb4-133">        exclude_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(job_log_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'invalid_queries.csv'</span>)</span>
<span id="cb4-134">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isfile(exclude_file):</span>
<span id="cb4-135">            exclude_these_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(exclude_file)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'region'</span>].tolist()</span>
<span id="cb4-136">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found regions to be excluded from the input regions.'</span>)</span>
<span id="cb4-137">            list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [l <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> list_of_regions <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> exclude_these_regions]  </span>
<span id="cb4-138">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Updated number of regions to predict on is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(list_of_regions)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-139">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-140">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - No regions to exclude yet. You either did not supply a file, this is the first run, or there are truly no regions to exclude'</span>)</span>
<span id="cb4-141">            exclude_these_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-142">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-143">        exclude_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-144">    </span>
<span id="cb4-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch the samples too</span></span>
<span id="cb4-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if you have 1000 individuals, it may be too much</span></span>
<span id="cb4-147">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(id_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:</span>
<span id="cb4-148">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> batch_individuals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb4-149">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(batch_individuals, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb4-150">                sample_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(generate_batch_n_elems(id_list, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> batch_individuals)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5 samples in each batch</span></span>
<span id="cb4-151">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - There are more than 10 individuals. Predictions will be done for every </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>batch_individuals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals.'</span>)</span>
<span id="cb4-152">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-153">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'ERROR - argument `batch_individuals` is not a str type. You supplied a </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(batch_individuals)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-154">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-155">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - You have multiple individuals/samples and have not supplied how to batch them. For efficient use of resources, use the `batch_individuals` argument.'</span>)</span>
<span id="cb4-156">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-157">        sample_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [id_list] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put the list in a list</span></span>
<span id="cb4-158">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - There seem to be just one sample i.e. </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_batches<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. No need to batch.'</span>)</span>
<span id="cb4-159"></span>
<span id="cb4-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to make this fast, pass multiple regions to one parsl app</span></span>
<span id="cb4-161">    sample_app_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-162">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sample_list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample_batches:</span>
<span id="cb4-163">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> chromosome <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chromosomes:</span>
<span id="cb4-164">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(chromosome)</span></span>
<span id="cb4-165">            chr_list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [r <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> list_of_regions <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> r.startswith(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_"</span>)]</span>
<span id="cb4-166">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span>:</span>
<span id="cb4-167">                chr_vcf_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(vcf_files_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'folder'</span>], vcf_files_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'files'</span>][chromosome])</span>
<span id="cb4-168">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>:</span>
<span id="cb4-169">                chr_vcf_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-170"></span>
<span id="cb4-171">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> chr_list_of_regions:</span>
<span id="cb4-172">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'WARNING - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> sites are not available.'</span>)</span>
<span id="cb4-173">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb4-174"></span>
<span id="cb4-175">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I want many regions to be put in a parsl app</span></span>
<span id="cb4-176">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(chr_list_of_regions) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> batch_regions:</span>
<span id="cb4-177">                region_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_batch_n_elems(chr_list_of_regions, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_regions) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch_regions total batches</span></span>
<span id="cb4-178">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-179">                region_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [chr_list_of_regions]</span>
<span id="cb4-180">            </span>
<span id="cb4-181">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-182">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> region_list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> region_batches:</span>
<span id="cb4-183">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(len(sample_list))</span></span>
<span id="cb4-184">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(f'{len(region_list)} regions in {chromosome} for {len(sample_list)} samples')</span></span>
<span id="cb4-185">                sample_app_futures.append(prediction_fxn(batch_regions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(region_list), samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sample_list), path_to_vcf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chr_vcf_file, batch_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count, script_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>script_path, output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir, prediction_logfiles_folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_logfiles_folder, sequence_source<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sequence_source, tmp_config_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params_path, p_two<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p_two))   </span>
<span id="cb4-186"></span>
<span id="cb4-187">                count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> </span>
<span id="cb4-188"></span>
<span id="cb4-189">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_parsl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb4-190">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Executing parsl futures for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_app_futures)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> parsl apps'</span>)</span>
<span id="cb4-191">        exec_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample_app_futures] </span>
<span id="cb4-192">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(sample_app_futures)</span></span>
<span id="cb4-193">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Finished predictions for all'</span>)</span>
<span id="cb4-194">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> use_parsl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb4-195">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Finished predictions for: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_app_futures<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> ...'</span>)</span>
<span id="cb4-196"></span>
<span id="cb4-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># just so I don't have to deal with having too many resources, I can request a small amount of resource</span></span>
<span id="cb4-198">    check_fxn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> return_check_function(use_parsl)</span>
<span id="cb4-199">    SUMMARY_FILE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(job_log_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.summary'</span>)</span>
<span id="cb4-200">    summary_exec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-201">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sample <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> id_list:</span>
<span id="cb4-202">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isfile(os.path.join(prediction_logfiles_folder, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_log.csv"</span>)):</span>
<span id="cb4-203">            summary_exec.append(check_fxn(sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample, predictions_folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir, log_folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_logfiles_folder, interval_list_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>interval_list_file, exclude_csv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exclude_file, sequence_source<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sequence_source))</span>
<span id="cb4-204"></span>
<span id="cb4-205">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_parsl:</span>
<span id="cb4-206">        summary_exec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> summary_exec]</span>
<span id="cb4-207">        parsl.clear() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># end parsl</span></span>
<span id="cb4-208"></span>
<span id="cb4-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#summary_exec = list(set(summary_exec))</span></span>
<span id="cb4-210">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, qr <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(summary_exec):</span>
<span id="cb4-211">        loggerUtils.write_logger(log_msg_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qr[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logtype'</span>], logfile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SUMMARY_FILE, message<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qr[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logmessage'</span>])</span>
<span id="cb4-212"></span>
<span id="cb4-213">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># regex the summary file and save the failed ones e.t.c to csv</span></span>
<span id="cb4-214">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- there is a better way to do this but for now, this will do</span></span>
<span id="cb4-215"></span>
<span id="cb4-216">    warning_pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"^\[WARNING.*For\s(\w+|\d+).*"</span></span>
<span id="cb4-217">    success_pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"^\[INFO.*For\s(\w+|\d+).*"</span></span>
<span id="cb4-218">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(SUMMARY_FILE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-219">        lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(f.readlines()))</span>
<span id="cb4-220">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(line)</span></span>
<span id="cb4-221">    warning_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [re.search(warning_pattern, l).group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lines <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> re.search(warning_pattern, l) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb4-222">    success_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [re.search(success_pattern, l).group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lines <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> re.search(success_pattern, l) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb4-223"></span>
<span id="cb4-224">    pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(warning_result))).to_csv(os.path.join(metadata_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.unsuccessful_predictions.csv'</span>), index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-225"></span>
<span id="cb4-226">    pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(success_result))).to_csv(os.path.join(metadata_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.successful_predictions.csv'</span>), index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-227"></span>
<span id="cb4-228">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># collect the successfule predictions</span></span>
<span id="cb4-229">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># successful_predictions = list(set([q['sample'] for q in summary_exec if q['logtype'] == 'INFO']))</span></span>
<span id="cb4-230">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unsuccessful_predictions = list(set([q['sample'] for q in summary_exec if q['logtype'] == 'WARNING']))</span></span>
<span id="cb4-231">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pd.DataFrame({'successful_predictions':successful_predictions}).to_csv(os.path.join(metadata_dir, f'{prediction_data_name}_{prediction_id}_{run_date}.successful_predictions.csv'), index=False, header=False)</span></span>
<span id="cb4-232">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pd.DataFrame({'unsuccessful_predictions':unsuccessful_predictions}).to_csv(os.path.join(metadata_dir, f'{prediction_data_name}_{prediction_id}_{run_date}.unsuccessful_predictions.csv'), index=False, header=False)</span></span>
<span id="cb4-233"></span>
<span id="cb4-234">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Check </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>SUMMARY_FILE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for a summary of the entire run.'</span>)</span>
<span id="cb4-235">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Check `</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metadata_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">` for successful and unsucessful predictions.'</span>)</span>
<span id="cb4-236"></span>
<span id="cb4-237">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># == After predictions are complete, a json file will be written out to help with aggregation</span></span>
<span id="cb4-238">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Writing `aggregation_config_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.json` file to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metadata_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-239">    agg_dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictions_folder'</span>: project_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer_prediction_path'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_logfiles_folder'</span>:prediction_logfiles_folder, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_data_name'</span>:prediction_data_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence_source'</span>: sequence_source, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run_date'</span>:run_date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_id'</span>:prediction_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'individuals'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'random'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> individuals, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_individuals'</span>:n_individuals <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>}</span>
<span id="cb4-240"></span>
<span id="cb4-241">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metadata_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/aggregation_config_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.json'</span>, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>)) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> wj:</span>
<span id="cb4-242">        json.dump(agg_dt, wj)</span>
<span id="cb4-243"></span>
<span id="cb4-244">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove temporatry config file</span></span>
<span id="cb4-245">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(f"INFO - Cleaning up: Removing temporary config file at {tmp_config_file}")</span></span>
<span id="cb4-246">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># os.remove(tmp_config_file)</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">enformer_predict(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run_locally.json'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>INFO - Sequence source is reference. Using a reference genome.
INFO - Found one reference set named reference_enformer_minimal to predict on
INFO - Found 2 regions to be split into batches with at most 5 regions in each batch.
INFO - No regions to exclude yet. You either did not supply a file, this is the first run, or there are truly no regions to exclude
INFO - There seem to be just one sample i.e. [['reference_enformer_minimal']]. No need to batch.
Using this config file: /Users/sabrinami/Github/shared_folder/enformer_pipeline/run_locally.json
Sample reference_enformer_minimal chr1_65419_71585 haplotype0 predictions are of the correct shape:  (896, 5313)
Sample reference_enformer_minimal chr1_65419_71585 haplotypes predictions have been saved.
Sample reference_enformer_minimal chr1_65419_71585 haplotypes predictions have been logged.
Sample reference_enformer_minimal chr1_450740_451678 haplotype0 predictions are of the correct shape:  (896, 5313)
Sample reference_enformer_minimal chr1_450740_451678 haplotypes predictions have been saved.
Sample reference_enformer_minimal chr1_450740_451678 haplotypes predictions have been logged.
[INFO] (time) to predict on batch 0 is 90.45835176800006
INFO - Finished predictions for: [[0, 0]] ...
INFO - Check /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/reference_enformer_minimal_some_regions/predictions_2023-07-24/job_logs/reference_enformer_minimal_some_regions_2023-07-24.summary for a summary of the entire run.
INFO - Check `/Users/sabrinami/Github/shared_folder/enformer_pipeline/metadata` for successful and unsucessful predictions.
INFO - Writing `aggregation_config_reference_enformer_minimal_some_regions.json` file to /Users/sabrinami/Github/shared_folder/enformer_pipeline/metadata</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>WARNING:kipoi_utils.external.related.mixins:Unrecognized fields for DataLoaderDescription: {'postprocessing'}. Available fields are {'info', 'output_schema', 'type', 'args', 'dependencies', 'writers', 'path', 'defined_as'}
WARNING:kipoi_utils.external.related.mixins:Unrecognized fields for DataLoaderDescription: {'postprocessing'}. Available fields are {'info', 'output_schema', 'type', 'args', 'dependencies', 'writers', 'path', 'defined_as'}
WARNING:kipoi_utils.external.related.mixins:Unrecognized fields for DataLoaderDescription: {'postprocessing'}. Available fields are {'info', 'output_schema', 'type', 'args', 'dependencies', 'writers', 'path', 'defined_as'}
[INFO: 07/24/2023 10:43:13 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_65419_71585]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_65419_71585]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[WARNING: 07/24/2023 10:44:42 AM] WARNING - For reference_enformer_minimal, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
WARNING:summary_log:WARNING - For reference_enformer_minimal, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb8-2">file_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/reference_enformer_minimal_some_regions/predictions_2023-07-24/enformer_predictions/reference_enformer_minimal/haplotype0/chr1_65419_71585_predictions.h5"</span></span>
<span id="cb8-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb8-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List all the groups and datasets in the file</span></span>
<span id="cb8-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Groups and Datasets in the HDF5 file:"</span>)</span>
<span id="cb8-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb8-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(name)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Groups and Datasets in the HDF5 file:
chr1_65419_71585</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb10-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 2: Access datasets and attributes within the file</span></span>
<span id="cb10-3">    dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr1_65419_71585"</span></span>
<span id="cb10-4">    dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>[dataset_name]</span>
<span id="cb10-5"></span>
<span id="cb10-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Read the entire dataset into a NumPy array</span></span>
<span id="cb10-7">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[()]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.shape)</span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(896, 5313)
[[0.5291589  0.5204935  0.57351285 ... 0.00935043 0.01473221 0.01198051]
 [0.65397567 0.6207656  0.7431343  ... 0.01434602 0.02783546 0.02128439]
 [0.5326947  0.5510576  0.767584   ... 0.01038613 0.03195343 0.0286333 ]
 ...
 [0.00713983 0.0077101  0.00634603 ... 0.00115762 0.01039891 0.00428226]
 [0.00585703 0.00676019 0.00490488 ... 0.0047263  0.0377146  0.01976843]
 [0.00355603 0.00391064 0.00305343 ... 0.00085077 0.00762693 0.00313292]]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">enformer_predict(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run_local_personalized.json'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>INFO - Sequence source is personalized. Using a reference genome + vcf files.
INFO - Found 2 individuals to predict on
INFO - Found 2 regions to be split into batches with at most 5 regions in each batch.
INFO - No regions to exclude yet. You either did not supply a file, this is the first run, or there are truly no regions to exclude
INFO - There seem to be just one sample i.e. [['HG00096', 'HG00097']]. No need to batch.
Using this config file: /Users/sabrinami/Github/shared_folder/enformer_pipeline/run_local_personalized.json
Sample HG00096 chr1_65419_71585 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_65419_71585 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_65419_71585 haplotypes predictions have been saved.
Sample HG00096 chr1_65419_71585 haplotypes predictions have been logged.
Sample HG00097 chr1_65419_71585 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_65419_71585 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_65419_71585 haplotypes predictions have been saved.
Sample HG00097 chr1_65419_71585 haplotypes predictions have been logged.
Sample HG00096 chr1_450740_451678 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_450740_451678 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_450740_451678 haplotypes predictions have been saved.
Sample HG00096 chr1_450740_451678 haplotypes predictions have been logged.
Sample HG00097 chr1_450740_451678 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_450740_451678 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_450740_451678 haplotypes predictions have been saved.
Sample HG00097 chr1_450740_451678 haplotypes predictions have been logged.
[INFO] (time) to predict on batch 0 is 1503.2652588659985
INFO - Finished predictions for: [[0, 0, 0, 0]] ...
INFO - Check /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-24/job_logs/personalized_enformer_minimal_some_regions_2023-07-24.summary for a summary of the entire run.
INFO - Check `/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline/metadata` for successful and unsucessful predictions.
INFO - Writing `aggregation_config_personalized_enformer_minimal_some_regions.json` file to /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline/metadata</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
/Users/sabrinami/Github/shared_folder/enformer_pipeline/scripts/modules/sequencesUtils.py:177: UserWarning: no intervals found for b'/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/Reference-Data/1000G/vcf_snps_only/ALL.chr1.shapeit2_integrated_SNPs_v2a_27022019.GRCh38.phased.vcf.gz' at chr1:-128105-265111
  variants_dictionary['positions'] = tuple(variant.POS for variant in cyvcf2_object(query))
[E::hts_parse_region] Coordinates must be &gt; 0
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00096, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00096, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
WARNING:summary_log:WARNING - For HG00096, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
WARNING:summary_log:WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb16-2">file_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-24/enformer_predictions/HG00096/haplotype1/chr1_65419_71585_predictions.h5"</span></span>
<span id="cb16-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb16-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List all the groups and datasets in the file</span></span>
<span id="cb16-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Groups and Datasets in the HDF5 file:"</span>)</span>
<span id="cb16-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb16-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(name)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Groups and Datasets in the HDF5 file:
chr1_65419_71585</code></pre>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb18-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 2: Access datasets and attributes within the file</span></span>
<span id="cb18-3">    dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr1_65419_71585"</span></span>
<span id="cb18-4">    dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>[dataset_name]</span>
<span id="cb18-5"></span>
<span id="cb18-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Read the entire dataset into a NumPy array</span></span>
<span id="cb18-7">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[()]</span>
<span id="cb18-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.shape)</span>
<span id="cb18-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(896, 5313)
[[0.5291589  0.5204935  0.57351285 ... 0.00935043 0.01473221 0.01198051]
 [0.65397567 0.6207656  0.7431343  ... 0.01434602 0.02783546 0.02128439]
 [0.5326947  0.5510576  0.767584   ... 0.01038613 0.03195343 0.0286333 ]
 ...
 [0.00713983 0.0077101  0.00634603 ... 0.00115762 0.01039891 0.00428226]
 [0.00585703 0.00676019 0.00490488 ... 0.0047263  0.0377146  0.01976843]
 [0.00355603 0.00391064 0.00305343 ... 0.00085077 0.00762693 0.00313292]]</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-locally/run_locally.html</guid>
  <pubDate>Tue, 25 Jul 2023 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
