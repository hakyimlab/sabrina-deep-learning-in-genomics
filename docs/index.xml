<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>deep-learning-in-genomics</title>
<link>https://sabrinami.quarto.pub/deep-learning-in-genomics/index.html</link>
<atom:link href="https://sabrinami.quarto.pub/deep-learning-in-genomics/index.xml" rel="self" type="application/rss+xml"/>
<description>Sabrina&#39;s blog for Deep Learning in Genomics course</description>
<generator>quarto-1.3.361</generator>
<lastBuildDate>Wed, 13 Sep 2023 07:00:00 GMT</lastBuildDate>
<item>
  <title>Summary plots of Enformer performance across genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index.html</link>
  <description><![CDATA[ 




<p>All rat reference predictions were calculated from Enformer runs with human output along rat reference genome.</p>
<section id="human-predicted-vs-human-observed" class="level2">
<h2 class="anchored" data-anchor-id="human-predicted-vs-human-observed">Human Predicted vs Human Observed</h2>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> stats</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearRegression</span></code></pre></div>
</div>
<div class="cell" data-execution_count="124">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">human_brain_gex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/hg38_predicted_vs_observed_expression_all_GTEx_brain_tissues.csv"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).dropna()</span>
<span id="cb2-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_brain_gex[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cortex"</span>].values</span>
<span id="cb2-3">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_brain_gex[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer"</span>].values</span></code></pre></div>
</div>
<div class="cell" data-execution_count="125">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">corr, pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.pearsonr(x, y)</span>
<span id="cb3-2">plt.scatter(x, y, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'R = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb3-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed Expression in GTEx'</span>)</span>
<span id="cb3-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Expression'</span>)</span>
<span id="cb3-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Human Reference Gene Expression in Brain Tissue"</span>)</span>
<span id="cb3-6">plt.legend()</span>
<span id="cb3-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-4-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="92">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">corr, pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.spearmanr(x, y)</span>
<span id="cb4-2">plt.scatter(stats.rankdata(x), stats.rankdata(y), s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'R = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank of Observed Expression in GTEx'</span>)</span>
<span id="cb4-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank of Predicted Expression'</span>)</span>
<span id="cb4-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Human Reference Gene Expression in Brain Tissue"</span>)</span>
<span id="cb4-6">plt.legend()</span>
<span id="cb4-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-5-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="126">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb5-2">outliers_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.zscore(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> threshold</span>
<span id="cb5-3">outliers_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.zscore(y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> threshold</span>
<span id="cb5-4">filtered_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_y]</span>
<span id="cb5-5">filtered_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_y]</span>
<span id="cb5-6">plt.scatter(filtered_x, filtered_y, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>)</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb5-9">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed in GTEx'</span>)</span>
<span id="cb5-10">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb5-11">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Human Reference Gene Expression in LCL Tissue (Outliers Removed)'</span>)</span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb5-14">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-6-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>For extra confirmation, we replicated Huang et al’s results with GEUVADIS reference gene expression in LCL tissue, and even saw improved results when we compared across all human genes.</p>
<div class="cell" data-execution_count="65">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">human_lcl_gex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/hg38_predicted_vs_observed_expression_GEUVADIS.csv"</span>,index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample data for x and y (including outliers)</span></span>
<span id="cb6-4">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_lcl_gex[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geuvadis, mean"</span>].values</span>
<span id="cb6-5">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_lcl_gex[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer, 3 bin"</span>].values</span></code></pre></div>
</div>
<div class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">corr, pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.spearmanr(x, y)</span>
<span id="cb7-2">plt.scatter(stats.rankdata(x), stats.rankdata(y), s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'R = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb7-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank of Observed Expression in GEUVADIS'</span>)</span>
<span id="cb7-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank of Predicted Expression'</span>)</span>
<span id="cb7-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Human Reference Gene Expression in LCL Tissue"</span>)</span>
<span id="cb7-6">plt.legend()</span>
<span id="cb7-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-8-output-1.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="rat-predicted-vs-rat-observed" class="level2">
<h2 class="anchored" data-anchor-id="rat-predicted-vs-rat-observed">Rat Predicted vs Rat Observed</h2>
<div class="cell" data-execution_count="127">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">rat_brain_gex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/rn7_reference_predicted_vs_observed_expression.csv"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb8-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rat_brain_gex[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>]</span>
<span id="cb8-3">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rat_brain_gex[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="128">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">corr, pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.pearsonr(x, y)</span>
<span id="cb9-2">plt.scatter(x, y, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'R = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb9-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed Expression in Br Rats'</span>)</span>
<span id="cb9-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Expression'</span>)</span>
<span id="cb9-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rat Reference Gene Expression in Brain Tissue"</span>)</span>
<span id="cb9-6">plt.legend()</span>
<span id="cb9-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-10-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="129">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">corr, pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.spearmanr(x, y)</span>
<span id="cb10-2">plt.scatter(stats.rankdata(x), stats.rankdata(y), s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'R = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb10-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank of Observed Expression in Br Rats'</span>)</span>
<span id="cb10-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank of Predicted Expression'</span>)</span>
<span id="cb10-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rat Reference Gene Expression in Brain Tissue"</span>)</span>
<span id="cb10-6">plt.legend()</span>
<span id="cb10-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-11-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="131">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb11-2">outliers_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.zscore(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> threshold</span>
<span id="cb11-3">outliers_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.zscore(y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> threshold</span>
<span id="cb11-4">filtered_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_y]</span>
<span id="cb11-5">filtered_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_y]</span>
<span id="cb11-6">plt.scatter(filtered_x, filtered_y, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>)</span>
<span id="cb11-7">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed Expression in Br Rats'</span>)</span>
<span id="cb11-8">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Expression'</span>)</span>
<span id="cb11-9">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rat Reference Gene Expression in Brain Tissue (Outliers Removed)"</span>)</span>
<span id="cb11-10">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-12-output-1.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="human-observed-vs-rat-observed" class="level2">
<h2 class="anchored" data-anchor-id="human-observed-vs-rat-observed">Human Observed vs Rat Observed</h2>
<div class="cell" data-execution_count="107">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## read rat observed gene expression data</span></span>
<span id="cb12-2">rat_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb12-3">rat_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rat_tpm.iloc[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-4">rat_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rat mean tpm"</span></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## read human gene expression data</span></span>
<span id="cb12-6">human_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-7">human_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb12-8">human_tpm.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb12-10">human_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_tpm.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-11">human_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human mean tpm"</span></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Map to human genes</span></span>
<span id="cb12-13">ortho_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7_hg38.ortholog_genes.txt"</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>)</span>
<span id="cb12-14">merged_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ortho_genes.join(rat_mean_tpm, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span>)</span>
<span id="cb12-15">merged_df.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens_homolog_ensembl_gene"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-16">expr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_df.join(human_mean_tpm).dropna()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_232432/2998070687.py:2: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  rat_tpm = pd.read_csv("/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed", sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="108">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human mean tpm"</span>].values.astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb14-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rat mean tpm"</span>].values.astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="122">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">corr, pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.pearsonr(x, y)</span>
<span id="cb15-2">plt.scatter(x, y, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'R = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb15-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed in GTEx'</span>)</span>
<span id="cb15-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed Br Rats'</span>)</span>
<span id="cb15-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Human and Rat Reference Gene Expression in Brain Tissue"</span>)</span>
<span id="cb15-6">plt.legend()</span>
<span id="cb15-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-15-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="132">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">corr, pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.spearmanr(x, y)</span>
<span id="cb16-2">plt.scatter(stats.rankdata(x), stats.rankdata(y), s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'R = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb16-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank of Observed Expression in GTEx'</span>)</span>
<span id="cb16-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank of Observed Expression in Br Rats'</span>)</span>
<span id="cb16-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Human Reference Gene Expression in Brain Tissue"</span>)</span>
<span id="cb16-6">plt.legend()</span>
<span id="cb16-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-16-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="115">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb17-2">outliers_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.zscore(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> threshold</span>
<span id="cb17-3">outliers_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.zscore(y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> threshold</span>
<span id="cb17-4">filtered_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_y]</span>
<span id="cb17-5">filtered_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>outliers_y]</span>
<span id="cb17-6">plt.scatter(filtered_x, filtered_y, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>)</span>
<span id="cb17-7">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed Br Rats'</span>)</span>
<span id="cb17-8">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed in GTEx'</span>)</span>
<span id="cb17-9">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Human and Rat Reference Gene Expression in Brain Tissue (Outliers Removed)"</span>)</span>
<span id="cb17-10">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index_files/figure-html/cell-17-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-13-all-correlation-across-genes-plots/index.html</guid>
  <pubDate>Wed, 13 Sep 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Preparing HS founder rat genotypes for Enformer pipeline</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-12-processing-HS-founder-rat-genotypes/index.html</link>
  <description><![CDATA[ 




<p>I downloaded the original VCF from TSCC to <code>/home/s1mi/enformer_rat_data/genotypes/Palmer_HS_founders_mRatBN7_2.vcf.gz</code>.</p>
<section id="convert-ncbi-refseq-id-to-chromosome-numbers" class="level3">
<h3 class="anchored" data-anchor-id="convert-ncbi-refseq-id-to-chromosome-numbers">Convert NCBI RefSeq ID to chromosome numbers</h3>
<ol type="1">
<li>Download assembly report for NCBI names to chromosome mapping</li>
</ol>
<pre><code>wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/015/227/675/GCF_015227675.2_mRatBN7.2/GCF_015227675.2_mRatBN7.2_assembly_report.txt -O /Users/sabrinami/Downloads/mRatBN7.2_assembly_report.txt</code></pre>
<ol start="2" type="1">
<li>Write chromosome annotation file for bcftools</li>
</ol>
<pre><code>grep -e '^[^#]' /Users/sabrinami/Downloads/mRatBN7.2_assembly_report.txt | awk '{ print $7, "chr" $1 }' &gt; /Users/sabrinami/Downloads/mRatBN7.2_chromosome_names.txt
</code></pre>
<p>There are extra annotations than needed, later on we will filter to chromosomes 1 through 20 and X.</p>
<ol start="3" type="1">
<li>Annotate VCF</li>
</ol>
<pre><code>cd /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data
bcftools annotate \
  --rename-chrs /Users/sabrinami/Downloads/mRatBN7.2_chromosome_names.txt \
  --threads 10 \
  -o Palmer_HS_founders_mRatBN7_annot.vcf.gz \
  -Oz Palmer_HS_founders_mRatBN7_2.vcf.gz
</code></pre>
</section>
<section id="replace-missing-genotypes-with-reference-alleles" class="level3">
<h3 class="anchored" data-anchor-id="replace-missing-genotypes-with-reference-alleles">Replace Missing Genotypes with Reference Alleles</h3>
<pre><code>gunzip Palmer_HS_founders_mRatBN7_annot.vcf.gz
sed 's/\.\/\./0\/0/g' Palmer_HS_founders_mRatBN7_annot.vcf &gt; Palmer_HS_founders_mRatBN7_no_missing.vcf
bgzip Palmer_HS_founders_mRatBN7_no_missing.vcf
bcftools index -t Palmer_HS_founders_mRatBN7_no_missing.vcf.gz
</code></pre>
</section>
<section id="filter-out-indels" class="level3">
<h3 class="anchored" data-anchor-id="filter-out-indels">Filter out Indels</h3>
<pre><code>bcftools view --types snps Palmer_HS_founders_mRatBN7_no_missing.vcf.gz -o Palmer_HS_founders_mRatBN7_snps_only.vcf.gz -Oz
bcftools index -t Palmer_HS_founders_mRatBN7_snps_only.vcf.gz</code></pre>
</section>
<section id="split-vcfs" class="level3">
<h3 class="anchored" data-anchor-id="split-vcfs">Split VCFs</h3>
<p>First by chromosome number:</p>
<pre><code>mkdir FounderVCFs
# Split VCF by chromosome
vcf_in=Palmer_HS_founders_mRatBN7_snps_only.vcf.gz

vcf_out_prefix=FounderVCFs/chr

for i in {1..20}
do
    echo "Working on chromosome ${i}..."
    bcftools view --regions chr${i} ${vcf_in} -o ${vcf_out_prefix}${i}.vcf.gz -Oz
done


# Index VCFs
for i in {1..20}
do
    echo "Indexing chromosome ${i}..."
    bcftools index -t FounderVCFs/chr${i}.vcf.gz
done</code></pre>
<p>Then separately for X chromosome:</p>
<pre><code>bcftools view ${vcf_in} --regions chrX -o ${vcf_out_prefix}X.vcf.gz -Oz
bcftools index -t FounderVCFs/chrX.vcf.gz</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-12-processing-HS-founder-rat-genotypes/index.html</guid>
  <pubDate>Tue, 12 Sep 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Test run of personalized Enformer on HS rats</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-12-test-run-on-HS-founders/index.html</link>
  <description><![CDATA[ 




<section id="write-individuals-list" class="level3">
<h3 class="anchored" data-anchor-id="write-individuals-list">Write Individuals List</h3>
<pre><code>bcftools query -l /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/Palmer_HS_founders_mRatBN7_2.vcf.gz &gt; metadata/individuals.txt
</code></pre>
</section>
<section id="run-pipeline-locally" class="level3">
<h3 class="anchored" data-anchor-id="run-pipeline-locally">Run Pipeline Locally</h3>
<pre><code>conda activate enformer-predict-tools
python /Users/sabrinami/Github/enformer_epigenome_pipeline/enformer_predict.py --parameters /Users/sabrinami/Github/deep-learning-in-genomics/posts/2023-09-12-test-run-on-HS-founders/local_test_personalized.json</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-12-test-run-on-HS-founders/index.html</guid>
  <pubDate>Tue, 12 Sep 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Validating reference gene expression prediction</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-06-validating-Huang-et-al/index.html</link>
  <description><![CDATA[ 




<p>I replicated the Enformer result’s in <a href="https://www.biorxiv.org/content/10.1101/2023.06.30.547100v1">Personal transcriptome variation is poorly explained by current genomic deep learning models, Huang et al</a>. They reported a 0.57 correlation in reference prediction across all genes. They used median GEUVADIS LCL gene expression data for their comparison and quantified predicted gene expression using the average of 10 bin window around each gene’s TSS on the CAGE:B lymphoblastoid cell line track.</p>
<p>They subsetted to 3,295 genes with a significant cis-QTL, however, when I expanded the analysis to all GEUVADIS genes, I found an even higher correlation of 0.77.</p>
<section id="libraries-and-definitions" class="level3">
<h3 class="anchored" data-anchor-id="libraries-and-definitions">Libraries and Definitions</h3>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> scipy.stats</span>
<span id="cb1-6"></span>
<span id="cb1-7">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, n_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (n_bins, len(tracks))</span></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-22"></span>
<span id="cb1-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb1-24">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb1-25">    </span>
<span id="cb1-26">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-27">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb1-28">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb1-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if n_bins is odd</span></span>
<span id="cb1-30">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-31"></span>
<span id="cb1-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb1-34">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-35">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb1-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-37">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb1-38"></span>
<span id="cb1-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</div>
</section>
<section id="query-enformer-predicted-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="query-enformer-predicted-gene-expression">Query Enformer predicted gene expression</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Function to put CAGE predictions in list (in the same order as gene list by chromosome)</span></span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb2-3">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb2-5">        bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>], num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>])</span>
<span id="cb2-6">        CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].append(np.average(bins))</span></code></pre></div>
</div>
</section>
<section id="calculate-geuvadis-reference-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="calculate-geuvadis-reference-gene-expression">Calculate GEUVADIS reference gene expression</h3>
<div class="cell" data-execution_count="80">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">geuvadis_gex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lus/grand/projects/TFXcan/imlab/data/1000G/expression/GD462.GeneQuantRPKM.50FN.samplename.resk10.txt.gz"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-2">geuvadis_gex.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="80">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">TargetID</th>
<th data-quarto-table-cell-role="th">Gene_Symbol</th>
<th data-quarto-table-cell-role="th">Chr</th>
<th data-quarto-table-cell-role="th">Coord</th>
<th data-quarto-table-cell-role="th">HG00096</th>
<th data-quarto-table-cell-role="th">HG00097</th>
<th data-quarto-table-cell-role="th">HG00099</th>
<th data-quarto-table-cell-role="th">HG00100</th>
<th data-quarto-table-cell-role="th">HG00101</th>
<th data-quarto-table-cell-role="th">HG00102</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">NA20810</th>
<th data-quarto-table-cell-role="th">NA20811</th>
<th data-quarto-table-cell-role="th">NA20812</th>
<th data-quarto-table-cell-role="th">NA20813</th>
<th data-quarto-table-cell-role="th">NA20814</th>
<th data-quarto-table-cell-role="th">NA20815</th>
<th data-quarto-table-cell-role="th">NA20816</th>
<th data-quarto-table-cell-role="th">NA20819</th>
<th data-quarto-table-cell-role="th">NA20826</th>
<th data-quarto-table-cell-role="th">NA20828</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ENSG00000152931.6</td>
<td>ENSG00000152931.6</td>
<td>5</td>
<td>59783540</td>
<td>0.101858</td>
<td>0.078110</td>
<td>0.048981</td>
<td>0.118597</td>
<td>0.004035</td>
<td>0.010925</td>
<td>...</td>
<td>0.088601</td>
<td>0.240010</td>
<td>0.137175</td>
<td>0.148494</td>
<td>0.038643</td>
<td>0.088509</td>
<td>0.029204</td>
<td>0.024423</td>
<td>0.044816</td>
<td>0.139186</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>ENSG00000183696.9</td>
<td>ENSG00000183696.9</td>
<td>7</td>
<td>48128225</td>
<td>8.183805</td>
<td>5.686911</td>
<td>2.434653</td>
<td>3.830894</td>
<td>6.612288</td>
<td>4.709646</td>
<td>...</td>
<td>13.428205</td>
<td>6.094500</td>
<td>12.536000</td>
<td>2.217262</td>
<td>3.573394</td>
<td>7.583364</td>
<td>4.052882</td>
<td>1.570378</td>
<td>4.900372</td>
<td>6.737308</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>ENSG00000139269.2</td>
<td>ENSG00000139269.2</td>
<td>12</td>
<td>57846106</td>
<td>1.199910</td>
<td>1.573572</td>
<td>0.521616</td>
<td>1.447225</td>
<td>3.565791</td>
<td>1.982681</td>
<td>...</td>
<td>3.225880</td>
<td>1.996067</td>
<td>2.854923</td>
<td>2.267343</td>
<td>1.331201</td>
<td>2.187895</td>
<td>1.004250</td>
<td>3.003316</td>
<td>1.984362</td>
<td>1.684954</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>ENSG00000169129.8</td>
<td>ENSG00000169129.8</td>
<td>10</td>
<td>116164515</td>
<td>0.831940</td>
<td>0.069778</td>
<td>0.931086</td>
<td>0.620941</td>
<td>1.660668</td>
<td>0.570481</td>
<td>...</td>
<td>1.023381</td>
<td>1.127852</td>
<td>0.774409</td>
<td>1.495854</td>
<td>0.895342</td>
<td>1.513521</td>
<td>0.826377</td>
<td>1.021201</td>
<td>0.952502</td>
<td>0.740565</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>ENSG00000134602.11</td>
<td>ENSG00000134602.11</td>
<td>X</td>
<td>131157293</td>
<td>27.646422</td>
<td>24.395572</td>
<td>16.445374</td>
<td>24.806650</td>
<td>25.113349</td>
<td>19.233988</td>
<td>...</td>
<td>25.079490</td>
<td>28.725528</td>
<td>24.450520</td>
<td>27.264069</td>
<td>26.912814</td>
<td>29.509210</td>
<td>26.462331</td>
<td>25.624009</td>
<td>25.707741</td>
<td>22.824957</td>
</tr>
</tbody>
</table>

<p>5 rows × 466 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="81">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">geuvadis_gex[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TargetID'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gex[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TargetID'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb4-2">geuvadis_gex.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TargetID'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb4-4">geuvadis_mean_gex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gex.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gene_Symbol'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Chr'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Coord'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-5">geuvadis_mean_gex.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geuvadis, mean'</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate median gene expression</span></span>
<span id="cb4-7">geuvadis_median_gex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gex.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gene_Symbol'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Chr'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Coord'</span>]).median(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-8">geuvadis_median_gex.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geuvadis, median'</span></span></code></pre></div>
</div>
</section>
<section id="split-genes-by-chromosome" class="level2">
<h2 class="anchored" data-anchor-id="split-genes-by-chromosome">Split genes by chromosome</h2>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Subset annotation to GEUVADIS genes</span></span>
<span id="cb5-2">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-3">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot[hg38_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>].isin(geuvadis_gex.index)]</span>
<span id="cb5-4">gene_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>).to_dict()</span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Initialize CAGE predictions</span></span>
<span id="cb5-6">hg38_annot.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-7">chr_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"21"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"22"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>]</span>
<span id="cb5-8">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {key: [] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list}</span></code></pre></div>
</div>
</section>
<section id="query-enformer-predicted-gene-expression-1" class="level2">
<h2 class="anchored" data-anchor-id="query-enformer-predicted-gene-expression-1">Query Enformer predicted gene expression</h2>
<div class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb6-2">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb6-4">        bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>], tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>])</span>
<span id="cb6-5">        CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].append(np.average(bins))</span>
<span id="cb6-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
</div>
<section id="plot-correlation-across-genes" class="level3">
<h3 class="anchored" data-anchor-id="plot-correlation-across-genes">Plot correlation across genes</h3>
<div class="cell" data-execution_count="64">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">merged_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>: pd.DataFrame(index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list}</span>
<span id="cb7-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb7-3">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer, 3 bin'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="65">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb8-2">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].merge(geuvadis_mean_gex, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>).dropna()</span>
<span id="cb8-3">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].merge(geuvadis_median_gex, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>).dropna()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">all_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(merged_dict.values())</span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># #all_genes.to_csv("/home/s1mi/enformer_rat_data/output/hg38_predicted_vs_observed_expression_GEUVADIS.csv")</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="72">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#all_genes = pd.read_csv("/home/s1mi/enformer_rat_data/output/hg38_predicted_vs_observed_expression_GEUVADIS.csv", index_col=0)</span></span>
<span id="cb10-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson Correlation across all GEUVADIS genes, 3 bin"</span>, all_genes.corr(method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearson"</span>).iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb10-3">corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scipy.stats.spearmanr(all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geuvadis"</span>], all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer, 3 bin"</span>])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb10-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spearman Correlation across all GEUVADIS genes, 3 bin:"</span>, corr)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Pearson Correlation across all GEUVADIS genes, 3 bin 0.20215477325106418
Spearman Correlation across all GEUVADIS genes, 3 bin: 0.7688261493752583</code></pre>
</div>
</div>
<div class="cell" data-execution_count="74">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">plt.scatter(all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer, 3 bin'</span>], all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geuvadis'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb12-2">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>)</span>
<span id="cb12-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>)</span>
<span id="cb12-4">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hg38 prediction across genes"</span>)</span>
<span id="cb12-5">plt.legend()</span>
<span id="cb12-6">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-06-validating-Huang-et-al/index_files/figure-html/cell-12-output-1.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="compare-to-10-bin-window-predictions" class="level3">
<h3 class="anchored" data-anchor-id="compare-to-10-bin-window-predictions">Compare to 10 bin window predictions</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb13-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb13-3">    tic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb13-4">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].index</span>
<span id="cb13-5">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb13-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb13-7">        bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>], n_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>])</span>
<span id="cb13-8">        predictions.append(np.average(bins))</span>
<span id="cb13-9">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer, 10 bin"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions</span>
<span id="cb13-10">    toc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb13-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Querying chromosome"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes...,"</span>, toc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> tic, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seconds"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="94">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">all_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(merged_dict.values())</span>
<span id="cb14-2">all_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_genes[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geuvadis, mean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geuvadis, median"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer, 3 bin"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer, 10 bin"</span>]]</span>
<span id="cb14-3">all_genes.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/hg38_predicted_vs_observed_expression_GEUVADIS.csv"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="90">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson Correlation"</span>)</span>
<span id="cb15-2">all_genes.corr(method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearson"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Pearson Correlation</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="90">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geuvadis, mean</th>
<th data-quarto-table-cell-role="th">geuvadis, median</th>
<th data-quarto-table-cell-role="th">enformer, 3 bin</th>
<th data-quarto-table-cell-role="th">enformer, 10 bin</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">geuvadis, mean</td>
<td>1.000000</td>
<td>0.999931</td>
<td>0.202155</td>
<td>0.193256</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">geuvadis, median</td>
<td>0.999931</td>
<td>1.000000</td>
<td>0.201489</td>
<td>0.192641</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">enformer, 3 bin</td>
<td>0.202155</td>
<td>0.201489</td>
<td>1.000000</td>
<td>0.923923</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">enformer, 10 bin</td>
<td>0.193256</td>
<td>0.192641</td>
<td>0.923923</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="89">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spearman Correlation:"</span>)</span>
<span id="cb17-2">all_genes.corr(method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spearman"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Spearman Correlation:</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="89">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geuvadis, mean</th>
<th data-quarto-table-cell-role="th">geuvadis, median</th>
<th data-quarto-table-cell-role="th">enformer, 3 bin</th>
<th data-quarto-table-cell-role="th">enformer, 10 bin</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">geuvadis, mean</td>
<td>1.000000</td>
<td>0.999273</td>
<td>0.768826</td>
<td>0.759941</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">geuvadis, median</td>
<td>0.999273</td>
<td>1.000000</td>
<td>0.770554</td>
<td>0.761739</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">enformer, 3 bin</td>
<td>0.768826</td>
<td>0.770554</td>
<td>1.000000</td>
<td>0.963611</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">enformer, 10 bin</td>
<td>0.759941</td>
<td>0.761739</td>
<td>0.963611</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>The highest correlation between observed and predicted expression in the 14,585 GEUVADIS genes is 0.77, by using a 3 bin average around the TSS for predicted reference and median gene expression across GEUVADIS individuals as observed reference. This is actually better than the reported 0.57 correlation by Huang et al, but I will run the original code to triple check.</p>
</section>
<section id="original-code" class="level3">
<h3 class="anchored" data-anchor-id="original-code">Original Code</h3>
<p>I cloned <a href="https://github.com/ni-lab/personalized-expression-benchmark.git">personalized-expression-benchmark</a>.</p>
<p>The first difference I noticed in their analysis is that they subset to 3259 genes in the GEUVADIS EUR dataset found to have at least one significant cis-eQTL.</p>
</section>
<section id="original-code-1" class="level3">
<h3 class="anchored" data-anchor-id="original-code-1">Original Code</h3>
<p>My only modification was hard-coding paths and removing the fasta folder argument in <a href="https://github.com/ni-lab/personalized-expression-benchmark/blob/main/enformer/run_enformer_reference.py"><code>personalized-expression-benchmark/enformer/run_enformer_reference.py</code></a></p>
<pre><code>module load conda
conda activate ml-python
cd /home/s1mi/Github/personalized-expression-benchmark

python3 enformer/run_enformer_reference.py . data/gene_list.csv
</code></pre>
<div class="cell" data-execution_count="99">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Github/personalized-expression-benchmark/output/reference_predictions.csv"</span>)</span>
<span id="cb20-2">merged_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output.merge(geuvadis_median_gex, left_on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geneId"</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>])</span></code></pre></div>
</div>
<div class="cell" data-execution_count="102">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson Correlation:"</span>)</span>
<span id="cb21-2">merged_output.corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearson"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Pearson Correlation:</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="102">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tss3</th>
<th data-quarto-table-cell-role="th">tss10</th>
<th data-quarto-table-cell-role="th">geuvadis, median</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">tss3</td>
<td>1.000000</td>
<td>0.835206</td>
<td>0.197672</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">tss10</td>
<td>0.835206</td>
<td>1.000000</td>
<td>0.218041</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">geuvadis, median</td>
<td>0.197672</td>
<td>0.218041</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="103">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spearman Correlation:"</span>)</span>
<span id="cb23-2">merged_output.corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spearman"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Spearman Correlation:</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="103">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tss3</th>
<th data-quarto-table-cell-role="th">tss10</th>
<th data-quarto-table-cell-role="th">geuvadis, median</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">tss3</td>
<td>1.000000</td>
<td>0.893283</td>
<td>0.501058</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">tss10</td>
<td>0.893283</td>
<td>1.000000</td>
<td>0.569476</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">geuvadis, median</td>
<td>0.501058</td>
<td>0.569476</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="106">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_output.corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spearman"</span>).iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb25-2">plt.scatter(all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer, 10 bin'</span>], all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geuvadis, median'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb25-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>)</span>
<span id="cb25-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>)</span>
<span id="cb25-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hg38 prediction across genes"</span>)</span>
<span id="cb25-6">plt.legend()</span>
<span id="cb25-7">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb25-8">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-06-validating-Huang-et-al/index_files/figure-html/cell-20-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-06-validating-Huang-et-al/index.html</guid>
  <pubDate>Wed, 06 Sep 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Rerunning Enformer pipeline on missing individuals, intervals</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/debugging.html</link>
  <description><![CDATA[ 




<section id="split-by-number-missing" class="level3">
<h3 class="anchored" data-anchor-id="split-by-number-missing">Split by Number Missing</h3>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span></code></pre></div>
</div>
<div class="cell" data-execution_count="266">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/personalized_Br_selected_genes/predictions_2023-09-02/enformer_predictions"</span></span>
<span id="cb2-2">successful_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(predictions_dir):</span>
<span id="cb2-4">    n_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(os.listdir(os.path.join(predictions_dir, individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype0"</span>)))</span>
<span id="cb2-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">868</span>:</span>
<span id="cb2-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n_intervals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> successful_predictions.keys():</span>
<span id="cb2-7">            successful_predictions[n_intervals] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [individual]</span>
<span id="cb2-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb2-9">            successful_predictions[n_intervals].append(individual)</span>
<span id="cb2-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n_intervals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> successful_predictions.keys():</span>
<span id="cb2-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n individuals with"</span>, n_intervals, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predictions:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(successful_predictions[n_intervals]))</span>
<span id="cb2-12"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="257">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb3-2">    all_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().splitlines()</span></code></pre></div>
</div>
</section>
<section id="write-metadata" class="level2">
<h2 class="anchored" data-anchor-id="write-metadata">Write Metadata</h2>
<div class="cell" data-execution_count="258">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> index, n_intervals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(successful_predictions.keys()):</span>
<span id="cb4-2">    individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> successful_predictions[n_intervals]</span>
<span id="cb4-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"metadata/individuals</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>index<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-4">        f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(individuals))</span>
<span id="cb4-5">    individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-6">    files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(os.path.join(predictions_dir, individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype0"</span>))</span>
<span id="cb4-7">    intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files]</span>
<span id="cb4-8">    missing_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [interval <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> all_intervals <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> intervals]</span>
<span id="cb4-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"metadata/intervals</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>index<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-10">        f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(missing_intervals))</span></code></pre></div>
</div>
</section>
<section id="write-config-files" class="level2">
<h2 class="anchored" data-anchor-id="write-config-files">Write Config Files</h2>
<div class="cell" data-execution_count="259">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"personalized_config.json"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_json:</span>
<span id="cb5-4">    parameters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(input_json)</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> index, n_intervals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(successful_predictions.keys()):</span>
<span id="cb5-7">    parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"individuals"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/metadata/individuals</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>index<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.txt"</span></span>
<span id="cb5-8">    parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interval_list_file"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/metadata/intervals</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>index<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.txt"</span></span>
<span id="cb5-9">    parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_individuals"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(successful_predictions[n_intervals])</span>
<span id="cb5-10">    parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch_individuals"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb5-11">    parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_regions"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">868</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n_intervals</span>
<span id="cb5-12">    parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch_regions"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb5-13">    parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-09-02"</span></span>
<span id="cb5-14">    parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parsl_parameters"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walltime"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"00:30:00"</span></span>
<span id="cb5-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"personalized_config</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>index<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.json"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_json:</span>
<span id="cb5-16">        json.dump(parameters, output_json, indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
</section>
<section id="run-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="run-pipeline">Run Pipeline</h2>
<pre><code>module load conda
conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

for i in {0..2}; do
    python /home/s1mi/Github/enformer_epigenome_pipeline/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/personalized_config${i}.json &amp;
    sleep 20
done</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/debugging.html</guid>
  <pubDate>Sat, 02 Sep 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing human and rat reference gene expression</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-01-comparing-human-vs-rat-mean-expression-across-genes/index.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span></code></pre></div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## read rat observed gene expression data</span></span>
<span id="cb2-2">rat_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-3">rat_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rat_tpm.iloc[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-4">rat_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rat mean tpm"</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_145300/1109491104.py:2: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  rat_tpm = pd.read_csv("/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed", sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## read human gene expression data</span></span>
<span id="cb4-2">human_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-3">human_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb4-4">human_tpm.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb4-6">human_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_tpm.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-7">human_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human mean tpm"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">ortho_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7_hg38.ortholog_genes.txt"</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>)</span>
<span id="cb5-2">ortho_genes.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">hsapiens_homolog_ensembl_gene</th>
<th data-quarto-table-cell-role="th">external_gene_name</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000033395</td>
<td>ENSG00000174937</td>
<td>Or5m3</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000070901</td>
<td>ENSG00000167378</td>
<td>Irgq</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000031391</td>
<td>ENSG00000213892</td>
<td>Ceacam16</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000050129</td>
<td>ENSG00000164520</td>
<td>AABR07000137.1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000056886</td>
<td>ENSG00000199095</td>
<td>Mir291b</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">merged_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ortho_genes.join(rat_mean_tpm, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span>)</span>
<span id="cb6-2">merged_df.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens_homolog_ensembl_gene"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-3">expr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_df.join(human_mean_tpm)</span>
<span id="cb6-4">expr_df.corr()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="49">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">rat mean tpm</th>
<th data-quarto-table-cell-role="th">human mean tpm</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">rat mean tpm</td>
<td>1.000000</td>
<td>0.886398</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">human mean tpm</td>
<td>0.886398</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr_df.corr().iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-2">plt.scatter(expr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rat mean tpm"</span>], expr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human mean tpm"</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb7-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rat mean tpm'</span>)</span>
<span id="cb7-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human mean tpm'</span>)</span>
<span id="cb7-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation between observed human and observed rat reference gene expression'</span>)</span>
<span id="cb7-6">plt.legend()</span>
<span id="cb7-7">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-8">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-01-comparing-human-vs-rat-mean-expression-across-genes/index_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-01-comparing-human-vs-rat-mean-expression-across-genes/index.html</guid>
  <pubDate>Fri, 01 Sep 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Personalized Prediction Correlations for 868 rn7 genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index.html</link>
  <description><![CDATA[ 




<p>We ran the personalized Enformer pipeline 868 genes for high variation in Br rats and number of eQTLs. There are too many predictions to concatenate iteratively, so I wrote <a href="collect_predictions.py">collect_predictions.py</a> to parallelize in a submitted job.</p>
<p>Note: This script appends predictions to the h5 in parallel, I first initialized the h5 file with individuals list to be paired with all gene expression datasets.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/personalized_Br_selected_genes"</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, nrows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/selected_genes_mouse_and_human_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb1-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.attrs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.columns.to_list()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-10">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.color_palette(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pastel"</span>)</span></code></pre></div>
</details>
</div>
<p>After my parsl job was stuck in the queue for two days, I decided to forgo parsl and append the predictions from the login node. This took many interrupted attempts, but was sadly the better option. The non-parallelized code is below:</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#### LIBRARIES AND DEFINITIONS</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb2-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/sabrina/Br_predictions/predictions_folder/personalized_Br_selected_genes"</span></span>
<span id="cb2-6">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/predictions_2023-09-02/enformer_predictions"</span></span>
<span id="cb2-7">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-8">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#### GET LIST OF GENES</span></span>
<span id="cb2-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"gene_list.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb2-11">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.read().splitlines()</span>
<span id="cb2-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gene_list), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes with enformer predictions"</span>)</span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#### JOIN WITH ENFORMER PREDICTIONS FUNCTION</span></span>
<span id="cb2-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> collect_predictions(gene):</span>
<span id="cb2-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/selected_genes_mouse_and_human_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_file:</span>
<span id="cb2-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> output_file.keys():</span>
<span id="cb2-17">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### INITIALIZE EXPRESSION MATRIX WITH OBSERVED DATA</span></span>
<span id="cb2-18">            expr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].astype(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float32"</span>)})    </span>
<span id="cb2-19"></span>
<span id="cb2-20">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### READ PREDICTIONS</span></span>
<span id="cb2-21">            gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb2-22">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-23">            human_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-24">            mouse_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-25">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> expr_df.index:</span>
<span id="cb2-26">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype0/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_file:</span>
<span id="cb2-27">                    human_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_file[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb2-28">                    mouse_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_file[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1300</span>]</span>
<span id="cb2-29">                    human_predicted.append(np.average(human_prediction))</span>
<span id="cb2-30">                    mouse_predicted.append(np.average(mouse_prediction))</span>
<span id="cb2-31">            </span>
<span id="cb2-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### JOIN IN DATAFRAME</span></span>
<span id="cb2-33">            expr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_predicted</span>
<span id="cb2-34">            expr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mouse_predicted</span>
<span id="cb2-35">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### WRITE TO h5</span></span>
<span id="cb2-36">            output_file[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr_df</span>
<span id="cb2-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#### JOIN CONCURRENTLY ACROSS GENES</span></span>
<span id="cb2-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb2-39">    collect_predictions(gene)</span>
<span id="cb2-40"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Finished writing expression matrices for"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gene_list), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes"</span>)</span></code></pre></div>
</details>
</div>
<section id="read-processed-predictions" class="level2">
<h2 class="anchored" data-anchor-id="read-processed-predictions">Read Processed Predictions</h2>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> stats</span>
<span id="cb3-6">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/sabrina/Br_predictions/predictions_folder/personalized_Br_selected_genes"</span></span>
<span id="cb3-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"gene_list.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb3-8">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.read().splitlines()</span>
<span id="cb3-9">expr_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb3-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/selected_genes_mouse_and_human_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb3-11">    index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.attrs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index"</span>]</span>
<span id="cb3-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.keys():</span>
<span id="cb3-13">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>[gene][:]</span>
<span id="cb3-14">        expr_dict[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(matrix, index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> index, columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human predicted"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse predicted"</span>])</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="8">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">pearson_corr_by_gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>], index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_list)</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-3">    pearson_corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr_dict[gene].corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearson"</span>)</span>
<span id="cb4-4">    pearson_corr_by_gene.loc[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pearson_corr_df.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].values</span>
<span id="cb4-5">    </span>
<span id="cb4-6"></span>
<span id="cb4-7">spearman_corr_by_gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>], index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_list)</span>
<span id="cb4-8">spearman_pval_by_gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>], index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_list)</span>
<span id="cb4-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-10">    human_corr, human_pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.spearmanr(expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>], expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human predicted"</span>])</span>
<span id="cb4-11">    mouse_corr, mouse_pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.spearmanr(expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>], expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse predicted"</span>])</span>
<span id="cb4-12">    spearman_corr_by_gene.loc[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [human_corr, mouse_corr]</span>
<span id="cb4-13">    spearman_pval_by_gene.loc[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [human_pval, mouse_pval]</span></code></pre></div>
</details>
<div class="cell-output cell-output-stderr">
<pre><code>/soft/datascience/conda/2022-09-08/mconda3/lib/python3.8/site-packages/scipy/stats/_stats_py.py:4878: ConstantInputWarning: An input array is constant; the correlation coefficient is not defined.
  warnings.warn(stats.ConstantInputWarning(warn_msg))</code></pre>
</div>
</div>
<p>ENSRNOG00000053502 is the only gene with NaN correlations, so we can still plot results from 867 genes.</p>
<div class="cell" data-execution_count="37">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">pearson_corr_by_gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pearson_corr_by_gene.dropna().astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb6-2">spearman_corr_by_gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spearman_corr_by_gene.dropna().astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span></code></pre></div>
</details>
</div>
<section id="plot-genome-wide-correlations" class="level3">
<h3 class="anchored" data-anchor-id="plot-genome-wide-correlations">Plot Genome-wide Correlations</h3>
<div class="cell" data-execution_count="31">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot a histogram</span></span>
<span id="cb7-2">plt.hist(pearson_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>], bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'bins' determines the number of bins or bars</span></span>
<span id="cb7-3">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlations between Enformer human head predictions and observed expression for 868 genes'</span>)</span>
<span id="cb7-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pearson Correlations'</span>)</span>
<span id="cb7-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Frequency'</span>)</span>
<span id="cb7-6">mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(pearson_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>])</span>
<span id="cb7-7">plt.axvline(mean, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb7-8">plt.legend()</span>
<span id="cb7-9"></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the plot</span></span>
<span id="cb7-11">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="32">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot a histogram</span></span>
<span id="cb8-2">plt.hist(pearson_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>], bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'bins' determines the number of bins or bars</span></span>
<span id="cb8-3">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlations between Enformer mouse head predictions and observed expression for 868 genes'</span>)</span>
<span id="cb8-4"></span>
<span id="cb8-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pearson Correlations'</span>)</span>
<span id="cb8-6">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Frequency'</span>)</span>
<span id="cb8-7"></span>
<span id="cb8-8">mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(pearson_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>])</span>
<span id="cb8-9">plt.axvline(mean, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb8-10">plt.legend()</span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the plot</span></span>
<span id="cb8-13">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-8-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="33">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot a histogram</span></span>
<span id="cb9-2">plt.hist(spearman_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>], bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'bins' determines the number of bins or bars</span></span>
<span id="cb9-3">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlations between Enformer human head predictions and observed expression for 868 genes'</span>)</span>
<span id="cb9-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Spearman Correlations'</span>)</span>
<span id="cb9-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Frequency'</span>)</span>
<span id="cb9-6">mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(spearman_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>])</span>
<span id="cb9-7">plt.axvline(mean, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb9-8">plt.legend()</span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the plot</span></span>
<span id="cb9-10">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-9-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="35">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot a histogram</span></span>
<span id="cb10-2">plt.hist(spearman_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>], bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'bins' determines the number of bins or bars</span></span>
<span id="cb10-3">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlations between Enformer mouse head predictions and observed expression for 868 genes'</span>)</span>
<span id="cb10-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Spearman Correlations'</span>)</span>
<span id="cb10-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Frequency'</span>)</span>
<span id="cb10-6">mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(spearman_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>])</span>
<span id="cb10-7">plt.axvline(mean, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb10-8">plt.legend()</span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the plot</span></span>
<span id="cb10-10">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-10-output-1.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="compare-human-and-mouse-model-correlations" class="level3">
<h3 class="anchored" data-anchor-id="compare-human-and-mouse-model-correlations">Compare Human and Mouse Model Correlations</h3>
<div class="cell" data-execution_count="39">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit a linear regression line to the data (calculate slope)</span></span>
<span id="cb11-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spearman_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>].values</span>
<span id="cb11-3">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spearman_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>].values</span>
<span id="cb11-4">slope, intercept <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.polyfit(x, y, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the plot</span></span>
<span id="cb11-6">plt.scatter(x, y, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Genes'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb11-7">plt.plot(x, slope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Best Fit Line: y = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>slope<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">x + </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>intercept<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb11-8">plt.plot(x, x, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'One-to-One Line'</span>)</span>
<span id="cb11-9">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted vs Observed Spearman Correlations "</span>)</span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and legend</span></span>
<span id="cb11-11">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Human Head'</span>)</span>
<span id="cb11-12">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mouse Head'</span>)</span>
<span id="cb11-13">plt.legend()</span>
<span id="cb11-14"></span>
<span id="cb11-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb11-16">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-11-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="54">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">human_sign_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spearman_pval_by_gene.index[spearman_pval_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">868</span>]</span>
<span id="cb12-2">mouse_sign_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spearman_pval_by_gene.index[spearman_pval_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">868</span>]</span>
<span id="cb12-3">human_unique <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_sign_genes.difference(mouse_sign_genes)</span>
<span id="cb12-4">mouse_unique <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mouse_sign_genes.difference(human_sign_genes)</span>
<span id="cb12-5">overlap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> human_sign_genes.intersection(mouse_sign_genes)</span>
<span id="cb12-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data for the bar chart</span></span>
<span id="cb12-7">categories <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Overlap'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Unique to Human'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Unique to mouse'</span>]</span>
<span id="cb12-8">counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(overlap), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(human_unique), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(mouse_unique)]</span>
<span id="cb12-9"></span>
<span id="cb12-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the bar chart</span></span>
<span id="cb12-11">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb12-12">bars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.bar(categories, counts, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>)</span>
<span id="cb12-13">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Model'</span>)</span>
<span id="cb12-14">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Counts'</span>)</span>
<span id="cb12-15">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Genes with Significant Prediction Performance'</span>)</span>
<span id="cb12-16"></span>
<span id="cb12-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add numbers over each bar</span></span>
<span id="cb12-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bar, count <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(bars, counts):</span>
<span id="cb12-19">    plt.text(bar.get_x() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bar.get_width() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, bar.get_height() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(count), ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bottom'</span>)</span>
<span id="cb12-20"></span>
<span id="cb12-21">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-12-output-1.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="plot-predicted-vs-observed-expression" class="level3">
<h3 class="anchored" data-anchor-id="plot-predicted-vs-observed-expression">Plot Predicted vs Observed Expression</h3>
<p>First, we’ll plot the best and worst genes, and then a random sample.</p>
<div class="cell" data-execution_count="49">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_pearson_corr(gene):</span>
<span id="cb13-2">    corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pearson_corr_by_gene.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>]</span>
<span id="cb13-3">    plt.scatter(expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>], expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human predicted"</span>], marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-4"></span>
<span id="cb13-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb13-6">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb13-7">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb13-8">    plt.title(gene)</span>
<span id="cb13-9"></span>
<span id="cb13-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb13-11">    plt.legend()</span>
<span id="cb13-12">    plt.show()</span>
<span id="cb13-13"></span>
<span id="cb13-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_spearman_corr(gene):</span>
<span id="cb13-15">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>]</span>
<span id="cb13-16">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human predicted"</span>]</span>
<span id="cb13-17">    corr, pval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.spearmanr(x, y)</span>
<span id="cb13-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#plt.scatter(x, y, marker='o', color='blue', label=f"Correlation: {corr:.3f}\nP-value: {pval}")</span></span>
<span id="cb13-19">    plt.scatter(stats.rankdata(x), stats.rankdata(y), marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-20"></span>
<span id="cb13-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb13-22">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Ranks'</span>)</span>
<span id="cb13-23">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed Ranks'</span>)</span>
<span id="cb13-24">    plt.title(gene)</span>
<span id="cb13-25"></span>
<span id="cb13-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb13-27">    plt.legend()</span>
<span id="cb13-28">    plt.show()</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="50">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pearson_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>].idxmax()</span>
<span id="cb14-2">plot_pearson_corr(gene)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-14-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="46">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pearson_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>].idxmin()</span>
<span id="cb15-2">plot_pearson_corr(gene)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-15-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="51">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spearman_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>].idxmax()</span>
<span id="cb16-2">plot_spearman_corr(gene)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-16-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="52">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spearman_corr_by_gene[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"human"</span>].idxmin()</span>
<span id="cb17-2">plot_spearman_corr(gene)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-17-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="53">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">gene_sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pearson_corr_by_gene.sample(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>).index</span>
<span id="cb18-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_sample:</span>
<span id="cb18-3">    plot_pearson_corr(gene)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-18-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-18-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index_files/figure-html/cell-18-output-3.png" class="img-fluid"></p>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/index.html</guid>
  <pubDate>Fri, 01 Sep 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Investigating the various CAGE brain tissue mouse tracks</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-01-selecting-mouse-track-for-CAGE-brain-prediction/index.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## subset to all brain-specific CAGE targets</span></span>
<span id="cb2-2">targets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/calico/basenji/master/manuscripts/cross2020/targets_mouse.txt"</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-3">CAGE_targets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> targets[targets[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>].isin([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6612</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6613</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6622</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6627</span>])]</span>
<span id="cb2-4">track_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(CAGE_targets.index)</span>
<span id="cb2-5">CAGE_targets.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">index</th>
<th data-quarto-table-cell-role="th">genome</th>
<th data-quarto-table-cell-role="th">identifier</th>
<th data-quarto-table-cell-role="th">file</th>
<th data-quarto-table-cell-role="th">clip</th>
<th data-quarto-table-cell-role="th">scale</th>
<th data-quarto-table-cell-role="th">sum_stat</th>
<th data-quarto-table-cell-role="th">description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">1299</td>
<td>6612</td>
<td>1</td>
<td>CNhs10477</td>
<td>/home/drk/tillage/datasets/mouse/cage/fantom/C...</td>
<td>384</td>
<td>1</td>
<td>sum</td>
<td>CAGE:medulla oblongata, adult</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1300</td>
<td>6613</td>
<td>1</td>
<td>CNhs10478</td>
<td>/home/drk/tillage/datasets/mouse/cage/fantom/C...</td>
<td>384</td>
<td>1</td>
<td>sum</td>
<td>CAGE:hippocampus, adult</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">1309</td>
<td>6622</td>
<td>1</td>
<td>CNhs10489</td>
<td>/home/drk/tillage/datasets/mouse/cage/fantom/C...</td>
<td>384</td>
<td>1</td>
<td>sum</td>
<td>CAGE:olfactory brain, adult</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1314</td>
<td>6627</td>
<td>1</td>
<td>CNhs10494</td>
<td>/home/drk/tillage/datasets/mouse/cage/fantom/C...</td>
<td>384</td>
<td>1</td>
<td>sum</td>
<td>CAGE:cerebellum, adult</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/personalized_Br_selected_genes/predictions_2023-09-01/enformer_predictions"</span></span>
<span id="cb3-2">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb3-3">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb3-4">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb3-5">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000060185"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000022448"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000006331"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000000435"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000001336"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000016623"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000025324"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000012087"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000021663"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000012333"</span>]</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_120274/1359220184.py:3: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')
/tmp/ipykernel_120274/1359220184.py:4: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", header= 0, index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">expr_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb5-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb5-3">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb5-4">    expr_dict[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs})</span>
<span id="cb5-5">            </span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb6-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb6-3">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb6-4">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-5">    medulla_oblongata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-6">    hippocampus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-7">    olfactory_brain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-8">    cerebellum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> expr_dict[gene].index:</span>
<span id="cb6-10">        haplo0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype0/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb6-11">        predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> haplo0[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouse"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, track_indices]</span>
<span id="cb6-12">        medulla_oblongata.append(np.average(predictions[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]))</span>
<span id="cb6-13">        hippocampus.append(np.average(predictions[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span>
<span id="cb6-14">        olfactory_brain.append(np.average(predictions[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]))</span>
<span id="cb6-15">        cerebellum.append(np.average(predictions[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]))</span>
<span id="cb6-16">    expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medulla oblongata"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> medulla_oblongata</span>
<span id="cb6-17">    expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hippocampus"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hippocampus</span>
<span id="cb6-18">    expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"olfactory brain"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> olfactory_brain</span>
<span id="cb6-19">    expr_dict[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cerebellum"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cerebellum</span></code></pre></div>
</div>
<div class="cell" data-execution_count="131">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">corr_by_gene_and_track <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medulla oblongata"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hippocampus"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"olfactory brain"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cerebellum"</span>], index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_list)</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb7-4">    corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr_dict[gene].corr()</span>
<span id="cb7-5">    corr_by_gene_and_track.loc[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_numeric(corr_df.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:])</span>
<span id="cb7-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(corr_by_gene_and_track)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                   medulla oblongata hippocampus olfactory brain cerebellum
ENSRNOG00000060185          0.340841    0.339026        0.340439   0.338799
ENSRNOG00000022448          0.176105    0.183011        0.179076   0.176374
ENSRNOG00000006331          0.284351    0.326806        0.327064    0.32246
ENSRNOG00000000435          0.212012    0.233529        0.171748   0.097784
ENSRNOG00000001336          0.550703    0.540987         0.54114   0.551966
ENSRNOG00000016623          0.060619    0.170785        0.153715  -0.109455
ENSRNOG00000025324         -0.315003   -0.223645       -0.240727  -0.174633
ENSRNOG00000012087          0.285358    0.309409        0.312098   0.312001
ENSRNOG00000021663         -0.325343   -0.430207       -0.426303  -0.014811
ENSRNOG00000012333         -0.081875    0.098419        0.077553   0.038098</code></pre>
</div>
</div>
<p>Based off a row-wise look at the table, I’ve decided to use the CAGE:hippocampus mouse track as a representative of brain tissue.</p>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-09-01-selecting-mouse-track-for-CAGE-brain-prediction/index.html</guid>
  <pubDate>Fri, 01 Sep 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Running personalized Enformer pipeline on Br rats for many more genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/pipeline.html</link>
  <description><![CDATA[ 




<section id="selecting-genes" class="level2">
<h2 class="anchored" data-anchor-id="selecting-genes">Selecting Genes</h2>
<p>We are aiming for ~1,000 genes at the end of the selection process</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span></code></pre></div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-2">tpm_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].var(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-3">tpm_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm_var.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## subset of genes with high observed expression variation</span></span>
<span id="cb2-5">high_tpm_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(tpm[tpm_var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> tpm_threshold].index)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_14438/1587770446.py:1: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  tpm = pd.read_csv("/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed", header = 0, sep="\t",  index_col= 'gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">eqtl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/Brain.rn7.cis_qtl_signif.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-2">counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> eqtl[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>].value_counts()</span>
<span id="cb4-3">counts.describe()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>count    11238.000000
mean      2312.935398
std       1490.079008
min          1.000000
25%       1160.250000
50%       2236.000000
75%       3277.750000
max      10799.000000
Name: gene_id, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">eqtl_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb6-2">eqtl_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts[counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> eqtl_threshold].index</span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> high_tpm_var_genes.intersection(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(eqtl_genes))</span>
<span id="cb7-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gene_list), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"candidate genes for enformer prediction experiments"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>868 candidate genes for enformer prediction experiments</code></pre>
</div>
</div>
</section>
<section id="run-the-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="run-the-pipeline">Run the Pipeline</h2>
<section id="write-metadata" class="level3">
<h3 class="anchored" data-anchor-id="write-metadata">Write Metadata</h3>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## write intervals.txt</span></span>
<span id="cb9-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_intervals(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb9-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb9-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb9-7">            gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb9-8">            tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb9-9">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-10">            f.write(interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_14438/1105297742.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb11-2">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(gene_list))</span>
<span id="cb11-3">write_intervals(gene_list, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>)</span></code></pre></div>
</div>
</section>
<section id="submit-jobs" class="level3">
<h3 class="anchored" data-anchor-id="submit-jobs">Submit Jobs</h3>
<pre><code>module load conda
conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

python /home/s1mi/Github/enformer_epigenome_pipeline/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/personalized_config.json

</code></pre>
</section>
<section id="submit-jobs-1" class="level3">
<h3 class="anchored" data-anchor-id="submit-jobs-1">Submit Jobs</h3>
<pre><code>module load conda
conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

python /home/s1mi/Github/enformer_epigenome_pipeline/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/personalized_config.json
</code></pre>


</section>
</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-Br-personalized-prediction-on-more-genes/pipeline.html</guid>
  <pubDate>Thu, 31 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Testing the Enformer pipeline option to output both human and mouse head together</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-testing-multiple-heads-in-pipeline/index.html</link>
  <description><![CDATA[ 




<section id="personalized-test" class="level2">
<h2 class="anchored" data-anchor-id="personalized-test">Personalized Test</h2>
<p>We chose <code>ENSRNOG00000054549</code>, centered at the TSS chr20:12118762.</p>
<p>Highthroughput on polaris:</p>
<pre><code>module load conda
conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

python /home/s1mi/Github/enformer_epigenome_pipeline/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-31-testing-multiple-heads-in-pipeline/local_test_personalized.json
</code></pre>
<p>Local:</p>
<pre><code>conda activate enformer-predict-tools
python /Users/sabrinami/Github/enformer_epigenome_pipeline/enformer_predict.py --parameters /Users/sabrinami/Github/deep-learning-in-genomics/posts/2023-08-31-testing-multiple-heads-in-pipeline/local_test_personalized2.json
</code></pre>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-3">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_rat_single_gene/predictions_2023-08-31/enformer_predictions/000789972A/haplotype0/chr20_12118762_12118762_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb3-4">human_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][()]</span>
<span id="cb3-5">mouse_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mouse'</span>][()]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EnformerVCF</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb4-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/rn7_genome.fasta'</span></span>
<span id="cb4-4">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>)</span>
<span id="cb5-2">chr20_vcf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.read_vcf(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/chr20.vcf.gz"</span>)</span>
<span id="cb5-3">haplo1, haplo2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.vcf_to_seq(target_interval, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'000789972A'</span>, chr20_vcf, fasta_extractor)</span>
<span id="cb5-4">haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo1))[np.newaxis]</span>
<span id="cb5-5">haplo2_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo2))[np.newaxis]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">mean_haplo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo2_enc) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb6-2">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(mean_haplo)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(human_prediction)</span>
<span id="cb7-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[0.23258275 0.2962714  0.52013165 ... 0.19615567 1.1101408  0.25560504]
 [0.15570731 0.20205402 0.3755348  ... 0.04365927 0.24989623 0.08517855]
 [0.1536611  0.21689793 0.4510562  ... 0.05227472 0.2147567  0.08478698]
 ...
 [0.1794057  0.22463816 0.29514343 ... 0.01105995 0.02652512 0.03385386]
 [0.1694869  0.20448665 0.26207498 ... 0.01688805 0.04071837 0.06028533]
 [0.15269741 0.20196484 0.22278813 ... 0.02438667 0.03900523 0.05988767]]
[[0.23258275 0.2962714  0.52013165 ... 0.19615567 1.1101408  0.25560504]
 [0.15570731 0.20205402 0.3755348  ... 0.04365927 0.24989623 0.08517855]
 [0.1536611  0.21689793 0.4510562  ... 0.05227472 0.2147567  0.08478698]
 ...
 [0.1794057  0.22463816 0.29514343 ... 0.01105995 0.02652512 0.03385386]
 [0.1694869  0.20448665 0.26207498 ... 0.01688805 0.04071837 0.06028533]
 [0.15269741 0.20196484 0.22278813 ... 0.02438667 0.03900523 0.05988767]]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"There are"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(human_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between the human heads and"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(mouse_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mouse'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences in the mouse heads."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are 0 differences between the human heads and 0 differences in the mouse heads.</code></pre>
</div>
</div>
</section>
<section id="reference-test" class="level2">
<h2 class="anchored" data-anchor-id="reference-test">Reference Test</h2>
<pre><code>conda activate enformer-predict-tools

python /Users/sabrinami/Github/enformer_epigenome_pipeline/enformer_predict.py --parameters /Users/sabrinami/Github/deep-learning-in-genomics/posts/2023-08-31-testing-multiple-heads-in-pipeline/local_test_reference.json
</code></pre>
<section id="check-predictions" class="level3">
<h3 class="anchored" data-anchor-id="check-predictions">Check Predictions</h3>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb12-2">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/reference_enformer_rat_single_gene/predictions_2023-08-31/enformer_predictions/reference_enformer_rat/haplotype0/chr20_12118762_12118762_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb12-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq </span>
<span id="cb12-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb12-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EnformerVCF</span>
<span id="cb12-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb12-7">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/rn7_genome.fasta'</span></span>
<span id="cb12-8">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.FastaStringExtractor(fasta_file)</span>
<span id="cb12-9">human_prediction1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][()]</span>
<span id="cb12-10">mouse_prediction1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mouse'</span>][()]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb13-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>)</span>
<span id="cb13-3">sequence_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(fasta_extractor.extract(target_interval.resize(SEQUENCE_LENGTH)))</span>
<span id="cb13-4">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(sequence_one_hot[np.newaxis])</span>
<span id="cb13-5">mouse_prediction2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mouse'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb13-6">human_prediction2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"There are"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(human_prediction1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> human_prediction2)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between human predictions and"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(human_prediction1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> human_prediction2)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between mouse predictions."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are 0 differences between human predictions and 0 differences between mouse predictions.</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-31-testing-multiple-heads-in-pipeline/index.html</guid>
  <pubDate>Thu, 31 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation between Enformer CAGE:Brain predictions and mean TPM in various GTEx brain tissues</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4">brain_tissues <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amygdala"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anterior_cingulate_cortex_ba24"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caudate_basal_ganglia"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cerebellar_hemisphere"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cerebellum"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cortex"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"frontal_cortex_ba9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hippocampus"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hypothalamus"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nucleus_accumbens_basal_ganglia"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"putamen_basal_ganglia"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spinal_cord_cervical_c-1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"substantia_nigra"</span>]</span>
<span id="cb1-5">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/hg38_predicted_expression.csv"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tissue <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> brain_tissues:</span>
<span id="cb1-7">    tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://storage.googleapis.com/gtex_analysis_v8/rna_seq_data/gene_tpm/gene_tpm_2017-06-05_v8_brain_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tissue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-8">    tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb1-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># some genes are repeated (different ensembl version), remove second occurrence</span></span>
<span id="cb1-10">    tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>tpm.duplicated(subset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>], keep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'first'</span>)]</span>
<span id="cb1-11">    tpm.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb1-13">    mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-14">    mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tissue.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>)</span>
<span id="cb1-15">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.merge(mean_tpm, left_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="64">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/hg38_predicted_vs_observed_expression_all_GTEx_brain_tissues.csv"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="65">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.corr()</span>
<span id="cb3-2">corr_df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="65">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
<th data-quarto-table-cell-role="th">amygdala</th>
<th data-quarto-table-cell-role="th">anterior cingulate cortex ba24</th>
<th data-quarto-table-cell-role="th">caudate basal ganglia</th>
<th data-quarto-table-cell-role="th">cerebellar hemisphere</th>
<th data-quarto-table-cell-role="th">cerebellum</th>
<th data-quarto-table-cell-role="th">cortex</th>
<th data-quarto-table-cell-role="th">frontal cortex ba9</th>
<th data-quarto-table-cell-role="th">hippocampus</th>
<th data-quarto-table-cell-role="th">hypothalamus</th>
<th data-quarto-table-cell-role="th">nucleus accumbens basal ganglia</th>
<th data-quarto-table-cell-role="th">putamen basal ganglia</th>
<th data-quarto-table-cell-role="th">spinal cord cervical c-1</th>
<th data-quarto-table-cell-role="th">substantia nigra</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">enformer</td>
<td>1.000000</td>
<td>0.467619</td>
<td>0.537760</td>
<td>0.475759</td>
<td>0.525852</td>
<td>0.523848</td>
<td>0.539825</td>
<td>0.557909</td>
<td>0.472233</td>
<td>0.410200</td>
<td>0.487022</td>
<td>0.463762</td>
<td>0.246135</td>
<td>0.380836</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">amygdala</td>
<td>0.467619</td>
<td>1.000000</td>
<td>0.954906</td>
<td>0.932110</td>
<td>0.699623</td>
<td>0.720513</td>
<td>0.908948</td>
<td>0.896015</td>
<td>0.967708</td>
<td>0.802080</td>
<td>0.935692</td>
<td>0.934127</td>
<td>0.713773</td>
<td>0.896603</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">anterior cingulate cortex ba24</td>
<td>0.537760</td>
<td>0.954906</td>
<td>1.000000</td>
<td>0.918404</td>
<td>0.766384</td>
<td>0.779114</td>
<td>0.975494</td>
<td>0.978834</td>
<td>0.919471</td>
<td>0.763097</td>
<td>0.929791</td>
<td>0.905958</td>
<td>0.570054</td>
<td>0.783233</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">caudate basal ganglia</td>
<td>0.475759</td>
<td>0.932110</td>
<td>0.918404</td>
<td>1.000000</td>
<td>0.683751</td>
<td>0.714650</td>
<td>0.900610</td>
<td>0.880568</td>
<td>0.900796</td>
<td>0.752087</td>
<td>0.977106</td>
<td>0.989579</td>
<td>0.616714</td>
<td>0.820553</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">cerebellar hemisphere</td>
<td>0.525852</td>
<td>0.699623</td>
<td>0.766384</td>
<td>0.683751</td>
<td>1.000000</td>
<td>0.977913</td>
<td>0.759456</td>
<td>0.783059</td>
<td>0.698800</td>
<td>0.609139</td>
<td>0.725290</td>
<td>0.664395</td>
<td>0.386328</td>
<td>0.581458</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">cerebellum</td>
<td>0.523848</td>
<td>0.720513</td>
<td>0.779114</td>
<td>0.714650</td>
<td>0.977913</td>
<td>1.000000</td>
<td>0.789908</td>
<td>0.782710</td>
<td>0.717366</td>
<td>0.626874</td>
<td>0.749312</td>
<td>0.697112</td>
<td>0.410336</td>
<td>0.611442</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">cortex</td>
<td>0.539825</td>
<td>0.908948</td>
<td>0.975494</td>
<td>0.900610</td>
<td>0.759456</td>
<td>0.789908</td>
<td>1.000000</td>
<td>0.981027</td>
<td>0.887993</td>
<td>0.730072</td>
<td>0.895736</td>
<td>0.893500</td>
<td>0.538779</td>
<td>0.742445</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">frontal cortex ba9</td>
<td>0.557909</td>
<td>0.896015</td>
<td>0.978834</td>
<td>0.880568</td>
<td>0.783059</td>
<td>0.782710</td>
<td>0.981027</td>
<td>1.000000</td>
<td>0.877334</td>
<td>0.722115</td>
<td>0.884639</td>
<td>0.870592</td>
<td>0.514861</td>
<td>0.719960</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">hippocampus</td>
<td>0.472233</td>
<td>0.967708</td>
<td>0.919471</td>
<td>0.900796</td>
<td>0.698800</td>
<td>0.717366</td>
<td>0.887993</td>
<td>0.877334</td>
<td>1.000000</td>
<td>0.814058</td>
<td>0.899047</td>
<td>0.915272</td>
<td>0.812031</td>
<td>0.934632</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">hypothalamus</td>
<td>0.410200</td>
<td>0.802080</td>
<td>0.763097</td>
<td>0.752087</td>
<td>0.609139</td>
<td>0.626874</td>
<td>0.730072</td>
<td>0.722115</td>
<td>0.814058</td>
<td>1.000000</td>
<td>0.763480</td>
<td>0.745192</td>
<td>0.681446</td>
<td>0.806814</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">nucleus accumbens basal ganglia</td>
<td>0.487022</td>
<td>0.935692</td>
<td>0.929791</td>
<td>0.977106</td>
<td>0.725290</td>
<td>0.749312</td>
<td>0.895736</td>
<td>0.884639</td>
<td>0.899047</td>
<td>0.763480</td>
<td>1.000000</td>
<td>0.962463</td>
<td>0.588651</td>
<td>0.808008</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">putamen basal ganglia</td>
<td>0.463762</td>
<td>0.934127</td>
<td>0.905958</td>
<td>0.989579</td>
<td>0.664395</td>
<td>0.697112</td>
<td>0.893500</td>
<td>0.870592</td>
<td>0.915272</td>
<td>0.745192</td>
<td>0.962463</td>
<td>1.000000</td>
<td>0.655825</td>
<td>0.844448</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">spinal cord cervical c-1</td>
<td>0.246135</td>
<td>0.713773</td>
<td>0.570054</td>
<td>0.616714</td>
<td>0.386328</td>
<td>0.410336</td>
<td>0.538779</td>
<td>0.514861</td>
<td>0.812031</td>
<td>0.681446</td>
<td>0.588651</td>
<td>0.655825</td>
<td>1.000000</td>
<td>0.916613</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">substantia nigra</td>
<td>0.380836</td>
<td>0.896603</td>
<td>0.783233</td>
<td>0.820553</td>
<td>0.581458</td>
<td>0.611442</td>
<td>0.742445</td>
<td>0.719960</td>
<td>0.934632</td>
<td>0.806814</td>
<td>0.808008</td>
<td>0.844448</td>
<td>0.916613</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="71">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_predicted_vs_observed(tissue):</span>
<span id="cb4-2">    corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> corr_df.loc[tissue, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer"</span>]</span>
<span id="cb4-3">    plt.scatter(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer'</span>], df[tissue], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-4">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer'</span>)</span>
<span id="cb4-5">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span>)</span>
<span id="cb4-6">    plt.title(tissue.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>))</span>
<span id="cb4-7">    plt.legend()</span>
<span id="cb4-8">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-9">    plt.show()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="72">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tissue <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> brain_tissues:</span>
<span id="cb5-2">    plot_predicted_vs_observed(tissue.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-7.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-8.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-9.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-10.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-11.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-12.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index_files/figure-html/cell-6-output-13.png" class="img-fluid"></p>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-30-comparing-predicted-reference-expression-to-various-GTEx-brain-tissues/index.html</guid>
  <pubDate>Wed, 30 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing the predicted reference epigenome to Enformer runs centered at the TSS and ground truth</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index.html</link>
  <description><![CDATA[ 




<p>We are trying to debug low correlation values between predicted reference CAGE values and reference observed gene expression by inspecting a few genes.</p>
<section id="select-genes" class="level2">
<h2 class="anchored" data-anchor-id="select-genes">Select Genes</h2>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make sure the GPU is enabled </span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Start the colab kernel with GPU: Runtime -&gt; Change runtime type -&gt; GPU'</span></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gzip</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl</span>
<span id="cb1-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-15"></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb1-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'retina'</span></span>
<span id="cb1-19"></span>
<span id="cb1-20">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb1-21">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb1-22">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/lus/grand/projects/TFXcan/imlab/data/hg_sequences/hg38/Homo_sapiens_assembly38.fasta'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-2">genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.sample(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(genes)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       ensembl_gene_id external_gene_name chromosome_name  \
2199   ENSG00000121898              CPXM2              10   
1804   ENSG00000162613              FUBP1               1   
15362  ENSG00000164327             RICTOR               5   
5786   ENSG00000087303               NID2              14   
4613   ENSG00000139233               LLPH              12   
6638   ENSG00000050820              BCAR1              16   
2681   ENSG00000171160              MORN4              10   
9526   ENSG00000181781             ODF3L2              19   
4709   ENSG00000123064              DDX54              12   
10435  ENSG00000135632              SMYD5               2   

       transcription_start_site  
2199                  123891807  
1804                   77979072  
15362                  39074399  
5786                   52069059  
4613                   66130750  
6638                   75251624  
2681                   97633500  
9526                     474983  
4709                  113185478  
10435                  73214245  </code></pre>
</div>
</div>
</section>
<section id="run-enformer-at-the-tss" class="level2">
<h2 class="anchored" data-anchor-id="run-enformer-at-the-tss">Run Enformer at the TSS</h2>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb4-4"></span>
<span id="cb4-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb4-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb4-7"></span>
<span id="cb4-8">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb4-9">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb4-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb4-11"></span>
<span id="cb4-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb4-13">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb4-14">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb4-15">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb4-16"></span>
<span id="cb4-17">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb4-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb4-19">      tape.watch(input_sequence)</span>
<span id="cb4-20">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb4-21">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb4-22">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb4-23"></span>
<span id="cb4-24">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb4-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-27">  </span>
<span id="cb4-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb4-29">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb4-31">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb4-32">    ax.set_title(title)</span>
<span id="cb4-33">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-34">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb4-35">  plt.tight_layout()</span>
<span id="cb4-36">  </span>
<span id="cb4-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb4-38">    </span>
<span id="cb4-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb4-40">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb4-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb4-42"></span>
<span id="cb4-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb4-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb4-45">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb4-46">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb4-47">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb4-48">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb4-49">                                    )</span>
<span id="cb4-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb4-51">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb4-52">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-53">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb4-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb4-55">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-56">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-57">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb4-58"></span>
<span id="cb4-59">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb4-61">    </span>
<span id="cb4-62"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb4-63">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path)</span>
<span id="cb5-2">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Create Interval object for each TSS</span></span>
<span id="cb6-2">intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>], row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>], row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>])</span>
<span id="cb6-3">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes.iterrows()]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">tss_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb7-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> index, gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>]):</span>
<span id="cb7-3">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> intervals[index]</span>
<span id="cb7-4">    sequence_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> one_hot_encode(fasta_extractor.extract(tss.resize(SEQUENCE_LENGTH)))</span>
<span id="cb7-5">    tss_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(sequence_one_hot[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
</section>
<section id="query-predicted-reference-epigenome-at-the-tss" class="level2">
<h2 class="anchored" data-anchor-id="query-predicted-reference-epigenome-at-the-tss">Query Predicted Reference Epigenome at the TSS</h2>
<div class="cell" data-execution_count="7">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb8-2"></span>
<span id="cb8-3">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb8-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb8-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (num_bins, len(tracks))</span></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb8-18"></span>
<span id="cb8-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb8-20">    center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-21">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb8-22">    </span>
<span id="cb8-23">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb8-24">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb8-25">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb8-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if num_bins is odd</span></span>
<span id="cb8-27">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-28"></span>
<span id="cb8-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb8-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb8-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb8-32">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb8-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb8-34">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb8-35"></span>
<span id="cb8-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">predicted_reference_epigenome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb9-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> index, gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>]):</span>
<span id="cb9-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genes.iloc[index][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>]</span>
<span id="cb9-4">    pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genes.iloc[index][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>]</span>
<span id="cb9-5">    predicted_reference_epigenome[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, pos, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span>)</span></code></pre></div>
</div>
<p>We’ll save these matrices so we can come back to the same genes.</p>
<div class="cell" data-execution_count="19">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with h5py.File('/home/s1mi/enformer_rat_data/output/hg38_tss_predictions.h5', 'w') as hf:</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     for key, value in tss_predictions.items():</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         hf[key] = value</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with h5py.File('/home/s1mi/enformer_rat_data/output/hg38_reference_epigenome_tss.h5', 'w') as hf:</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     for key, value in predicted_reference_epigenome.items():</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         hf[key] = value</span></span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import h5py</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt", sep="\t", index_col='ensembl_gene_id')</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predicted_reference_epigenome = {}</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with h5py.File('/home/s1mi/enformer_rat_data/output/hg38_reference_epigenome_tss.h5', 'r') as hf:</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     for key in hf.keys():</span></span>
<span id="cb11-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         predicted_reference_epigenome[key] = hf[key][()]</span></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tss_predictions = {}</span></span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with h5py.File('/home/s1mi/enformer_rat_data/output/hg38_tss_predictions.h5', 'r') as hf:</span></span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     for key in hf.keys():</span></span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         tss_predictions[key] = hf[key][()]</span></span></code></pre></div>
</div>
</section>
<section id="compare-matrices" class="level2">
<h2 class="anchored" data-anchor-id="compare-matrices">Compare Matrices</h2>
<p>I used Laura’s matrix comparison functions, which can be expanded below:</p>
<div class="cell" data-execution_count="12">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_diffmat(mat1, mat2):</span>
<span id="cb12-2">    </span>
<span id="cb12-3">    diffmat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mat1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mat2</span>
<span id="cb12-4">    colwise_maxes1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(mat1, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb12-5">    colwise_maxes2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(mat2, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb12-6"></span>
<span id="cb12-7">    colwise_maxes_maxes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(colwise_maxes1, colwise_maxes2)</span>
<span id="cb12-8"></span>
<span id="cb12-9">    relmax3_diffmat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diffmat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> colwise_maxes_maxes</span>
<span id="cb12-10">    relmax3_diffmat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(relmax3_diffmat)</span>
<span id="cb12-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> relmax3_diffmat</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_summary(arr):</span>
<span id="cb12-14">    summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>: np.mean(arr),</span>
<span id="cb12-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"median"</span>: np.median(arr),</span>
<span id="cb12-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minimum"</span>: np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(arr),</span>
<span id="cb12-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maximum"</span>: np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(arr),</span>
<span id="cb12-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q1"</span>: np.percentile(arr, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>),</span>
<span id="cb12-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q3"</span>: np.percentile(arr, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>),</span>
<span id="cb12-21">    }</span>
<span id="cb12-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> summary</span>
<span id="cb12-23"></span>
<span id="cb12-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_hist(arr, bin_num, xlab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Value'</span>, ylab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Frequency'</span>, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Histogram'</span>):</span>
<span id="cb12-25">    plt.hist(arr, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bin_num)</span>
<span id="cb12-26">    plt.title(title)</span>
<span id="cb12-27">    plt.xlabel(xlab)</span>
<span id="cb12-28">    plt.ylabel(ylab)</span>
<span id="cb12-29">    plt.show()</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">diff_mats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {gene: get_diffmat(tss_predictions[gene], predicted_reference_epigenome[gene]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tss_predictions.keys()}</span>
<span id="cb13-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> diff_mats.keys():</span>
<span id="cb13-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, get_summary(diff_mats[gene]))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSG00000121898 summary:
 {'mean': 0.032200303, 'median': 0.01341768, 'minimum': 0.0, 'maximum': 0.9901849, 'q1': 0.003314544155728072, 'q3': 0.038835618644952774}
ENSG00000162613 summary:
 {'mean': 0.01999371, 'median': 0.005458167, 'minimum': 0.0, 'maximum': 0.988134, 'q1': 0.0007359800220001489, 'q3': 0.022952284663915634}
ENSG00000164327 summary:
 {'mean': 0.025973188, 'median': 0.0063576996, 'minimum': 2.6839478e-10, 'maximum': 0.99930054, 'q1': 0.0010229847976006567, 'q3': 0.0275100851431489}
ENSG00000087303 summary:
 {'mean': 0.02138613, 'median': 0.0077090887, 'minimum': 0.0, 'maximum': 0.9420468, 'q1': 0.001561658486025408, 'q3': 0.025569051504135132}
ENSG00000139233 summary:
 {'mean': 0.015630499, 'median': 0.0037975144, 'minimum': 0.0, 'maximum': 0.9219668, 'q1': 0.0006033704994479194, 'q3': 0.016216954216361046}
ENSG00000050820 summary:
 {'mean': 0.013206795, 'median': 0.004311326, 'minimum': 0.0, 'maximum': 0.91182494, 'q1': 0.0008041909604799002, 'q3': 0.015259698033332825}
ENSG00000171160 summary:
 {'mean': 0.02672244, 'median': 0.00733448, 'minimum': 0.0, 'maximum': 0.98480076, 'q1': 0.001141986605944112, 'q3': 0.030081284698098898}
ENSG00000181781 summary:
 {'mean': 0.026071776, 'median': 0.0058201756, 'minimum': 0.0, 'maximum': 0.99881804, 'q1': 0.0007384350174106658, 'q3': 0.027037601452320814}
ENSG00000123064 summary:
 {'mean': 0.018377414, 'median': 0.0051327366, 'minimum': 0.0, 'maximum': 0.84950185, 'q1': 0.0008188941283151507, 'q3': 0.020361649803817272}
ENSG00000135632 summary:
 {'mean': 0.010653677, 'median': 0.002438372, 'minimum': 0.0, 'maximum': 0.88420224, 'q1': 0.0003591718268580735, 'q3': 0.010761200217530131}</code></pre>
</div>
</div>
<p>Since <code>get_diffmat</code> quantifies relative difference between two matrices, a maximum of 1 is quite high.</p>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">corr_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {key: np.empty(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> diff_mats.keys()}</span>
<span id="cb15-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> corr_dict.keys():</span>
<span id="cb15-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>):</span>
<span id="cb15-4">        col_corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(tss_predictions[gene][:, col], predicted_reference_epigenome[gene][:, col])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb15-5">        corr_dict[gene][col] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> col_corr</span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> corr_dict.keys():</span>
<span id="cb16-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(get_summary(corr_dict[gene]))</span>
<span id="cb16-3">    plot_hist(corr_dict[gene], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'mean': 0.8049430343560166, 'median': 0.8328356084654803, 'minimum': 0.0886049231976136, 'maximum': 0.9873011016369064, 'q1': 0.7457438348765015, 'q3': 0.8957395348558694}
{'mean': 0.8986475454955245, 'median': 0.9287121904359038, 'minimum': 0.44826868323321156, 'maximum': 0.9945962529032818, 'q1': 0.8838251793830844, 'q3': 0.9635682170126223}
{'mean': 0.8045267661551807, 'median': 0.8533021666864998, 'minimum': 0.04249028764892999, 'maximum': 0.9829007173160716, 'q1': 0.7808240903986677, 'q3': 0.9162318636964755}
{'mean': 0.9153468696782503, 'median': 0.9217565843086337, 'minimum': 0.24337527243785198, 'maximum': 0.9960668159468162, 'q1': 0.8843923256605982, 'q3': 0.9570777829613587}
{'mean': 0.9067276703056678, 'median': 0.9487685336551595, 'minimum': 0.3544397363159794, 'maximum': 0.9962932767154381, 'q1': 0.9172946319240809, 'q3': 0.9721852288345812}
{'mean': 0.9685002179647139, 'median': 0.9718918783698673, 'minimum': 0.5774837936897961, 'maximum': 0.9970822682600515, 'q1': 0.9603764167762545, 'q3': 0.983808164894418}
{'mean': 0.8188228830558877, 'median': 0.8774429361059797, 'minimum': 0.15878411819220745, 'maximum': 0.9908752372163073, 'q1': 0.806399316249025, 'q3': 0.9316126393219638}
{'mean': 0.8244396183353139, 'median': 0.8766614272845572, 'minimum': 0.21515277099870878, 'maximum': 0.9734314614679092, 'q1': 0.8314860244560973, 'q3': 0.9116283548886374}
{'mean': 0.9224101439094681, 'median': 0.9397228749133515, 'minimum': 0.6120791237641421, 'maximum': 0.9941067107710185, 'q1': 0.9002750036208108, 'q3': 0.9632379272802634}
{'mean': 0.9115669859866135, 'median': 0.9701754129932663, 'minimum': 0.2662981770716635, 'maximum': 0.9971998874233308, 'q1': 0.9490859996588221, 'q3': 0.9862075624647917}</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-7.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-8.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-9.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-10.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-15-output-11.png" class="img-fluid"></p>
</div>
</div>
<p>This is pretty bad. But we’ll still plot the brain CAGE tracks, in case the root of our problems is bin indexing.</p>
<div class="cell" data-execution_count="25">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>)</span>
<span id="cb18-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_CAGE_tracks(gene):</span>
<span id="cb18-3">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb18-4">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb18-5">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb18-6">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, start, end)</span>
<span id="cb18-7">    tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Centered at TSS"</span>: tss_predictions[gene][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>],</span>
<span id="cb18-8">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Queried from reference"</span>: predicted_reference_epigenome[gene][:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]}</span>
<span id="cb18-9">    plot_tracks(tracks, target_interval)</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tss_predictions.keys():</span>
<span id="cb19-2">    plot_CAGE_tracks(gene)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-7.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-8.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-9.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-17-output-10.png" class="img-fluid"></p>
</div>
</div>
<p>At least for the CAGE:Brain track, centering the input sequence at the TSS does not noticeably affect prediction along bins. But it is worth noting that the peaks predicted by centering sequences at TSS look slightly wider than when predicting in a fixed 448 bin window. Let’s query 8 bins around the TSS to verify. (In theory, the TSS will land on index 448 in both cases, or index 4 in the 8 bin window.)</p>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> corr_dict.keys():</span>
<span id="cb20-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb20-3">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({</span>
<span id="cb20-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Centered at TSS"</span>: tss_predictions[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">444</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">452</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>],</span>
<span id="cb20-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Queried from reference"</span>: predicted_reference_epigenome[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">444</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">452</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb20-6">    })</span>
<span id="cb20-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df.transpose())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSG00000121898
                               0         1         2         3          4  \
Centered at TSS         0.082086  0.279907  0.440625  4.071788   3.021415   
Queried from reference  0.026973  0.184488  0.306243  0.599280  10.036044   

                               5         6         7  
Centered at TSS         0.033681  0.012400  0.010115  
Queried from reference  0.683917  0.033996  0.018840  
ENSG00000162613
                               0         1         2          3           4  \
Centered at TSS         0.076932  0.107431  0.190104  59.414913   44.131977   
Queried from reference  0.054259  0.077803  0.129248   0.457014  113.825249   

                               5         6         7  
Centered at TSS         7.694908  0.878686  3.008540  
Queried from reference  7.781330  4.396933  2.460186  
ENSG00000164327
                               0         1         2          3          4  \
Centered at TSS         0.392323  0.314011  0.328351  12.959496   4.288091   
Queried from reference  0.125206  0.404037  0.652251   0.185249  17.119499   

                               5         6         7  
Centered at TSS         0.746995  0.368291  0.123126  
Queried from reference  0.754246  0.489976  0.373154  
ENSG00000087303
                               0         1         2         3         4  \
Centered at TSS         0.039021  0.053638  0.235429  0.646864  1.494921   
Queried from reference  0.080472  0.029643  0.127269  0.273104  2.420461   

                               5         6         7  
Centered at TSS         0.172857  0.049821  0.075797  
Queried from reference  0.190278  0.060742  0.115897  
ENSG00000139233
                               0         1         2         3          4  \
Centered at TSS         0.040307  0.030658  0.027995  5.852082   9.505428   
Queried from reference  0.070822  0.031764  0.034324  0.041555  11.567361   

                               5         6         7  
Centered at TSS         0.185968  0.026289  0.013464  
Queried from reference  0.815561  0.030036  0.016201  
ENSG00000050820
                               0         1         2         3          4  \
Centered at TSS         0.114673  0.221738  0.484987  3.659282  15.693231   
Queried from reference  0.141583  0.171815  0.351790  0.665281  24.632042   

                               5         6         7  
Centered at TSS         0.169728  0.162921  0.282628  
Queried from reference  0.280914  0.157273  0.284518  
ENSG00000171160
                               0         1         2          3          4  \
Centered at TSS         0.073427  0.057288  0.123217  17.251186   3.344472   
Queried from reference  0.055889  0.057332  0.082732   0.132029  18.254246   

                               5         6         7  
Centered at TSS         0.072126  0.083481  0.012901  
Queried from reference  0.312892  0.033270  0.029419  
ENSG00000181781
                               0         1         2         3         4  \
Centered at TSS         0.018649  0.026022  0.118225  0.119143  0.134566   
Queried from reference  0.027906  0.015841  0.033200  0.094467  0.129208   

                               5         6         7  
Centered at TSS         0.011545  0.005993  0.008782  
Queried from reference  0.110075  0.010298  0.006653  
ENSG00000123064
                               0         1         2          3          4  \
Centered at TSS         1.115006  0.157705  0.413661  12.203613  16.859051   
Queried from reference  0.175724  1.541537  0.067659   0.507933  21.480145   

                               5         6         7  
Centered at TSS         0.659016  0.442875  0.483138  
Queried from reference  7.751738  0.415864  0.562360  
ENSG00000135632
                               0         1         2         3          4  \
Centered at TSS         0.004197  0.005604  0.035540  3.246182   9.616517   
Queried from reference  0.002469  0.006195  0.026891  0.172134  14.617000   

                               5         6         7  
Centered at TSS         0.261616  1.216553  0.174459  
Queried from reference  0.161753  1.406903  0.269044  </code></pre>
</div>
</div>
<p>Now the difference is much more noticeable. Let’s confirm with a correlation test for CAGE:Brain track.</p>
<div class="cell" data-execution_count="48">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> corr_dict.keys():</span>
<span id="cb22-2">    col_corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(tss_predictions[gene][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>], predicted_reference_epigenome[gene][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb22-3">    dist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb22-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Correlation:"</span>, col_corr, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">TSS distance from center:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(dist, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dist))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSG00000121898 
Correlation: 0.6396015700677352 
TSS distance from center: 28577
ENSG00000162613 
Correlation: 0.6089762800309391 
TSS distance from center: 8768
ENSG00000164327 
Correlation: 0.3250502250053843 
TSS distance from center: 23135
ENSG00000087303 
Correlation: 0.94357261835514 
TSS distance from center: 707
ENSG00000139233 
Correlation: 0.510355799911747 
TSS distance from center: 13118
ENSG00000050820 
Correlation: 0.9543710850658597 
TSS distance from center: 16296
ENSG00000171160 
Correlation: 0.36819984155156643 
TSS distance from center: 23332
ENSG00000181781 
Correlation: 0.6519049075736117 
TSS distance from center: 16231
ENSG00000123064 
Correlation: 0.9232435790584608 
TSS distance from center: 11578
ENSG00000135632 
Correlation: 0.5146963218167778 
TSS distance from center: 14043</code></pre>
</div>
</div>
<p>The distance between the gene TSS and the center of input sequence is likely affecting predictions. Now we’ll want to consider whether centering at the TSS improves predictions based on a <em>very</em> small sample of 10 genes.</p>
</section>
<section id="compare-to-gtex-gene-expression" class="level2">
<h2 class="anchored" data-anchor-id="compare-to-gtex-gene-expression">Compare to GTEx gene expression</h2>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-2">gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb24-3">gtex_tpm.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb24-5">gtex_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb24-6">gtex_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GTEx'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="69">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Quantify predicted gene expression</span></span>
<span id="cb25-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({</span>
<span id="cb25-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Centered at TSS"</span>: [np.average(tss_predictions[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tss_predictions.keys()],</span>
<span id="cb25-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Queried from reference"</span>: [np.average(predicted_reference_epigenome[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predicted_reference_epigenome.keys()]</span>
<span id="cb25-5">    }, index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tss_predictions.keys())</span></code></pre></div>
</div>
<div class="cell" data-execution_count="70">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">reference_gex_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.merge(gtex_mean_tpm, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>)</span>
<span id="cb26-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(reference_gex_df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                 Centered at TSS  Queried from reference       GTEx
ENSG00000050820         9.676256               12.648662  20.471502
ENSG00000087303         1.070892                1.346782   0.780738
ENSG00000121898         3.546602                5.317662   1.135701
ENSG00000123064        14.531332               10.994039  11.954925
ENSG00000135632         6.431349                7.394567  25.394757
ENSG00000139233         7.678755                5.804458   2.995251
ENSG00000162613        51.773445               57.141132  17.891106
ENSG00000164327         8.623794                8.652374   5.890239
ENSG00000171160        10.297829                9.193137  34.015620
ENSG00000181781         0.126855                0.111838   0.479827</code></pre>
</div>
</div>
<div class="cell" data-execution_count="71">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">gex_corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reference_gex_df.corr()</span>
<span id="cb28-2">gex_corr</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="71">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Centered at TSS</th>
<th data-quarto-table-cell-role="th">Queried from reference</th>
<th data-quarto-table-cell-role="th">GTEx</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">Centered at TSS</td>
<td>1.000000</td>
<td>0.991899</td>
<td>0.324152</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Queried from reference</td>
<td>0.991899</td>
<td>1.000000</td>
<td>0.316441</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">GTEx</td>
<td>0.324152</td>
<td>0.316441</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>It’s worth noting that once the four bins around the TSS are averaged, predictions centered at TSS compared to 57,344 bp increments in the reference epigenome are very similar.</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index.html</guid>
  <pubDate>Mon, 28 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Cisd2 Correlation across rats</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-24-Cisd2-correlation-across-rats/index.html</link>
  <description><![CDATA[ 




<p>We picked Cisd2 out the selection process.</p>
<section id="run-pipeline" class="level3">
<h3 class="anchored" data-anchor-id="run-pipeline">Run Pipeline</h3>
<p>We centered the interval at Cisd2’s TSS chr2:223868946.</p>
<pre><code>module load conda
conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools
cd /home/s1mi/Github/shared_pipelines/enformer_pipeline
python scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-24-Cisd2-correlation-across-rats/Cisd2_personalized.json</code></pre>
</section>
<section id="compare-to-observed" class="level3">
<h3 class="anchored" data-anchor-id="compare-to-observed">Compare to Observed</h3>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000048258"</span></span>
<span id="cb3-2">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb3-3">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/personalized_Br_genes/predictions_2023-08-24/enformer_predictions"</span></span>
<span id="cb3-4">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_174805/3252868614.py:4: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb5-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> df.index:</span>
<span id="cb6-2">    haplo0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype0/chr2_223868946_223868946_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb6-3">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> haplo0[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr2_223868946_223868946"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-4">    df.loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(predictions)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">df.corr()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">observed</th>
<th data-quarto-table-cell-role="th">predicted</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">observed</td>
<td>1.000000</td>
<td>0.318211</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">predicted</td>
<td>0.318211</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"></span>
<span id="cb8-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>]</span>
<span id="cb8-3">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]</span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb8-5">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb8-8">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb8-9">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb8-10">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cisd2'</span>)</span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb8-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-24-Cisd2-correlation-across-rats/index_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-24-Cisd2-correlation-across-rats/index.html</guid>
  <pubDate>Thu, 24 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation of Enformer CAGE predictions on rn7 reference genome and measured gene expression in Br rats</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-across-rn7-genes-by-chromosome/index.html</link>
  <description><![CDATA[ 




<p>We ran Enformer across all rat genes and quantified expression in brain tissue. Our numbers, 0.45 pearson’s correlation and 0.76 spearman’s correlation, are very exciting. Although Enformer is optimized to predict gene expression in humans, we see a very strong performance in rats. In GTEx, Enformer predicts reference gene expression with 0.54 pearson’s correlation and 0.79 spearman’s correlation, while in GUEVADIS (LCL tissue), we see 0.20 pearson’s and 0.77 spearman’s.</p>
<section id="concatenate-predictions" class="level2">
<h2 class="anchored" data-anchor-id="concatenate-predictions">Concatenate Predictions</h2>
<p>We start with concatenating our predictions into separate files by chromosome number, firstly because our predictions are currently split between two directories and secondly, by grouping intervals together by chromosome, we can parallelize computing gene expression.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> parsl</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> parsl <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> python_app</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> parsl.configs.local_threads <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> config</span>
<span id="cb1-7">parsl.load(config)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>&lt;parsl.dataflow.dflow.DataFlowKernel at 0x7ff1b2188070&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes"</span></span>
<span id="cb3-2">chr_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@python_app</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> concatenate_predictions_by_chromosome(predictions_dir, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, output_dir):</span>
<span id="cb4-3">    output_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>)</span>
<span id="cb4-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_file:</span>
<span id="cb4-5">        files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_*_predictions.h5"</span>)</span>
<span id="cb4-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files:</span>
<span id="cb4-7">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.basename(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>).replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb4-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_file:</span>
<span id="cb4-9">                output_file[interval] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_file[interval][()]</span>
<span id="cb4-10">            </span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## concatenate files in first prediction run</span></span>
<span id="cb5-2">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/predictions_2023-08-16/enformer_predictions/reference_Br/haplotype0"</span></span>
<span id="cb5-3">app_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb5-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb5-5">    app_futures.append(concatenate_predictions_by_chromosome(predictions_dir, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, output_dir))</span>
<span id="cb5-6">exec_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> app_futures]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## concatenate files in second prediction run</span></span>
<span id="cb6-2">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/predictions_2023-08-29/enformer_predictions/reference_Br/haplotype0"</span></span>
<span id="cb6-3">app_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb6-5">    app_futures.append(concatenate_predictions_by_chromosome(predictions_dir, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, output_dir))</span>
<span id="cb6-6"></span>
<span id="cb6-7">exec_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> app_futures]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Second prediction folder done</code></pre>
</div>
</div>
</section>
<section id="compare-predicted-and-observed" class="level2">
<h2 class="anchored" data-anchor-id="compare-predicted-and-observed">Compare Predicted and Observed</h2>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb8-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb8-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb8-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> parsl</span>
<span id="cb8-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> parsl <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> python_app</span>
<span id="cb8-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> parsl.configs.local_threads <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> config</span>
<span id="cb8-8">parsl.load(config)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>&lt;parsl.dataflow.dflow.DataFlowKernel at 0x7f5325796800&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes"</span></span>
<span id="cb10-2">chr_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>]</span>
<span id="cb10-3">rn7_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb10-4">gene_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rn7_annot.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>).to_dict()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_89896/1953959868.py:3: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  rn7_annot = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## filter genes to chr1-20 and X and make chr all strings</span></span>
<span id="cb12-2">gene_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(key): value <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key, value <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_dict.items() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(key) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb13-2">mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm.iloc[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-3">mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_89896/417279503.py:1: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  tpm = pd.read_csv("/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed", sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Function to put CAGE predictions in list (in the same order as gene list by chromosome)</span></span>
<span id="cb15-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@python_app</span></span>
<span id="cb15-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_genes(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>):</span>
<span id="cb15-4">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span>
<span id="cb15-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb15-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb15-7">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rn7_annot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rn7_annot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb15-8">            bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>[interval][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb15-9">            CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].append(np.average(bins))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">rn7_annot.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geneId"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb16-2">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>: [] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list}</span>
<span id="cb16-3">app_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Collect CAGE predictions in parallel across genes</span></span>
<span id="cb16-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb16-6">    app_futures.append(query_genes(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>))</span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Wait for all chromosomes to finish</span></span>
<span id="cb16-8">exec_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> app_futures]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">merged_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb17-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb17-3">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>])</span>
<span id="cb17-4">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span>
<span id="cb17-5">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_tpm.loc[gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">all_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(merged_dict.values())</span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#all_genes.to_csv("/home/s1mi/enformer_rat_data/output/rn7_reference_predicted_vs_observed_expression.csv")</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb19-2">all_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/rn7_reference_predicted_vs_observed_expression.csv"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb19-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson Correlation:"</span>)</span>
<span id="cb19-4">all_genes.corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearson"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Pearson Correlation:</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">predicted</th>
<th data-quarto-table-cell-role="th">observed</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">predicted</td>
<td>1.000000</td>
<td>0.452596</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">observed</td>
<td>0.452596</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spearman Correlation:"</span>)</span>
<span id="cb21-2">all_genes.corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spearman"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Spearman Correlation:</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">predicted</th>
<th data-quarto-table-cell-role="th">observed</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">predicted</td>
<td>1.000000</td>
<td>0.759705</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">observed</td>
<td>0.759705</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb23-2">corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_genes.corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spearman"</span>).iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb23-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Correlation across all rn7 genes:"</span>, corr)</span>
<span id="cb23-4">plt.scatter(all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>], all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb23-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>)</span>
<span id="cb23-6">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>)</span>
<span id="cb23-7">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enformer prediction across rat genes"</span>)</span>
<span id="cb23-8">plt.legend()</span>
<span id="cb23-9">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb23-10">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Correlation across all rn7 genes: 0.7597054021798328</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-across-rn7-genes-by-chromosome/index_files/figure-html/cell-17-output-2.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-across-rn7-genes-by-chromosome/index.html</guid>
  <pubDate>Wed, 23 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation between Enformer reference CAGE prediction and GTEx brain tissue expression across genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-between-Enformer-and-GTEx-expression-across-genes-by-chromosome/index.html</link>
  <description><![CDATA[ 




<section id="collect-predicted-and-observed-reference-gene-expression-for-each-chromosome" class="level2">
<h2 class="anchored" data-anchor-id="collect-predicted-and-observed-reference-gene-expression-for-each-chromosome">Collect predicted and observed reference gene expression for each chromosome</h2>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"></span>
<span id="cb1-5">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (num_bins, len(tracks))</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-20"></span>
<span id="cb1-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb1-22">    center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-23">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb1-24">    </span>
<span id="cb1-25">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-26">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb1-27">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb1-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if num_bins is odd</span></span>
<span id="cb1-29">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-30"></span>
<span id="cb1-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb1-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-34">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb1-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-36">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb1-37"></span>
<span id="cb1-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## create lists of genes on each chromomsome</span></span>
<span id="cb2-2">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-3">gene_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>).to_dict()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Initialize lists of CAGE predictions for each gene</span></span>
<span id="cb3-2">hg38_annot.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-3">chr_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"21"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"22"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>]</span>
<span id="cb3-4">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {key: [] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Function to put CAGE predictions in list (in the same order as gene list by chromosome)</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_genes(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>):</span>
<span id="cb4-3">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span>
<span id="cb4-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-5">        bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>], tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb4-6">        CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].append(np.average(bins))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb5-2">    query_genes(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>)</span>
<span id="cb5-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Queried chromosome"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"...,"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Queried chromosome 1 ..., 2030 genes
Queried chromosome 2 ..., 1227 genes
Queried chromosome 3 ..., 1063 genes
Queried chromosome 4 ..., 752 genes
Queried chromosome 5 ..., 872 genes
Queried chromosome 6 ..., 1031 genes
Queried chromosome 7 ..., 919 genes
Queried chromosome 8 ..., 693 genes
Queried chromosome 9 ..., 766 genes
Queried chromosome 10 ..., 715 genes
Queried chromosome 11 ..., 1291 genes
Queried chromosome 12 ..., 1018 genes
Queried chromosome 13 ..., 320 genes
Queried chromosome 14 ..., 602 genes
Queried chromosome 15 ..., 589 genes
Queried chromosome 16 ..., 842 genes
Queried chromosome 17 ..., 1158 genes
Queried chromosome 18 ..., 262 genes
Queried chromosome 19 ..., 1432 genes
Queried chromosome 20 ..., 537 genes
Queried chromosome 21 ..., 219 genes
Queried chromosome 22 ..., 434 genes
Queried chromosome X ..., 853 genes</code></pre>
</div>
</div>
</section>
<section id="count-missing-genes-in-reference-enformer" class="level2">
<h2 class="anchored" data-anchor-id="count-missing-genes-in-reference-enformer">Count missing genes in reference Enformer</h2>
<p>We are only missing TSS CAGE values for 12 genes, all on chromosome 12.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb7-2">    n_missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(np.isnan(np.array(CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>])))</span>
<span id="cb7-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n_missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb7-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chromosome"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"missing"</span>, n_missing, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes in the predicted human reference epigenome"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Chromosome 12 missing 27 genes in the predicted human reference epigenome</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">merged_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>: pd.DataFrame(index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list}</span>
<span id="cb9-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb9-3">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">all_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(merged_dict.values())</span>
<span id="cb10-2">all_predicted.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/hg38_predicted_expression.csv"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-2">gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb11-3">gtex_tpm.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb11-5">gtex_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-6">gtex_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb12-2">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].index.intersection(gtex_tpm.index)</span>
<span id="cb12-3">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].loc[gene_list]</span>
<span id="cb12-4">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].merge(gtex_mean_tpm, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>).dropna()</span>
<span id="cb12-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes on chromosome"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Correlation:"</span>, merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].corr().iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb13-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb13-3">all_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/hg38_predicted_expression.csv"</span>, index_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-4">all_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_predicted.merge(gtex_mean_tpm, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson Correlation:"</span>)</span>
<span id="cb14-2">all_genes.corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearson"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Pearson Correlation:</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="20">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
<th data-quarto-table-cell-role="th">gtex</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">enformer</td>
<td>1.000000</td>
<td>0.539788</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">gtex</td>
<td>0.539788</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spearman Correlation:"</span>)</span>
<span id="cb16-2">all_genes.corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spearman"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Spearman Correlation:</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="21">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
<th data-quarto-table-cell-role="th">gtex</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">enformer</td>
<td>1.000000</td>
<td>0.794341</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">gtex</td>
<td>0.794341</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_genes.corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spearman"</span>).iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-2">plt.scatter(all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer'</span>], all_genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb18-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>)</span>
<span id="cb18-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>)</span>
<span id="cb18-5">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enformer predictions across human genes"</span>)</span>
<span id="cb18-6">plt.legend()</span>
<span id="cb18-7">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb18-8">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-between-Enformer-and-GTEx-expression-across-genes-by-chromosome/index_files/figure-html/cell-15-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-between-Enformer-and-GTEx-expression-across-genes-by-chromosome/index.html</guid>
  <pubDate>Tue, 22 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation between human reference CAGE predictions to mean expression across GTEx genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-21-comparing-enformer-CAGE-prediction-to-GTEx-brain-cortex-expression-across-genes/index.html</link>
  <description><![CDATA[ 




<p>We learned that pieces of the hg38 reference epigenome are missing, including all gene regions on chromosomes 5, 6, and 7, and a handful (27 out of 1018) on chromosome 12. Based off the genes we could query, the correlation between predicted expression from human reference genome and mean expression in GTEx brain cortex tissues is 0.536, which is too low, even when we consider the missing genes.</p>
<p>We will definitely need to rerun Enformer on chromosomes 5-7, but I’m still stuck on how we’ll debug the low correlation. I double checked that the fasta file and gene annotation were both in hg38.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"></span>
<span id="cb1-5">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (num_bins, len(tracks))</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-20"></span>
<span id="cb1-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb1-22">    center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-23">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb1-24">    </span>
<span id="cb1-25">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-26">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb1-27">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb1-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if num_bins is odd</span></span>
<span id="cb1-29">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-30"></span>
<span id="cb1-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb1-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-34">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb1-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-36">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb1-37"></span>
<span id="cb1-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>)</span>
<span id="cb2-2">hg38_annot.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">external_gene_name</th>
<th data-quarto-table-cell-role="th">chromosome_name</th>
<th data-quarto-table-cell-role="th">transcription_start_site</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142611</td>
<td>PRDM16</td>
<td>1</td>
<td>3069203</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000157911</td>
<td>PEX10</td>
<td>1</td>
<td>2412564</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142655</td>
<td>PEX14</td>
<td>1</td>
<td>10474950</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000149527</td>
<td>PLCH2</td>
<td>1</td>
<td>2476289</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000171621</td>
<td>SPSB1</td>
<td>1</td>
<td>9292894</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot[hg38_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>].index</span>
<span id="cb3-2">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-3">invalid_queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb3-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>]</span>
<span id="cb3-6">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>]</span>
<span id="cb3-7">    bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>,tss, num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb3-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(np.isnan(bins)):</span>
<span id="cb3-9">        invalid_queries.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-10">    CAGE_predictions.append(np.average(bins))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="84">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(invalid_queries), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"out of"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(CAGE_predictions), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TSS regions missing from reference epigenome"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2849 out of 19625 TSS regions missing from reference epigenome</code></pre>
</div>
</div>
<div class="cell" data-execution_count="85">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of missing regions by chromosme:"</span>)</span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(Counter(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: x.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], invalid_queries)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Number of missing regions by chromosme:
Counter({'6': 1031, '7': 919, '5': 872, '12': 27})</code></pre>
</div>
</div>
<div class="cell" data-execution_count="90">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total number of genes on those chromosome:"</span>)</span>
<span id="cb8-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>({key: Counter(hg38_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>])[key] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>]})</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Total number of genes on those chromosome:
{'6': 1031, '7': 919, '5': 872, '12': 1018}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="75">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">gex_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer"</span>: CAGE_predictions}, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene_list)</span>
<span id="cb10-2">gex_df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="75">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142611</td>
<td>4.474399</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000157911</td>
<td>6.886287</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142655</td>
<td>21.222824</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000149527</td>
<td>0.027461</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000171621</td>
<td>10.673162</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="76">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-2">gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb11-3">gtex_tpm.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="77">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gex_df.index.intersection(gtex_tpm.index)</span>
<span id="cb12-2">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.loc[gene_list]</span>
<span id="cb12-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gtex_tpm.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes in both GTEx and BioMart datasets"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>19107 genes in both GTEx and BioMart datasets</code></pre>
</div>
</div>
<div class="cell" data-execution_count="80">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb14-2">gtex_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-3">gtex_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join observed gene expression with Enformer CAGE predicted</span></span>
<span id="cb14-5">merged_gex_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gex_df.merge(gtex_mean_tpm, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>).dropna()</span>
<span id="cb14-6">merged_gex_df.head()</span>
<span id="cb14-7">merged_gex_df.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed_vs_predicted_expression_hg38_genes.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="80">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
<th data-quarto-table-cell-role="th">gtex</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000000003</td>
<td>0.318157</td>
<td>4.587454</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000000005</td>
<td>2.456774</td>
<td>0.208880</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000000419</td>
<td>36.233582</td>
<td>26.515365</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000000457</td>
<td>6.147785</td>
<td>2.538695</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000000460</td>
<td>3.142622</td>
<td>0.840966</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="81">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">merged_gex_df.corr()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="81">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
<th data-quarto-table-cell-role="th">gtex</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">enformer</td>
<td>1.000000</td>
<td>0.535759</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">gtex</td>
<td>0.535759</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-21-comparing-enformer-CAGE-prediction-to-GTEx-brain-cortex-expression-across-genes/index.html</guid>
  <pubDate>Tue, 22 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>biomaRt tutorial for querying gene annotation</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-18-gene-annotation-query-example-hg38/index.html</link>
  <description><![CDATA[ 




<p>BioMart is a database with gene annotations for various species, builds, etc. We can use the package biomaRt package to query information.</p>
<section id="install-biomart" class="level3">
<h3 class="anchored" data-anchor-id="install-biomart">Install biomaRt</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">requireNamespace</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BiocManager"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb1-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BiocManager"</span>)</span>
<span id="cb1-3">BiocManager<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"biomaRt"</span>)</span></code></pre></div>
</div>
</section>
<section id="example-1-getting-a-list-of-human-genes-and-their-tss-in-hg38" class="level3">
<h3 class="anchored" data-anchor-id="example-1-getting-a-list-of-human-genes-and-their-tss-in-hg38">Example 1: Getting a list of human genes and their TSS in hg38</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(biomaRt)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
<p>We first want to verify gene annotation is in build hg38.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">ensembl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useEnsembl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">biomart =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes"</span>)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">searchDatasets</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mart =</span> ensembl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                 dataset              description    version
80 hsapiens_gene_ensembl Human genes (GRCh38.p14) GRCh38.p14</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># connect to BioMart database for human genes</span></span>
<span id="cb5-2">ensembl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useEnsembl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">biomart =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens_gene_ensembl"</span>)</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># query canonical TSS for protein-coding genes on chr 1-22, X, and Y</span></span>
<span id="cb5-4">protein_coding_TSS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> biomaRt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getBM</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">attributes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_start"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_end"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_biotype"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcription_start_site"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_is_canonical"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strand"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filters =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_biotype"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_is_canonical"</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_coding"</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mart =</span> ensembl)</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract columns of interest</span></span>
<span id="cb5-7">protein_coding_TSS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> protein_coding_TSS[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcription_start_site"</span>)]</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write to file</span></span>
<span id="cb5-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.table</span>(protein_coding_TSS, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_coding_TSS.tsv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
</section>
<section id="example-2-getting-a-list-of-rat-genes-with-orthologs-in-humans" class="level3">
<h3 class="anchored" data-anchor-id="example-2-getting-a-list-of-rat-genes-with-orthologs-in-humans">Example 2: Getting a list of rat genes with orthologs in humans</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listMarts</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>               biomart                version
1 ENSEMBL_MART_ENSEMBL      Ensembl Genes 110
2   ENSEMBL_MART_MOUSE      Mouse strains 110
3     ENSEMBL_MART_SNP  Ensembl Variation 110
4 ENSEMBL_MART_FUNCGEN Ensembl Regulation 110</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># connect to BioMart database for rat genes</span></span>
<span id="cb8-2">ensembl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useEnsembl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">biomart =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rnorvegicus_gene_ensembl"</span>)</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># query all relevant data and store in a dataframe</span></span>
<span id="cb8-5">ortho_rat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getBM</span>( <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">attributes=</span></span>
<span id="cb8-6">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>, </span>
<span id="cb8-7">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens_homolog_ensembl_gene"</span>,</span>
<span id="cb8-8">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>),</span>
<span id="cb8-9">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filters =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"with_hsapiens_homolog"</span>,</span>
<span id="cb8-10">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb8-11">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mart =</span> ensembl)</span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write to file</span></span>
<span id="cb8-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.table</span>(ortho_rat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog_genes_rats_humans.tsv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-18-gene-annotation-query-example-hg38/index.html</guid>
  <pubDate>Fri, 18 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Querying Human Reference Epigenome</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-17-querying-human-reference-epigenome/all_hg38_genes.html</link>
  <description><![CDATA[ 




<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-7"></span>
<span id="cb1-8"></span>
<span id="cb1-9">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (num_bins, len(tracks))</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-24"></span>
<span id="cb1-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb1-26">    center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-27">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb1-28">    </span>
<span id="cb1-29">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-30">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb1-31">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb1-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if num_bins is odd</span></span>
<span id="cb1-33">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-34"></span>
<span id="cb1-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb1-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-38">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb1-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-40">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb1-41"></span>
<span id="cb1-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</div>
</section>
<section id="collect-tss-for-all-human-genes" class="level2">
<h2 class="anchored" data-anchor-id="collect-tss-for-all-human-genes">Collect TSS for all human genes</h2>
<p>We collected all protein-coding genes and their cannonical TSS using the biomaRt package.</p>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"></span>
<span id="cb2-2">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>)</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(hg38_annot.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes with TSS annotation"</span>)</span>
<span id="cb2-4">hg38_annot.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>19688 genes with TSS annotation</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">external_gene_name</th>
<th data-quarto-table-cell-role="th">chromosome_name</th>
<th data-quarto-table-cell-role="th">transcription_start_site</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142611</td>
<td>PRDM16</td>
<td>1</td>
<td>3069203</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000157911</td>
<td>PEX10</td>
<td>1</td>
<td>2412564</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142655</td>
<td>PEX14</td>
<td>1</td>
<td>10474950</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000149527</td>
<td>PLCH2</td>
<td>1</td>
<td>2476289</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000171621</td>
<td>SPSB1</td>
<td>1</td>
<td>9292894</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>We computed the predicted human reference epigenome by running Enformer on all intervals spanning the genome and concatenting the results. Now we extract the CAGE:Brain track at the bins where each gene’s TSS fall in order to quantify relative expression across genes.</p>
</section>
<section id="query-reference-epigenome-at-tss" class="level2">
<h2 class="anchored" data-anchor-id="query-reference-epigenome-at-tss">Query reference epigenome at TSS</h2>
<p>I found that querying the epigenome at certain positions returned NA, so I investigated those positions further by querying a larger window and plotting the CAGE track 4980.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> hg38_annot.index:</span>
<span id="cb4-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>]</span>
<span id="cb4-4">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>]</span>
<span id="cb4-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>,tss, num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> np.isnan(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span>):</span>
<span id="cb4-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid query:"</span>, gene, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"at"</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb4-9">    CAGE_predictions.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Invalid query: ENSG00000173451 at 12:71664301</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr12_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb6-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matrix shape:"</span>, f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>].shape)</span>
<span id="cb6-3">    center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71664301</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb6-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSG00000173451 TTS at bin"</span>, center)</span>
<span id="cb6-5">    epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>][center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>:center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb6-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of NA along track:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(np.isnan(epigen)))</span>
<span id="cb6-7">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>matrix shape: (1041214, 5313)
ENSG00000173451 TTS at bin 559877
Number of NA along track: 448</code></pre>
</div>
</div>
<p>We adapted a function from the Enformer usage notebook to plot a single track.</p>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_track(title, y, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb8-2">  fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height))</span>
<span id="cb8-3">  ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb8-4">  ax.set_title(title)</span>
<span id="cb8-5">  sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-6">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb8-7">  plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71664301</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71664301</span>)</span>
<span id="cb9-2">plot_track(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, ENSG00000173451'</span>, epigen, tss.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-17-querying-human-reference-epigenome/all_hg38_genes_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-17-querying-human-reference-epigenome/all_hg38_genes.html</guid>
  <pubDate>Thu, 17 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Testing the Enformer pipeline’s handling of unphased VCFs</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/average_haplotype_test.html</link>
  <description><![CDATA[ 




<section id="read-in-h5-prediction-file" class="level3">
<h3 class="anchored" data-anchor-id="read-in-h5-prediction-file">Read in h5 prediction file</h3>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_rat_single_gene/predictions_2023-08-16/enformer_predictions/000789972A/haplotype0/chr20_12118762_12118762_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb2-2">predictions1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr20_12118762_12118762'</span>][()]</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(predictions1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[0.23258275 0.2962714  0.52013165 ... 0.19615567 1.1101408  0.25560504]
 [0.15570731 0.20205402 0.3755348  ... 0.04365927 0.24989623 0.08517855]
 [0.1536611  0.21689793 0.4510562  ... 0.05227472 0.2147567  0.08478698]
 ...
 [0.1794057  0.22463816 0.29514343 ... 0.01105995 0.02652512 0.03385386]
 [0.1694869  0.20448665 0.26207498 ... 0.01688805 0.04071837 0.06028533]
 [0.15269741 0.20196484 0.22278813 ... 0.02438667 0.03900523 0.05988767]]</code></pre>
</div>
</div>
</section>
<section id="run-non-pipeline-enformer" class="level3">
<h3 class="anchored" data-anchor-id="run-non-pipeline-enformer">Run non-pipeline Enformer</h3>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EnformerVCF</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb4-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/reference_genome/rn7_genome.fasta'</span></span>
<span id="cb4-4">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read VCFs and encode haplotypes</span></span>
<span id="cb5-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>)</span>
<span id="cb5-3">chr20_vcf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.read_vcf(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/enformer_rat_data/genotypes/BrainVCFs/chr20.vcf.gz"</span>)</span>
<span id="cb5-4">haplo1, haplo2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.vcf_to_seq(target_interval, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'000789972A'</span>, chr20_vcf, fasta_extractor)</span>
<span id="cb5-5">haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo1))[np.newaxis]</span>
<span id="cb5-6">haplo2_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo2))[np.newaxis]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">mean_haplo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo2_enc) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb6-2">predictions2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(mean_haplo)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"There are"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(predictions1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> predictions2)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between the two matrices."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are 0 differences between the two matrices.</code></pre>
</div>
</div>
<p>It looks like our edits worked!</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/average_haplotype_test.html</guid>
  <pubDate>Wed, 16 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation of Enformer CAGE predictions and observed expression across all rn7 genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index.html</link>
  <description><![CDATA[ 




<p>Our goal is to test whether Enformer can determine relative gene expression levels in rat Brain tissues. We used mean gene expression in Br rats as the ground truth, and predicted the CAGE Brain track at each gene’s TSS. We found a correlation of 0.45, which we still need to compare to the same experiment with human data to determine whether this is high or low.</p>
<section id="reference-genome" class="level2">
<h2 class="anchored" data-anchor-id="reference-genome">Reference Genome</h2>
<section id="read-in-expression-files" class="level3">
<h3 class="anchored" data-anchor-id="read-in-expression-files">Read in expression files</h3>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_129963/1140758785.py:1: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  tpm = pd.read_csv("/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed", sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
</section>
<section id="calculate-average-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="calculate-average-gene-expression">Calculate average gene expression</h3>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm.iloc[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(mean_tpm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>gene_id
ENSRNOG00000065394    0.000000
ENSRNOG00000065356    0.000000
ENSRNOG00000070568    0.000912
ENSRNOG00000065706    0.005029
ENSRNOG00000069644    0.000265
                        ...   
ENSRNOG00000067420    0.000000
ENSRNOG00000069298    0.000559
ENSRNOG00000066131    0.000529
ENSRNOG00000068239    0.000500
ENSRNOG00000069552    0.001088
Length: 30231, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Put both means into dataframe</span></span>
<span id="cb6-2">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>: mean_tpm, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>: np.full(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30231</span>, np.nan), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr'</span>: np.full(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30231</span>, np.nan)})</span>
<span id="cb6-3">corr_df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="30">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tpm</th>
<th data-quarto-table-cell-role="th">iqn</th>
<th data-quarto-table-cell-role="th">predicted</th>
<th data-quarto-table-cell-role="th">chr</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000065394</td>
<td>0.000000</td>
<td>0.000000</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065356</td>
<td>0.000000</td>
<td>0.000000</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070568</td>
<td>0.000912</td>
<td>0.052617</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065706</td>
<td>0.005029</td>
<td>0.022574</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000069644</td>
<td>0.000265</td>
<td>0.011569</td>
<td>NaN</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="calculate-gene-expression-from-enformer-predictions-on-reference-genome" class="level3">
<h3 class="anchored" data-anchor-id="calculate-gene-expression-from-enformer-predictions-on-reference-genome">Calculate gene expression from Enformer predictions on reference genome</h3>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">reference_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes/predictions_2023-08-11/enformer_predictions/reference_Br/haplotype0"</span></span>
<span id="cb7-2"></span>
<span id="cb7-3">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb7-4">annot_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_36254/3273646084.py:3: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geneSymbol</th>
<th data-quarto-table-cell-role="th">chromosome</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">strand</th>
<th data-quarto-table-cell-role="th">tss</th>
<th data-quarto-table-cell-role="th">description</th>
<th data-quarto-table-cell-role="th">hasEqtl</th>
<th data-quarto-table-cell-role="th">expr_BLA</th>
<th data-quarto-table-cell-role="th">expr_Brain</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">sqtl_BLA</th>
<th data-quarto-table-cell-role="th">sqtl_Brain</th>
<th data-quarto-table-cell-role="th">sqtl_Eye</th>
<th data-quarto-table-cell-role="th">sqtl_IL</th>
<th data-quarto-table-cell-role="th">sqtl_LHb</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc2</th>
<th data-quarto-table-cell-role="th">sqtl_OFC</th>
<th data-quarto-table-cell-role="th">sqtl_PL</th>
<th data-quarto-table-cell-role="th">sqtl_PL2</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">geneId</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000066169</td>
<td>ENSRNOG00000066169</td>
<td>1</td>
<td>36112690</td>
<td>36122387</td>
<td>-</td>
<td>36122387</td>
<td>NaN</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000070168</td>
<td>Olr56</td>
<td>1</td>
<td>157231467</td>
<td>157232417</td>
<td>+</td>
<td>157231467</td>
<td>olfactory receptor family 51 subfamily F membe...</td>
<td>True</td>
<td>False</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070901</td>
<td>Irgq</td>
<td>1</td>
<td>80123925</td>
<td>80131881</td>
<td>+</td>
<td>80123925</td>
<td>immunity-related GTPase Q</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
</tbody>
</table>

<p>3 rows × 68 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for gene in corr_df.index:</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     gene_annot = annot_df.loc[gene]</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     corr_df['chr'].loc[gene] = gene_annot['chromosome']</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     interval = f"chr{gene_annot['chromosome']}_{gene_annot['tss']}_{gene_annot['tss']}"</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     path = os.path.join(predictions_dir, f"{interval}_predictions.h5")</span></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     if os.path.isfile(path):</span></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         predictions = h5py.File(path, "r")</span></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         pred_expr = np.average(predictions[interval][446:450, 4980])</span></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         corr_df['predicted'].loc[gene] = pred_expr</span></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     else:</span></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         continue</span></span>
<span id="cb9-12"></span>
<span id="cb9-13"></span>
<span id="cb9-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># corr_df.dropna().to_csv("reference_epigenome_predicted_vs_observed.csv", index=True)</span></span>
<span id="cb9-15"></span>
<span id="cb9-16">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reference_epigenome_predicted_vs_observed.csv"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb9-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(corr_df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                         tpm  predicted  chr
gene_id                                     
ENSRNOG00000065394  0.000000   0.002946  1.0
ENSRNOG00000065356  0.000000   0.004051  1.0
ENSRNOG00000070568  0.000912   0.003553  1.0
ENSRNOG00000065706  0.005029   0.005847  1.0
ENSRNOG00000069644  0.000265   0.001334  1.0
...                      ...        ...  ...
ENSRNOG00000067420  0.000000   0.001928    Y
ENSRNOG00000069298  0.000559   0.003280    Y
ENSRNOG00000066131  0.000529   0.003569    Y
ENSRNOG00000068239  0.000500   0.001887    Y
ENSRNOG00000069552  0.001088   0.001822    Y

[19493 rows x 3 columns]</code></pre>
</div>
</div>
<p>I ran Enformer on roughly ~30,000 intervals, but it looks like we only have predictions for 2/3 of them. I’ll investigate in another post.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Drop rows with NaN values</span></span>
<span id="cb11-2">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> corr_df.dropna()</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatter plot with colors based on column z</span></span>
<span id="cb11-5">plt.scatter(corr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>], corr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set labels and title</span></span>
<span id="cb11-8">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Br Mean TPM Gene Expression'</span>)</span>
<span id="cb11-9">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Rat Reference Gene Expression'</span>)</span>
<span id="cb11-10">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb11-11"></span>
<span id="cb11-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb11-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index_files/figure-html/cell-8-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">corr_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]].corr()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tpm</th>
<th data-quarto-table-cell-role="th">predicted</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">tpm</td>
<td>1.000000</td>
<td>0.433632</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">predicted</td>
<td>0.433632</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>The correlation between CAGE predictions and gene expression measured by relative abundance of transcripts is lower than we wanted. We’ll compare it with average gene expression in human brain tissue.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-2">gtex_tpm.head()</span></code></pre></div>
</div>
<p>Lastly, we’ll concatenate all the prediction matrices into one h5 file.</p>
</section>
</section>
<section id="concatenate-predictions" class="level2">
<h2 class="anchored" data-anchor-id="concatenate-predictions">Concatenate Predictions</h2>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> concatenate_predictions(predictions_dir, output_path):</span>
<span id="cb14-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_file:</span>
<span id="cb14-3">        files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb14-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files:</span>
<span id="cb14-5">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb14-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(os.path.join(predictions_dir, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_file:</span>
<span id="cb14-7">                output_file.create_dataset(interval, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_file[interval][()], shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">concatenate_predictions(reference_predictions, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/2023-08-16_predictions_some_missing_genes.h5"</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index.html</guid>
  <pubDate>Tue, 15 Aug 2023 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
