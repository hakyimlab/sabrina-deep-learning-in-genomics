<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>deep-learning-in-genomics</title>
<link>https://sabrinami.quarto.pub/deep-learning-in-genomics/index.html</link>
<atom:link href="https://sabrinami.quarto.pub/deep-learning-in-genomics/index.xml" rel="self" type="application/rss+xml"/>
<description>Sabrina&#39;s blog for Deep Learning in Genomics course</description>
<generator>quarto-1.3.361</generator>
<lastBuildDate>Mon, 28 Aug 2023 07:00:00 GMT</lastBuildDate>
<item>
  <title>Comparing the predicted reference epigenome to Enformer runs centered at the TSS and ground truth</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index.html</link>
  <description><![CDATA[ 




<p>We are trying to debug low correlation values between predicted reference CAGE values and reference observed gene expression by inspecting a few genes.</p>
<section id="select-genes" class="level2">
<h2 class="anchored" data-anchor-id="select-genes">Select Genes</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make sure the GPU is enabled </span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Start the colab kernel with GPU: Runtime -&gt; Change runtime type -&gt; GPU'</span></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gzip</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl</span>
<span id="cb1-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-15"></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb1-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'retina'</span></span>
<span id="cb1-19"></span>
<span id="cb1-20">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb1-21">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb1-22">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/reference_genome/hg38_genome.fasta'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-2">genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.sample(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</div>
</section>
<section id="run-enformer-at-the-tss" class="level2">
<h2 class="anchored" data-anchor-id="run-enformer-at-the-tss">Run Enformer at the TSS</h2>
<div class="cell" data-execution_count="17">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb3-4"></span>
<span id="cb3-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb3-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb3-7"></span>
<span id="cb3-8">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb3-9">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb3-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb3-11"></span>
<span id="cb3-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb3-13">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb3-14">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb3-15">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb3-16"></span>
<span id="cb3-17">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb3-19">      tape.watch(input_sequence)</span>
<span id="cb3-20">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb3-21">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb3-22">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb3-23"></span>
<span id="cb3-24">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb3-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-27">  </span>
<span id="cb3-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb3-29">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb3-31">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb3-32">    ax.set_title(title)</span>
<span id="cb3-33">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-34">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb3-35">  plt.tight_layout()</span>
<span id="cb3-36">  </span>
<span id="cb3-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb3-38">    </span>
<span id="cb3-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb3-40">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb3-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb3-42"></span>
<span id="cb3-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb3-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb3-45">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb3-46">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb3-47">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb3-48">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb3-49">                                    )</span>
<span id="cb3-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb3-51">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb3-52">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-53">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb3-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb3-55">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-56">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-57">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb3-58"></span>
<span id="cb3-59">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb3-61">    </span>
<span id="cb3-62"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb3-63">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path)</span>
<span id="cb4-2">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Create Interval object for each TSS</span></span>
<span id="cb5-2">intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>], row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>], row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>])</span>
<span id="cb5-3">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes.iterrows()]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">tss_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb6-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> index, gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>]):</span>
<span id="cb6-3">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> intervals[index]</span>
<span id="cb6-4">    sequence_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> one_hot_encode(fasta_extractor.extract(tss.resize(SEQUENCE_LENGTH)))</span>
<span id="cb6-5">    tss_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(sequence_one_hot[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
</section>
<section id="query-predicted-reference-epigenome-at-the-tss" class="level2">
<h2 class="anchored" data-anchor-id="query-predicted-reference-epigenome-at-the-tss">Query Predicted Reference Epigenome at the TSS</h2>
<div class="cell" data-execution_count="15">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb7-2"></span>
<span id="cb7-3">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb7-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (num_bins, len(tracks))</span></span>
<span id="cb7-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb7-18"></span>
<span id="cb7-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb7-20">    center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-21">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb7-22">    </span>
<span id="cb7-23">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb7-24">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb7-25">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb7-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if num_bins is odd</span></span>
<span id="cb7-27">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-28"></span>
<span id="cb7-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb7-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb7-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb7-32">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb7-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-34">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb7-35"></span>
<span id="cb7-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">predicted_reference_epigenome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb8-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> index, gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(genes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>]):</span>
<span id="cb8-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genes.iloc[index][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>]</span>
<span id="cb8-4">    pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genes.iloc[index][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>]</span>
<span id="cb8-5">    predicted_reference_epigenome[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, pos, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span>)</span></code></pre></div>
</div>
<p>We’ll save these matrices so we can come back to the same genes.</p>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with h5py.File('/home/s1mi/enformer_rat_data/output/hg38_tss_predictions.h5', 'w') as hf:</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     for key, value in tss_predictions.items():</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         hf[key] = value</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with h5py.File('/home/s1mi/enformer_rat_data/output/hg38_reference_epigenome_tss.h5', 'w') as hf:</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     for key, value in predicted_reference_epigenome.items():</span></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         hf[key] = value</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb10-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb10-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb10-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb10-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl</span>
<span id="cb10-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb10-9"></span>
<span id="cb10-10">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">predicted_reference_epigenome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb11-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/output/hg38_reference_epigenome_tss.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hf:</span>
<span id="cb11-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> hf.keys():</span>
<span id="cb11-4">        predicted_reference_epigenome[key] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hf[key][()]</span>
<span id="cb11-5">tss_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb11-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/output/hg38_tss_predictions.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hf:</span>
<span id="cb11-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> hf.keys():</span>
<span id="cb11-8">        tss_predictions[key] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hf[key][()]</span></code></pre></div>
</div>
</section>
<section id="compare-matrices" class="level2">
<h2 class="anchored" data-anchor-id="compare-matrices">Compare Matrices</h2>
<p>I used Laura’s matrix comparison functions, which can be expanded below:</p>
<div class="cell" data-execution_count="11">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_diffmat(mat1, mat2):</span>
<span id="cb12-2">    </span>
<span id="cb12-3">    diffmat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mat1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mat2</span>
<span id="cb12-4">    colwise_maxes1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(mat1, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb12-5">    colwise_maxes2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(mat2, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb12-6"></span>
<span id="cb12-7">    colwise_maxes_maxes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(colwise_maxes1, colwise_maxes2)</span>
<span id="cb12-8"></span>
<span id="cb12-9">    relmax3_diffmat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diffmat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> colwise_maxes_maxes</span>
<span id="cb12-10">    relmax3_diffmat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(relmax3_diffmat)</span>
<span id="cb12-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> relmax3_diffmat</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_summary(arr):</span>
<span id="cb12-14">    summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>: np.mean(arr),</span>
<span id="cb12-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"median"</span>: np.median(arr),</span>
<span id="cb12-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minimum"</span>: np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(arr),</span>
<span id="cb12-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maximum"</span>: np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(arr),</span>
<span id="cb12-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q1"</span>: np.percentile(arr, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>),</span>
<span id="cb12-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q3"</span>: np.percentile(arr, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>),</span>
<span id="cb12-21">    }</span>
<span id="cb12-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> summary</span>
<span id="cb12-23"></span>
<span id="cb12-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_hist(arr, bin_num, xlab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Value'</span>, ylab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Frequency'</span>, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Histogram'</span>):</span>
<span id="cb12-25">    plt.hist(arr, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bin_num)</span>
<span id="cb12-26">    plt.title(title)</span>
<span id="cb12-27">    plt.xlabel(xlab)</span>
<span id="cb12-28">    plt.ylabel(ylab)</span>
<span id="cb12-29">    plt.show()</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">diff_mats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {gene: get_diffmat(tss_predictions[gene], predicted_reference_epigenome[gene]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tss_predictions.keys()}</span>
<span id="cb13-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> diff_mats.keys():</span>
<span id="cb13-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, get_summary(diff_mats[gene]))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSG00000014257 summary:
 {'mean': 0.10938877, 'median': 0.04974805, 'minimum': 0.0, 'maximum': 1.0, 'q1': 0.010111116105690598, 'q3': 0.1516108550131321}
ENSG00000047457 summary:
 {'mean': 0.08590854, 'median': 0.03547225, 'minimum': 0.0, 'maximum': 0.99996144, 'q1': 0.007081934134475887, 'q3': 0.11259441636502743}
ENSG00000070193 summary:
 {'mean': 0.026367702, 'median': 0.010873516, 'minimum': 0.0, 'maximum': 0.985605, 'q1': 0.002833168429788202, 'q3': 0.031836215406656265}
ENSG00000085999 summary:
 {'mean': 0.07470728, 'median': 0.021258086, 'minimum': 0.0, 'maximum': 0.99999213, 'q1': 0.0033360121306031942, 'q3': 0.08667697757482529}
ENSG00000116685 summary:
 {'mean': 0.08169045, 'median': 0.022225916, 'minimum': 2.8047395e-10, 'maximum': 0.999989, 'q1': 0.003913101390935481, 'q3': 0.09082910791039467}
ENSG00000117724 summary:
 {'mean': 0.074016586, 'median': 0.02301056, 'minimum': 9.380969e-10, 'maximum': 0.99999017, 'q1': 0.003953242674469948, 'q3': 0.08899018913507462}
ENSG00000171853 summary:
 {'mean': 0.07515604, 'median': 0.019922873, 'minimum': 6.744178e-11, 'maximum': 0.99999994, 'q1': 0.0028778593987226486, 'q3': 0.08683663606643677}
ENSG00000180730 summary:
 {'mean': 0.089791544, 'median': 0.037485994, 'minimum': 8.220793e-09, 'maximum': 0.9999556, 'q1': 0.007638769224286079, 'q3': 0.12154612876474857}
ENSG00000184428 summary:
 {'mean': 0.07583916, 'median': 0.023095855, 'minimum': 0.0, 'maximum': 0.9999933, 'q1': 0.00410843885038048, 'q3': 0.09036805480718613}
ENSG00000187054 summary:
 {'mean': 0.12630975, 'median': 0.064154774, 'minimum': 0.0, 'maximum': 1.0, 'q1': 0.01706073572859168, 'q3': 0.17709220945835114}</code></pre>
</div>
</div>
<p>Since <code>get_diffmat</code> quantifies relative difference between two matrices, a maximum of 1 is quite high.</p>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">corr_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {key: np.empty(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> diff_mats.keys()}</span>
<span id="cb15-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> corr_dict.keys():</span>
<span id="cb15-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>):</span>
<span id="cb15-4">        col_corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(tss_predictions[gene][:, col], predicted_reference_epigenome[gene][:, col])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb15-5">        corr_dict[gene][col] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> col_corr</span></code></pre></div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> corr_dict.keys():</span>
<span id="cb16-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(get_summary(corr_dict[gene]))</span>
<span id="cb16-3">    plot_hist(corr_dict[gene], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'mean': -0.04785147985005888, 'median': -0.04247129995058821, 'minimum': -0.393485921068072, 'maximum': 0.509981085543981, 'q1': -0.09057495943261885, 'q3': -0.003294211203314511}
{'mean': -0.020498366469399766, 'median': -0.01635452627300118, 'minimum': -0.6671151615187328, 'maximum': 0.46799106943995916, 'q1': -0.06370733918391472, 'q3': 0.007784694436122131}
{'mean': 0.8845764960574595, 'median': 0.905038587998292, 'minimum': 0.29442496971600535, 'maximum': 0.9900524290440801, 'q1': 0.8661030004594839, 'q3': 0.9431178097172073}
{'mean': -0.004693486538049062, 'median': -0.023538338438319352, 'minimum': -0.21624727795007467, 'maximum': 0.5926171533980982, 'q1': -0.04864174469821785, 'q3': -0.0025296129930357956}
{'mean': -0.04003020470988491, 'median': -0.0165219043540768, 'minimum': -0.5986776492089833, 'maximum': 0.31508676003094743, 'q1': -0.037667550234998355, 'q3': -0.0002014276916713896}
{'mean': 0.00018114387424161856, 'median': 0.0026720968249750016, 'minimum': -0.5204256293106989, 'maximum': 0.4990381262855727, 'q1': -0.018076527923798567, 'q3': 0.03691570827431883}
{'mean': 0.020094886564591453, 'median': -0.005898890241815208, 'minimum': -0.1869483625614869, 'maximum': 0.5018360419940202, 'q1': -0.03366495561284697, 'q3': 0.03865989991911592}
{'mean': -0.027029690715846363, 'median': -0.020606840475182086, 'minimum': -0.2644731244631044, 'maximum': 0.4747824507436258, 'q1': -0.06163065018960191, 'q3': 0.004924883348254636}
{'mean': -0.01409076005018665, 'median': -0.00701936003908897, 'minimum': -0.4369832330752177, 'maximum': 0.5233482177668853, 'q1': -0.042085071093807665, 'q3': 0.025758731029570183}
{'mean': -0.0659560101027388, 'median': -0.06347865286362854, 'minimum': -0.4821908594547957, 'maximum': 0.21632240243055753, 'q1': -0.10709060268727029, 'q3': -0.024248362922380744}</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-7.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-8.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-9.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-10.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-16-output-11.png" class="img-fluid"></p>
</div>
</div>
<p>This is pretty bad. But we’ll still plot the brain CAGE tracks, in case the root of our problems is bin indexing.</p>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_CAGE_tracks(gene):</span>
<span id="cb18-2">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb18-3">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb18-4">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb18-5">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, start, end)</span>
<span id="cb18-6">    tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Centered at TSS"</span>: tss_predictions[gene][:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>],</span>
<span id="cb18-7">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Queried from reference"</span>: predicted_reference_epigenome[gene][:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]}</span>
<span id="cb18-8">    plot_tracks(tracks, target_interval)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">annot_df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">external_gene_name</th>
<th data-quarto-table-cell-role="th">chromosome_name</th>
<th data-quarto-table-cell-role="th">transcription_start_site</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142611</td>
<td>PRDM16</td>
<td>1</td>
<td>3069203</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000157911</td>
<td>PEX10</td>
<td>1</td>
<td>2412564</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142655</td>
<td>PEX14</td>
<td>1</td>
<td>10474950</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000149527</td>
<td>PLCH2</td>
<td>1</td>
<td>2476289</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000171621</td>
<td>SPSB1</td>
<td>1</td>
<td>9292894</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tss_predictions.keys():</span>
<span id="cb20-2">    plot_CAGE_tracks(gene)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-7.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-8.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-9.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index_files/figure-html/cell-19-output-10.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-28-comparing-enformer-at-gene-tss-vs-reference-epigenome-vs-encode-experiments/index.html</guid>
  <pubDate>Mon, 28 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Testing Enformer pipeline on reference genome</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-25-debugging-enformer-pipeline-with-parsl/index.html</link>
  <description><![CDATA[ 




<p>Our changes to the pipeline worked!</p>
<pre class="{bash}"><code>module load conda
conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools
cd /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-25-debugging-enformer-pipeline-with-parsl
python /home/s1mi/Github/shared_pipelines/enformer_pipeline_reference/scripts/enformer_predict.py --parameters test_reference.json
</code></pre>
<pre class="{python}"><code>import h5py
with h5py.File("/grand/TFXcan/imlab/users/sabrina/reftile_project/predictions_folder/chr5_reference_overlapping_regions/predictions_2023-08-25/enformer_predictions/chr5_reference/haplotype0/chr5_0_114688_predictions.h5", "r") as f:
    predictions = f['chr5_0_114688'][()]
    print(predictions)</code></pre>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-25-debugging-enformer-pipeline-with-parsl/index.html</guid>
  <pubDate>Fri, 25 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Cisd2 Correlation across rats</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-24-Cisd2-correlation-across-rats/index.html</link>
  <description><![CDATA[ 




<p>We picked Cisd2 out the selection process.</p>
<section id="run-pipeline" class="level3">
<h3 class="anchored" data-anchor-id="run-pipeline">Run Pipeline</h3>
<p>We centered the interval at Cisd2’s TSS chr2:223868946.</p>
<pre><code>module load conda
conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools
cd /home/s1mi/Github/shared_pipelines/enformer_pipeline
python scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-24-Cisd2-correlation-across-rats/Cisd2_personalized.json</code></pre>
</section>
<section id="compare-to-observed" class="level3">
<h3 class="anchored" data-anchor-id="compare-to-observed">Compare to Observed</h3>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSRNOG00000048258"</span></span>
<span id="cb3-2">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb3-3">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/personalized_Br_genes/predictions_2023-08-24/enformer_predictions"</span></span>
<span id="cb3-4">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_174805/3252868614.py:4: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb5-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> df.index:</span>
<span id="cb6-2">    haplo0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype0/chr2_223868946_223868946_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb6-3">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> haplo0[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr2_223868946_223868946"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-4">    df.loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(predictions)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">df.corr()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">observed</th>
<th data-quarto-table-cell-role="th">predicted</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">observed</td>
<td>1.000000</td>
<td>0.318211</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">predicted</td>
<td>0.318211</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"></span>
<span id="cb8-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>]</span>
<span id="cb8-3">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]</span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb8-5">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb8-8">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb8-9">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb8-10">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cisd2'</span>)</span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb8-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-24-Cisd2-correlation-across-rats/index_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-24-Cisd2-correlation-across-rats/index.html</guid>
  <pubDate>Thu, 24 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation of Enformer CAGE predictions on rn7 reference genome and measured gene expression in Br rats by chromosome</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-across-rn7-genes-by-chromosome/index.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/output/rn7_reference_predicted_vs_observed_gene_expression.csv"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-2"></span>
<span id="cb2-3">gene_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> corr_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr'</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>).to_dict()</span>
<span id="cb2-4">corr_df.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">chr_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(gene_dict.keys())</span>
<span id="cb3-2">corr_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>: pd.DataFrame() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list}</span>
<span id="cb3-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb3-4">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span>
<span id="cb3-5">    corr_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> corr_df.loc[gene_list].drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr'</span>])</span>
<span id="cb3-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chromosome"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"correlation:"</span>, corr_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].corr().iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Chromosome 1 correlation: 0.4332344991649219
Chromosome 12 correlation: 0.6223371189015416
Chromosome 13 correlation: 0.47875298103605657
Chromosome 14 correlation: 0.4418574220509124
Chromosome 17 correlation: 0.508232166894913
Chromosome 19 correlation: 0.5805874016394152
Chromosome 2 correlation: 0.5214255605049084
Chromosome 20 correlation: 0.6361443363364743
Chromosome 3 correlation: 0.46132605944208854
Chromosome 4 correlation: 0.5244393504977051
Chromosome 5 correlation: 0.22608843633604256
Chromosome 6 correlation: 0.5757699229647969
Chromosome 9 correlation: 0.5372756452275411
Chromosome X correlation: 0.3264607697555213
Chromosome Y correlation: 0.894836988624044</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-across-rn7-genes-by-chromosome/index.html</guid>
  <pubDate>Wed, 23 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation between Enformer reference CAGE prediction and GTEx brain tissue expression across genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-between-Enformer-and-GTEx-expression-across-genes-by-chromosome/index.html</link>
  <description><![CDATA[ 




<section id="collect-predicted-and-observed-reference-gene-expression-for-each-chromosome" class="level2">
<h2 class="anchored" data-anchor-id="collect-predicted-and-observed-reference-gene-expression-for-each-chromosome">Collect predicted and observed reference gene expression for each chromosome</h2>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> parsl</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> parsl <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> python_app</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> parsl.configs.local_threads <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> config</span>
<span id="cb1-7">parsl.load(config)</span>
<span id="cb1-8"></span>
<span id="cb1-9">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (num_bins, len(tracks))</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-24"></span>
<span id="cb1-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb1-26">    center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-27">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb1-28">    </span>
<span id="cb1-29">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-30">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb1-31">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb1-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if num_bins is odd</span></span>
<span id="cb1-33">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-34"></span>
<span id="cb1-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb1-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-38">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb1-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-40">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb1-41"></span>
<span id="cb1-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## create lists of genes on each chromomsome</span></span>
<span id="cb2-2">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-3">gene_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>).to_dict()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Initialize lists of CAGE predictions for each gene</span></span>
<span id="cb3-2">hg38_annot.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-3">chr_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"21"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"22"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>]</span>
<span id="cb3-4">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {key: [] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Function to put CAGE predictions in list (in the same order as gene list by chromosome)</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@python_app</span></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_genes(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>):</span>
<span id="cb4-4">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-6">        bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>], tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb4-7">        CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].append(np.average(bins))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">app_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Collect CAGE predictions in parallel across genes</span></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb5-4">    app_futures.append(query_genes(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>))</span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Wait for all chromosomes to finish</span></span>
<span id="cb5-6">exec_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> app_futures]</span></code></pre></div>
</div>
</section>
<section id="count-missing-genes-in-reference-enformer" class="level2">
<h2 class="anchored" data-anchor-id="count-missing-genes-in-reference-enformer">Count missing genes in reference Enformer</h2>
<p>We are only missing TSS CAGE values for 12 genes, all on chromosome 12.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb6-2">    n_missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(np.isnan(np.array(CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>])))</span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n_missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb6-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chromosome"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"missing"</span>, n_missing, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes in the predicted human reference epigenome"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Chromosome 12 missing 27 genes in the predicted human reference epigenome</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">merged_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>: pd.DataFrame(index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list}</span>
<span id="cb8-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb8-3">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CAGE_predictions[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-2">gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb9-3">gtex_tpm.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb9-5">gtex_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-6">gtex_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb10-2">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].index.intersection(gtex_tpm.index)</span>
<span id="cb10-3">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].loc[gene_list]</span>
<span id="cb10-4">    merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].merge(gtex_mean_tpm, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>).dropna()</span>
<span id="cb10-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes on chromosome"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"to be used in correlation test"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1977 genes on chromosome 1 to be used in correlation test
1201 genes on chromosome 2 to be used in correlation test
1031 genes on chromosome 3 to be used in correlation test
738 genes on chromosome 4 to be used in correlation test
858 genes on chromosome 5 to be used in correlation test
996 genes on chromosome 6 to be used in correlation test
878 genes on chromosome 7 to be used in correlation test
662 genes on chromosome 8 to be used in correlation test
748 genes on chromosome 9 to be used in correlation test
707 genes on chromosome 10 to be used in correlation test
1259 genes on chromosome 11 to be used in correlation test
965 genes on chromosome 12 to be used in correlation test
314 genes on chromosome 13 to be used in correlation test
587 genes on chromosome 14 to be used in correlation test
566 genes on chromosome 15 to be used in correlation test
815 genes on chromosome 16 to be used in correlation test
1133 genes on chromosome 17 to be used in correlation test
259 genes on chromosome 18 to be used in correlation test
1380 genes on chromosome 19 to be used in correlation test
520 genes on chromosome 20 to be used in correlation test
213 genes on chromosome 21 to be used in correlation test
416 genes on chromosome 22 to be used in correlation test
857 genes on chromosome X to be used in correlation test</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chr_list:</span>
<span id="cb12-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chromosome"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"correlation:"</span>, merged_dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>].corr().iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Chromosome 1 correlation: 0.6279205208330061
Chromosome 2 correlation: 0.4577084823841293
Chromosome 3 correlation: 0.5590473627720567
Chromosome 4 correlation: 0.6622514111261547
Chromosome 5 correlation: 0.5659772926746754
Chromosome 6 correlation: 0.5405769582022613
Chromosome 7 correlation: 0.4736588849210786
Chromosome 8 correlation: 0.6197347486783672
Chromosome 9 correlation: 0.6160610260212112
Chromosome 10 correlation: 0.7113057334708601
Chromosome 11 correlation: 0.5348642297249536
Chromosome 12 correlation: 0.6363452896594721
Chromosome 13 correlation: 0.4445465856319643
Chromosome 14 correlation: 0.35533005480427243
Chromosome 15 correlation: 0.664532588686653
Chromosome 16 correlation: 0.6644114213442329
Chromosome 17 correlation: 0.597201417137115
Chromosome 18 correlation: 0.24144231917848386
Chromosome 19 correlation: 0.5346556958916295
Chromosome 20 correlation: 0.6870184790969254
Chromosome 21 correlation: 0.7286380655413807
Chromosome 22 correlation: 0.5212558005156317
Chromosome X correlation: 0.560185751334359</code></pre>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">all_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(merged_dict.values())</span>
<span id="cb14-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Correlation across all genes:"</span>)</span>
<span id="cb14-3">all_genes.corr()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Correlation across all genes:</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="22">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
<th data-quarto-table-cell-role="th">gtex</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">enformer</td>
<td>1.000000</td>
<td>0.539788</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">gtex</td>
<td>0.539788</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-22-correlation-between-Enformer-and-GTEx-expression-across-genes-by-chromosome/index.html</guid>
  <pubDate>Tue, 22 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation between human reference CAGE predictions to mean expression across GTEx genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-21-comparing-enformer-CAGE-prediction-to-GTEx-brain-cortex-expression-across-genes/index.html</link>
  <description><![CDATA[ 




<p>We learned that pieces of the hg38 reference epigenome are missing, including all gene regions on chromosomes 5, 6, and 7, and a handful (27 out of 1018) on chromosome 12. Based off the genes we could query, the correlation between predicted expression from human reference genome and mean expression in GTEx brain cortex tissues is 0.536, which is too low, even when we consider the missing genes.</p>
<p>We will definitely need to rerun Enformer on chromosomes 5-7, but I’m still stuck on how we’ll debug the low correlation. I double checked that the fasta file and gene annotation were both in hg38.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"></span>
<span id="cb1-5">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (num_bins, len(tracks))</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-20"></span>
<span id="cb1-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb1-22">    center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-23">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb1-24">    </span>
<span id="cb1-25">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-26">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb1-27">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb1-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if num_bins is odd</span></span>
<span id="cb1-29">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-30"></span>
<span id="cb1-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb1-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-34">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb1-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-36">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb1-37"></span>
<span id="cb1-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>)</span>
<span id="cb2-2">hg38_annot.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">external_gene_name</th>
<th data-quarto-table-cell-role="th">chromosome_name</th>
<th data-quarto-table-cell-role="th">transcription_start_site</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142611</td>
<td>PRDM16</td>
<td>1</td>
<td>3069203</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000157911</td>
<td>PEX10</td>
<td>1</td>
<td>2412564</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142655</td>
<td>PEX14</td>
<td>1</td>
<td>10474950</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000149527</td>
<td>PLCH2</td>
<td>1</td>
<td>2476289</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000171621</td>
<td>SPSB1</td>
<td>1</td>
<td>9292894</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot[hg38_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>].index</span>
<span id="cb3-2">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-3">invalid_queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb3-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>]</span>
<span id="cb3-6">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>]</span>
<span id="cb3-7">    bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>,tss, num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb3-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(np.isnan(bins)):</span>
<span id="cb3-9">        invalid_queries.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-10">    CAGE_predictions.append(np.average(bins))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="84">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(invalid_queries), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"out of"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(CAGE_predictions), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TSS regions missing from reference epigenome"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2849 out of 19625 TSS regions missing from reference epigenome</code></pre>
</div>
</div>
<div class="cell" data-execution_count="85">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of missing regions by chromosme:"</span>)</span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(Counter(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: x.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], invalid_queries)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Number of missing regions by chromosme:
Counter({'6': 1031, '7': 919, '5': 872, '12': 27})</code></pre>
</div>
</div>
<div class="cell" data-execution_count="90">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total number of genes on those chromosome:"</span>)</span>
<span id="cb8-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>({key: Counter(hg38_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>])[key] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>]})</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Total number of genes on those chromosome:
{'6': 1031, '7': 919, '5': 872, '12': 1018}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="75">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">gex_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer"</span>: CAGE_predictions}, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene_list)</span>
<span id="cb10-2">gex_df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="75">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142611</td>
<td>4.474399</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000157911</td>
<td>6.886287</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142655</td>
<td>21.222824</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000149527</td>
<td>0.027461</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000171621</td>
<td>10.673162</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="76">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-2">gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> gene: gene.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb11-3">gtex_tpm.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="77">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gex_df.index.intersection(gtex_tpm.index)</span>
<span id="cb12-2">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.loc[gene_list]</span>
<span id="cb12-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gtex_tpm.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes in both GTEx and BioMart datasets"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>19107 genes in both GTEx and BioMart datasets</code></pre>
</div>
</div>
<div class="cell" data-execution_count="80">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average gene expression</span></span>
<span id="cb14-2">gtex_mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gtex_tpm.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]).mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-3">gtex_mean_tpm.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gtex'</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join observed gene expression with Enformer CAGE predicted</span></span>
<span id="cb14-5">merged_gex_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gex_df.merge(gtex_mean_tpm, left_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inner'</span>).dropna()</span>
<span id="cb14-6">merged_gex_df.head()</span>
<span id="cb14-7">merged_gex_df.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed_vs_predicted_expression_hg38_genes.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="80">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
<th data-quarto-table-cell-role="th">gtex</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000000003</td>
<td>0.318157</td>
<td>4.587454</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000000005</td>
<td>2.456774</td>
<td>0.208880</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000000419</td>
<td>36.233582</td>
<td>26.515365</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000000457</td>
<td>6.147785</td>
<td>2.538695</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000000460</td>
<td>3.142622</td>
<td>0.840966</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="81">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">merged_gex_df.corr()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="81">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">enformer</th>
<th data-quarto-table-cell-role="th">gtex</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">enformer</td>
<td>1.000000</td>
<td>0.535759</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">gtex</td>
<td>0.535759</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-21-comparing-enformer-CAGE-prediction-to-GTEx-brain-cortex-expression-across-genes/index.html</guid>
  <pubDate>Tue, 22 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>biomaRt tutorial for querying gene annotation</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-18-gene-annotation-query-example-hg38/index.html</link>
  <description><![CDATA[ 




<p>BioMart is a database with gene annotations for various species, builds, etc. We can use the package biomaRt package to query information.</p>
<section id="install-biomart" class="level3">
<h3 class="anchored" data-anchor-id="install-biomart">Install biomaRt</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">requireNamespace</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BiocManager"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb1-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BiocManager"</span>)</span>
<span id="cb1-3">BiocManager<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"biomaRt"</span>)</span></code></pre></div>
</div>
</section>
<section id="example-1-getting-a-list-of-human-genes-and-their-tss-in-hg38" class="level3">
<h3 class="anchored" data-anchor-id="example-1-getting-a-list-of-human-genes-and-their-tss-in-hg38">Example 1: Getting a list of human genes and their TSS in hg38</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(biomaRt)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
<p>We first want to verify gene annotation is in build hg38.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">ensembl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useEnsembl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">biomart =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes"</span>)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">searchDatasets</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mart =</span> ensembl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                 dataset              description    version
80 hsapiens_gene_ensembl Human genes (GRCh38.p14) GRCh38.p14</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># connect to BioMart database for human genes</span></span>
<span id="cb5-2">ensembl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useEnsembl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">biomart =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens_gene_ensembl"</span>)</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># query canonical TSS for protein-coding genes on chr 1-22, X, and Y</span></span>
<span id="cb5-4">protein_coding_TSS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> biomaRt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getBM</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">attributes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_start"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_end"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_biotype"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcription_start_site"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_is_canonical"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strand"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filters =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_biotype"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_is_canonical"</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_coding"</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mart =</span> ensembl)</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract columns of interest</span></span>
<span id="cb5-7">protein_coding_TSS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> protein_coding_TSS[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcription_start_site"</span>)]</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write to file</span></span>
<span id="cb5-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.table</span>(protein_coding_TSS, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_coding_TSS.tsv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
</section>
<section id="example-2-getting-a-list-of-rat-genes-with-orthologs-in-humans" class="level3">
<h3 class="anchored" data-anchor-id="example-2-getting-a-list-of-rat-genes-with-orthologs-in-humans">Example 2: Getting a list of rat genes with orthologs in humans</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listMarts</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>               biomart                version
1 ENSEMBL_MART_ENSEMBL      Ensembl Genes 110
2   ENSEMBL_MART_MOUSE      Mouse strains 110
3     ENSEMBL_MART_SNP  Ensembl Variation 110
4 ENSEMBL_MART_FUNCGEN Ensembl Regulation 110</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># connect to BioMart database for rat genes</span></span>
<span id="cb8-2">ensembl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useEnsembl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">biomart =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rnorvegicus_gene_ensembl"</span>)</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># query all relevant data and store in a dataframe</span></span>
<span id="cb8-5">ortho_rat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getBM</span>( <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">attributes=</span></span>
<span id="cb8-6">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl_gene_id"</span>, </span>
<span id="cb8-7">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens_homolog_ensembl_gene"</span>,</span>
<span id="cb8-8">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>),</span>
<span id="cb8-9">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filters =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"with_hsapiens_homolog"</span>,</span>
<span id="cb8-10">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb8-11">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mart =</span> ensembl)</span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write to file</span></span>
<span id="cb8-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.table</span>(ortho_rat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog_genes_rats_humans.tsv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-18-gene-annotation-query-example-hg38/index.html</guid>
  <pubDate>Fri, 18 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Querying Human Reference Epigenome</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-17-querying-human-reference-epigenome/all_hg38_genes.html</link>
  <description><![CDATA[ 




<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-7"></span>
<span id="cb1-8"></span>
<span id="cb1-9">enfref_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/grand/TFXcan/imlab/users/lvairus/reftile_project/enformer-reference-epigenome"</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_epigenome(chr_num, center_bp, num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        path_to_enfref (str): path to the directory containing the concatenated reference enformer files</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        chr_num (int/string): chromosome number</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        center_bp (int): center base pair position (1-indexed)</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_bins (int): number of bins to extract centered around center_bp (default: 896) </span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            note: if the number of bins is even, the center bin will be in the second half of the array</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tracks (int list): list of tracks to extract (default: all 5313 tracks)</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        epigen (np.array): enformer predictions centered at center_bp of shape (num_bins, len(tracks))</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-24"></span>
<span id="cb1-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from position choose center bin</span></span>
<span id="cb1-26">    center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-27">    center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_ind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb1-28">    </span>
<span id="cb1-29">    half_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-30">    start_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> half_bins</span>
<span id="cb1-31">    end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> half_bins</span>
<span id="cb1-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if num_bins is odd</span></span>
<span id="cb1-33">        end_bin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-34"></span>
<span id="cb1-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get tracks if list provided</span></span>
<span id="cb1-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-38">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, :] </span>
<span id="cb1-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-40">            epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chr_num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>][start_bin:end_bin, tracks] </span>
<span id="cb1-41"></span>
<span id="cb1-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> epigen</span></code></pre></div>
</div>
</section>
<section id="collect-tss-for-all-human-genes" class="level2">
<h2 class="anchored" data-anchor-id="collect-tss-for-all-human-genes">Collect TSS for all human genes</h2>
<p>We collected all protein-coding genes and their cannonical TSS using the biomaRt package.</p>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"></span>
<span id="cb2-2">hg38_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/hg38.protein_coding_TSS.txt"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ensembl_gene_id'</span>)</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(hg38_annot.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes with TSS annotation"</span>)</span>
<span id="cb2-4">hg38_annot.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>19688 genes with TSS annotation</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">external_gene_name</th>
<th data-quarto-table-cell-role="th">chromosome_name</th>
<th data-quarto-table-cell-role="th">transcription_start_site</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">ensembl_gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142611</td>
<td>PRDM16</td>
<td>1</td>
<td>3069203</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000157911</td>
<td>PEX10</td>
<td>1</td>
<td>2412564</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000142655</td>
<td>PEX14</td>
<td>1</td>
<td>10474950</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSG00000149527</td>
<td>PLCH2</td>
<td>1</td>
<td>2476289</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSG00000171621</td>
<td>SPSB1</td>
<td>1</td>
<td>9292894</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>We computed the predicted human reference epigenome by running Enformer on all intervals spanning the genome and concatenting the results. Now we extract the CAGE:Brain track at the bins where each gene’s TSS fall in order to quantify relative expression across genes.</p>
</section>
<section id="query-reference-epigenome-at-tss" class="level2">
<h2 class="anchored" data-anchor-id="query-reference-epigenome-at-tss">Query reference epigenome at TSS</h2>
<p>I found that querying the epigenome at certain positions returned NA, so I investigated those positions further by querying a larger window and plotting the CAGE track 4980.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> hg38_annot.index:</span>
<span id="cb4-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome_name'</span>]</span>
<span id="cb4-4">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hg38_annot.loc[gene][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcription_start_site'</span>]</span>
<span id="cb4-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_epigenome(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>,tss, num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> np.isnan(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span>):</span>
<span id="cb4-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid query:"</span>, gene, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"at"</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb4-9">    CAGE_predictions.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Invalid query: ENSG00000173451 at 12:71664301</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>enfref_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr12_cat.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb6-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matrix shape:"</span>, f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>].shape)</span>
<span id="cb6-3">    center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71664301</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb6-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENSG00000173451 TTS at bin"</span>, center)</span>
<span id="cb6-5">    epigen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>][center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>:center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb6-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of NA along track:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(np.isnan(epigen)))</span>
<span id="cb6-7">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>matrix shape: (1041214, 5313)
ENSG00000173451 TTS at bin 559877
Number of NA along track: 448</code></pre>
</div>
</div>
<p>We adapted a function from the Enformer usage notebook to plot a single track.</p>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_track(title, y, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb8-2">  fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height))</span>
<span id="cb8-3">  ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb8-4">  ax.set_title(title)</span>
<span id="cb8-5">  sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-6">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb8-7">  plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr12'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71664301</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71664301</span>)</span>
<span id="cb9-2">plot_track(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, ENSG00000173451'</span>, epigen, tss.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-17-querying-human-reference-epigenome/all_hg38_genes_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-17-querying-human-reference-epigenome/all_hg38_genes.html</guid>
  <pubDate>Thu, 17 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Testing the Enformer pipeline’s handling of unphased VCFs</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/average_haplotype_test.html</link>
  <description><![CDATA[ 




<section id="read-in-h5-prediction-file" class="level3">
<h3 class="anchored" data-anchor-id="read-in-h5-prediction-file">Read in h5 prediction file</h3>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_rat_single_gene/predictions_2023-08-16/enformer_predictions/000789972A/haplotype0/chr20_12118762_12118762_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb2-2">predictions1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr20_12118762_12118762'</span>][()]</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(predictions1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[0.23258275 0.2962714  0.52013165 ... 0.19615567 1.1101408  0.25560504]
 [0.15570731 0.20205402 0.3755348  ... 0.04365927 0.24989623 0.08517855]
 [0.1536611  0.21689793 0.4510562  ... 0.05227472 0.2147567  0.08478698]
 ...
 [0.1794057  0.22463816 0.29514343 ... 0.01105995 0.02652512 0.03385386]
 [0.1694869  0.20448665 0.26207498 ... 0.01688805 0.04071837 0.06028533]
 [0.15269741 0.20196484 0.22278813 ... 0.02438667 0.03900523 0.05988767]]</code></pre>
</div>
</div>
</section>
<section id="run-non-pipeline-enformer" class="level3">
<h3 class="anchored" data-anchor-id="run-non-pipeline-enformer">Run non-pipeline Enformer</h3>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EnformerVCF</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb4-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/reference_genome/rn7_genome.fasta'</span></span>
<span id="cb4-4">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read VCFs and encode haplotypes</span></span>
<span id="cb5-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>)</span>
<span id="cb5-3">chr20_vcf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.read_vcf(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/enformer_rat_data/genotypes/BrainVCFs/chr20.vcf.gz"</span>)</span>
<span id="cb5-4">haplo1, haplo2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.vcf_to_seq(target_interval, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'000789972A'</span>, chr20_vcf, fasta_extractor)</span>
<span id="cb5-5">haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo1))[np.newaxis]</span>
<span id="cb5-6">haplo2_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo2))[np.newaxis]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">mean_haplo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo2_enc) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb6-2">predictions2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(mean_haplo)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"There are"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(predictions1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> predictions2)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between the two matrices."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are 0 differences between the two matrices.</code></pre>
</div>
</div>
<p>It looks like our edits worked!</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/average_haplotype_test.html</guid>
  <pubDate>Wed, 16 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Correlation of Enformer CAGE predictions and observed expression across all rn7 genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index.html</link>
  <description><![CDATA[ 




<p>Our goal is to test whether Enformer can determine relative gene expression levels in rat Brain tissues. We used mean gene expression in Br rats as the ground truth, and predicted the CAGE Brain track at each gene’s TSS. We found a correlation of 0.45, which we still need to compare to the same experiment with human data to determine whether this is high or low.</p>
<section id="reference-genome" class="level2">
<h2 class="anchored" data-anchor-id="reference-genome">Reference Genome</h2>
<section id="read-in-expression-files" class="level3">
<h3 class="anchored" data-anchor-id="read-in-expression-files">Read in expression files</h3>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-2">tpm.head()</span></code></pre></div>
</div>
</section>
<section id="calculate-average-gene-expression" class="level3">
<h3 class="anchored" data-anchor-id="calculate-average-gene-expression">Calculate average gene expression</h3>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">mean_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm.iloc[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(mean_tpm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>gene_id
ENSRNOG00000065394    0.000000
ENSRNOG00000065356    0.000000
ENSRNOG00000070568    0.000912
ENSRNOG00000065706    0.005029
ENSRNOG00000069644    0.000265
                        ...   
ENSRNOG00000067420    0.000000
ENSRNOG00000069298    0.000559
ENSRNOG00000066131    0.000529
ENSRNOG00000068239    0.000500
ENSRNOG00000069552    0.001088
Length: 30231, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">mean_iqn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iqn.iloc[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(mean_iqn)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>gene_id
ENSRNOG00000065394    0.000000
ENSRNOG00000065356    0.000000
ENSRNOG00000070568    0.052617
ENSRNOG00000065706    0.022574
ENSRNOG00000069644    0.011569
                        ...   
ENSRNOG00000067420    0.000000
ENSRNOG00000069298    0.004439
ENSRNOG00000066131    0.008208
ENSRNOG00000068239    0.004439
ENSRNOG00000069552    0.017464
Length: 30231, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Put both means into dataframe</span></span>
<span id="cb7-2">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>: mean_tpm, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'iqn'</span>: mean_iqn, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>: np.full(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30231</span>, np.nan), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr'</span>: np.full(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30231</span>, np.nan)})</span>
<span id="cb7-3">corr_df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="30">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tpm</th>
<th data-quarto-table-cell-role="th">iqn</th>
<th data-quarto-table-cell-role="th">predicted</th>
<th data-quarto-table-cell-role="th">chr</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000065394</td>
<td>0.000000</td>
<td>0.000000</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065356</td>
<td>0.000000</td>
<td>0.000000</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070568</td>
<td>0.000912</td>
<td>0.052617</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065706</td>
<td>0.005029</td>
<td>0.022574</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000069644</td>
<td>0.000265</td>
<td>0.011569</td>
<td>NaN</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="calculate-gene-expression-from-enformer-predictions-on-reference-genome" class="level3">
<h3 class="anchored" data-anchor-id="calculate-gene-expression-from-enformer-predictions-on-reference-genome">Calculate gene expression from Enformer predictions on reference genome</h3>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">reference_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes/predictions_2023-08-11/enformer_predictions/reference_Br/haplotype0"</span></span>
<span id="cb8-2"></span>
<span id="cb8-3">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb8-4">annot_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_36254/3273646084.py:3: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geneSymbol</th>
<th data-quarto-table-cell-role="th">chromosome</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">strand</th>
<th data-quarto-table-cell-role="th">tss</th>
<th data-quarto-table-cell-role="th">description</th>
<th data-quarto-table-cell-role="th">hasEqtl</th>
<th data-quarto-table-cell-role="th">expr_BLA</th>
<th data-quarto-table-cell-role="th">expr_Brain</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">sqtl_BLA</th>
<th data-quarto-table-cell-role="th">sqtl_Brain</th>
<th data-quarto-table-cell-role="th">sqtl_Eye</th>
<th data-quarto-table-cell-role="th">sqtl_IL</th>
<th data-quarto-table-cell-role="th">sqtl_LHb</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc2</th>
<th data-quarto-table-cell-role="th">sqtl_OFC</th>
<th data-quarto-table-cell-role="th">sqtl_PL</th>
<th data-quarto-table-cell-role="th">sqtl_PL2</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">geneId</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000066169</td>
<td>ENSRNOG00000066169</td>
<td>1</td>
<td>36112690</td>
<td>36122387</td>
<td>-</td>
<td>36122387</td>
<td>NaN</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000070168</td>
<td>Olr56</td>
<td>1</td>
<td>157231467</td>
<td>157232417</td>
<td>+</td>
<td>157231467</td>
<td>olfactory receptor family 51 subfamily F membe...</td>
<td>True</td>
<td>False</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070901</td>
<td>Irgq</td>
<td>1</td>
<td>80123925</td>
<td>80131881</td>
<td>+</td>
<td>80123925</td>
<td>immunity-related GTPase Q</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
</tbody>
</table>

<p>3 rows × 68 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for gene in corr_df.index:</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     gene_annot = annot_df.loc[gene]</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     corr_df['chr'].loc[gene] = gene_annot['chromosome']</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     interval = f"chr{gene_annot['chromosome']}_{gene_annot['tss']}_{gene_annot['tss']}"</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     path = os.path.join(predictions_dir, f"{interval}_predictions.h5")</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     if os.path.isfile(path):</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         predictions = h5py.File(path, "r")</span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         pred_expr = np.average(predictions[interval][446:450, 4980])</span></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         corr_df['predicted'].loc[gene] = pred_expr</span></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     else:</span></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         continue</span></span>
<span id="cb10-12"></span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># corr_df.dropna().to_csv("reference_epigenome_predicted_vs_observed.csv", index=True)</span></span>
<span id="cb10-15"></span>
<span id="cb10-16">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reference_epigenome_predicted_vs_observed.csv"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb10-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(corr_df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                         tpm  predicted  chr
gene_id                                     
ENSRNOG00000065394  0.000000   0.002946  1.0
ENSRNOG00000065356  0.000000   0.004051  1.0
ENSRNOG00000070568  0.000912   0.003553  1.0
ENSRNOG00000065706  0.005029   0.005847  1.0
ENSRNOG00000069644  0.000265   0.001334  1.0
...                      ...        ...  ...
ENSRNOG00000067420  0.000000   0.001928    Y
ENSRNOG00000069298  0.000559   0.003280    Y
ENSRNOG00000066131  0.000529   0.003569    Y
ENSRNOG00000068239  0.000500   0.001887    Y
ENSRNOG00000069552  0.001088   0.001822    Y

[19493 rows x 3 columns]</code></pre>
</div>
</div>
<p>I ran Enformer on roughly ~30,000 intervals, but it looks like we only have predictions for 2/3 of them. I’ll investigate in another post.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Drop rows with NaN values</span></span>
<span id="cb12-2">corr_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> corr_df.dropna()</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatter plot with colors based on column z</span></span>
<span id="cb12-5">plt.scatter(corr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>], corr_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set labels and title</span></span>
<span id="cb12-8">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Br Mean TPM Gene Expression'</span>)</span>
<span id="cb12-9">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Rat Reference Gene Expression'</span>)</span>
<span id="cb12-10">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb12-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index_files/figure-html/cell-9-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">corr_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpm'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]].corr()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tpm</th>
<th data-quarto-table-cell-role="th">predicted</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">tpm</td>
<td>1.000000</td>
<td>0.433632</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">predicted</td>
<td>0.433632</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>The correlation between CAGE predictions and gene expression measured by relative abundance of transcripts is lower than we wanted. We’ll compare it with average gene expression in human brain tissue.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">gtex_tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_tpm_2017-06-05_v8_brain_cortex.gct.gz"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-2">gtex_tpm.head()</span></code></pre></div>
</div>
<p>Lastly, we’ll concatenate all the prediction matrices into one h5 file.</p>
</section>
</section>
<section id="concatenate-predictions" class="level2">
<h2 class="anchored" data-anchor-id="concatenate-predictions">Concatenate Predictions</h2>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> concatenate_predictions(predictions_dir, output_path):</span>
<span id="cb15-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> output_file:</span>
<span id="cb15-3">        files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb15-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files:</span>
<span id="cb15-5">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb15-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(os.path.join(predictions_dir, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> input_file:</span>
<span id="cb15-7">                output_file.create_dataset(interval, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_file[interval][()], shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">896</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5313</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">concatenate_predictions(reference_predictions, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/2023-08-16_predictions_some_missing_genes.h5"</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/index.html</guid>
  <pubDate>Tue, 15 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Preparing rat VCFs for Enformer pipeline</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-14-updated-preparing-rat-vcf-inputs-for-enformer-pipeline/index.html</link>
  <description><![CDATA[ 




<section id="download-vcf" class="level3">
<h3 class="anchored" data-anchor-id="download-vcf">Download VCF</h3>
<pre class="{bash}"><code>cd enformer_rat_data
wget https://ratgtex.org/data/geno/genotypes/Brain.rn7.vcf.gz
</code></pre>
</section>
<section id="changing-vcf-chrom-notation" class="level3">
<h3 class="anchored" data-anchor-id="changing-vcf-chrom-notation">Changing VCF CHROM notation</h3>
<pre class="{bash}"><code>gunzip genotypes/Brain.rn7.vcf.gz
awk '{if($0 !~ /^#/) print "chr"$0; else print $0}' genotypes/Brain.rn7.vcf &gt; output.rn7.vcf
</code></pre>
</section>
<section id="replace-missing-genotypes-with-reference-alleles" class="level3">
<h3 class="anchored" data-anchor-id="replace-missing-genotypes-with-reference-alleles">Replace missing genotypes with reference alleles</h3>
<p>Note: There are a number of good reasons filling in missing genotypes with two reference alleles is discouraged. However, our goal is to predict the epigenome from a sequence of 393,216 base pairs, so we assume that changing a snp will have negligible effect on Enformer predictions. Additionally, we are not using allele frequency to draw any conclusions about our population.</p>
<pre class="{bash}"><code>sed 's/\.\/\./0\/0/g' output.rn7.vcf &gt; Brain.rn7.no_missing.vcf
bgzip Brain.rn7.no_missing.vcf
bcftools index -t Brain.rn7.no_missing.vcf.gz
</code></pre>
</section>
<section id="split-vcfs" class="level3">
<h3 class="anchored" data-anchor-id="split-vcfs">Split VCFs</h3>
<p>First by chromosome number:</p>
<pre class="{bash}"><code>
mkdir genotypes/BrainVCFs
# Split VCF by chromosome
vcf_in=Brain.rn7.no_missing.vcf.gz

vcf_out_prefix=genotypes/BrainVCFs/chr

for i in {1..20}
do
    echo "Working on chromosome ${i}..."
    bcftools view ${vcf_in} --regions chr${i} -o ${vcf_out_prefix}${i}.vcf.gz -Oz
done


# Index VCFs
for i in {1..20}
do
    echo "Indexing chromosome ${i}..."
    bcftools index -t genotypes/BrainVCFs/chr${i}.vcf.gz
done</code></pre>
<p>Then for the sex chromosomes:</p>
<pre class="{bash}"><code>vcf_in=Brain.rn7.no_missing.vcf.gz
vcf_out_prefix=genotypes/BrainVCFs/chr

bcftools view ${vcf_in} --regions X -o ${vcf_out_prefix}X.vcf.gz -Oz
bcftools view ${vcf_in} --regions Y -o ${vcf_out_prefix}Y.vcf.gz -Oz

bcftools index -t genotypes/BrainVCFs/chrX.vcf.gz
bcftools index -t genotypes/BrainVCFs/chrY.vcf.gz
</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-14-updated-preparing-rat-vcf-inputs-for-enformer-pipeline/index.html</guid>
  <pubDate>Mon, 14 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>An introduction to cyvcf2</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-14-cyvcf2-tutorial/test_vcf_query.html</link>
  <description><![CDATA[ 




<section id="read-vcf" class="level2">
<h2 class="anchored" data-anchor-id="read-vcf">Read VCF</h2>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cyvcf2</span>
<span id="cb1-2">vcf_rn7 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cyvcf2.cyvcf2.VCF(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/chr20.vcf.gz"</span>)</span>
<span id="cb1-3">vcf_hg38 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cyvcf2.cyvcf2.VCF(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/hg38_data/ALL.chr22.shapeit2_integrated_SNPs_v2a_27022019.GRCh38.phased.vcf.gz"</span>)</span>
<span id="cb1-4">    </span></code></pre></div>
</div>
<p>We query the VCF for all snp positions and put it into a list.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">snps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_rn7:</span>
<span id="cb2-3">    snps.append(variant.POS)</span>
<span id="cb2-4">region <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [snp <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> snp <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> snps <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11922155</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> snp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12315371</span>]</span></code></pre></div>
</div>
<p>Our region of interest is centered at the TSS for gene ENSRNOG00000054549. We subset to all snps within 196608 bp of position 12118763 on chromosome 20.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(region)</span></span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(region), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"snps found in interval"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1957 snps found in interval</code></pre>
</div>
</div>
<p>We’ll print the first lines from both human and rat VCFs.</p>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_rn7:</span>
<span id="cb5-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(variant)</span>
<span id="cb5-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb5-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_hg38:</span>
<span id="cb5-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(variant)</span>
<span id="cb5-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>20  7226    chr20:7226  A   G   .   PASS    AC=17763;AN=27342   GT  0/1 1/1 0/1 1/1 0/1 1/1 1/1 1/1 1/1 1/1 1/1 1/1 1/1 0/1 1/1 0/1 0/1 0/1 0/0 0/0 1/1 0/1 1/1 0/0 1/1 0/1 0/0 0/0 0/1 1/1 0/1 1/1 0/0 1/1 1/1 0/0 0/1 0/1 1/1 0/1 0/1 0/1 0/1 0/1 0/1 0/1 1/1 0/1 0/1 0/0 1/1 1/1 1/1 1/1 0/0 0/0 0/1 0/1 0/0 1/1 0/1 0/1 0/1 0/0 1/1 1/1 1/1 1/1 0/1 1/1 0/1 0/1 0/1 1/1 1/1 1/1 1/1 0/0 1/1 0/1 0/1 1/1 0/1 0/0 0/1 0/1 1/1 1/1 1/1 0/1 0/1 1/1 0/1 0/1 0/1 0/1 0/1 1/1 0/1 0/1 0/0 1/1 0/1 0/1 1/1 0/0 0/0 1/1 0/1 1/1 1/1 0/0 0/0 1/1 1/1 1/1 0/1 0/1 1/1 0/1 0/1 0/0 0/1 0/1 1/1 0/1 0/1 0/1 0/0 0/1 0/1 0/0 1/1 0/1 0/1 0/1 1/1 0/0 0/0 0/0 1/1 0/1 0/1 0/1 0/0 0/1 0/1 1/1 1/1 1/1 0/1 0/1 1/1 1/1 0/0 0/1 0/1 1/1 0/0 0/0 1/1 0/0 0/1 0/0 0/1 0/1 0/1 0/1 0/1 0/0 0/1 0/0 0/0 0/0 0/1 1/1 0/1 0/1 0/1 0/0 0/1 1/1 1/1 1/1 1/1 0/1 0/1 1/1 0/1 0/0 1/1 0/0 1/1 1/1 0/1 ./. 1/1 1/1 0/0 0/1 1/1 0/1 1/1 1/1 1/1 1/1 0/1 1/1 0/1 0/1 0/1 0/1 1/1 1/1 1/1 0/0 1/1 1/1 1/1 1/1 1/1 0/1 1/1 1/1 1/1 0/1 0/1 1/1 1/1 1/1 1/1 0/1 0/1 0/1 1/1 1/1 1/1 0/1 0/1 0/1 1/1 1/1 1/1 1/1 1/1 0/0 0/1 0/1 1/1 1/1 1/1 1/1 0/0 1/1 0/1 0/1 0/1 1/1 1/1 1/1 0/1 0/1 1/1 1/1 0/0 0/0 1/1 0/1 0/1 0/0 1/1 0/1 1/1 1/1 0/1 0/0 0/0 0/0 0/0 0/1 0/0 0/1 0/1 1/1 0/1 0/1 0/0 ./. 0/0 0/1 1/1 0/1 1/1 1/1 1/1 0/1 0/0 0/0 1/1 0/0 0/1 0/1 0/1 0/1 0/1 0/1 0/0 1/1 0/1 1/1 0/1 1/1 0/1 1/1 1/1 1/1 1/1 0/1 1/1 0/0 0/1 1/1 0/1 1/1 1/1 1/1 1/1 0/1 0/1 1/1 0/1 0/0 0/1 1/1 1/1 0/1 0/0 1/1 0/1 0/0

chr22   10522217    .   G   A   .   PASS    AC=89;AF=0.02;AFR_AF=0.07;AMR_AF=0;AN=5096;DP=9085;EAS_AF=0;EUR_AF=0;NS=2548;SAS_AF=0;VT=SNP    GT  0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 1|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 0|0 0|0 1|1 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 1|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|1 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 1|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|0 1|1 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 1|0 1|0 0|0 0|1 1|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 0|1 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 1|0 0|0 0|0 0|1 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0
</code></pre>
</div>
</div>
<p>The first three columns look different, which might explain our bugs with our rat VCFs when running the Enformer pipeline. We’ll try querying these regions from the VCFs.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_hg38(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr22:10516173-10909389"</span>):</span>
<span id="cb7-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(variant)</span>
<span id="cb7-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>chr22   10516173    .   A   G   .   PASS    AC=121;AF=0.02;AFR_AF=0.06;AMR_AF=0.02;AN=5096;DP=8203;EAS_AF=0;EUR_AF=0.02;NS=2548;SAS_AF=0;VT=SNP GT  0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 1|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|1 0|0 1|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 1|0 0|0 0|0 1|0 0|0 0|0 1|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|1 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|1 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|1 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 1|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|1 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0 0|0
</code></pre>
</div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> variant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vcf_rn7(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20:11922155-12315371"</span>):</span>
<span id="cb9-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(variant)</span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>20  11922570    chr20:11922570  G   A   .   PASS    AC=10302;AN=28910   GT  0/0 0/1 0/0 1/1 0/1 0/0 ./. 0/1 0/0 0/1 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/1 0/1 1/1 0/1 0/1 0/0 0/1 0/1 0/0 0/1 0/0 0/1 0/0 0/1 0/0 1/1 0/1 0/1 0/1 0/0 0/1 1/1 0/1 0/0 0/0 0/0 1/1 0/0 0/1 0/0 0/1 1/1 0/1 0/0 1/1 0/0 0/0 0/0 0/1 0/0 0/1 0/1 0/1 0/0 0/0 1/1 0/1 0/1 0/0 0/0 0/0 0/0 1/1 0/0 0/0 0/1 0/0 0/1 0/1 0/0 0/1 0/1 0/0 0/0 0/0 0/1 0/0 1/1 0/1 0/1 0/1 0/1 0/1 0/1 0/0 0/0 1/1 0/0 0/1 0/0 0/0 0/0 0/1 0/1 0/0 0/0 0/1 0/0 0/0 0/0 0/0 0/1 0/1 0/0 0/0 0/0 0/0 0/1 0/0 0/0 0/1 0/1 0/0 0/0 1/1 0/1 0/0 0/0 1/1 0/1 0/0 0/1 1/1 0/0 0/1 0/0 0/0 0/1 0/0 0/1 1/1 0/0 0/0 0/1 0/1 0/1 0/0 0/0 0/1 0/0 1/1 0/0 0/0 0/1 0/0 0/1 1/1 0/0 0/0 0/0 0/1 0/1 0/0 0/1 0/0 0/1 1/1 0/1 0/1 0/1 0/1 1/1 0/1 0/0 0/0 0/0 0/0 0/0 1/1 0/1 1/1 0/0 0/1 0/1 0/0 0/0 0/0 0/0 0/0 1/1 0/1 1/1 0/1 0/1 0/1 0/1 0/1 0/1 1/1 0/0 0/0 0/1 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/0 0/1 0/0 0/0 0/0 0/0 1/1 0/1 0/0 0/0 0/0 0/0 0/1 1/1 0/0 0/0 0/1 0/1 0/0 0/0 0/0 0/1 0/0 0/1 0/1 0/1 0/0 0/0 0/0 0/0 0/0 0/0 0/1 0/0 0/0 0/0 0/0 0/0 0/1 0/1 0/1 0/1 0/1 0/1 0/0 0/0 0/1 0/0 0/1 0/0 0/1 0/0 0/0 1/1 0/1 0/0 0/0 0/0 0/1 0/0 0/0 0/0 1/1 1/1 0/1 0/1 0/1 0/1 0/1 0/0 0/0 0/1 1/1 0/0 1/1 0/0 0/1 0/1 1/1 0/0 1/1 0/1 0/1 0/1 0/0 0/0 0/1 1/1 0/1 0/1 0/0 0/1 0/0 0/1 0/1 0/0 0/0 0/1 0/0 0/1 0/1 0/0 0/1 0/1 0/0 0/0 0/0 0/0 0/1 0/1 1/1 0/0 0/0 0/0 0/1 0/1 0/0 0/0 0/0 0/0 0/0 0/1 0/1 0/0 0/1 0/0 1/1 0/1 0/1 0/0
</code></pre>
</div>
</div>
<p>Because of the difference in chromosome notations, we have to query the rat VCFs without the extra “chr” string at the start. Unfortunately, we need the “chr” string for other parts of the pipeline, so we cannot just remove the “chr” prefix from our <code>intervals.txt</code> file, but rather we need to add “chr” to the CHROM column of our rn7 VCFs.</p>
<pre><code>awk '{if($0 !~ /^#/) print "chr"$0; else print $0}' genotypes/Brain.rn7.vcf &gt; output.vcf

</code></pre>
<p>I will update the <a href="https://sabrina-dl.hakyimlab.org/posts/preparing-rat-vcfs-for-enformer/">Preparing Rat VCFs for Enformer</a> blog post.</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-14-cyvcf2-tutorial/test_vcf_query.html</guid>
  <pubDate>Mon, 14 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Testing the Enformer pipeline with added parameters for personalized prediction on rats</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/index.html</link>
  <description><![CDATA[ 




<section id="test-for-a-single-individual-and-gene" class="level2">
<h2 class="anchored" data-anchor-id="test-for-a-single-individual-and-gene">Test for a single individual and gene</h2>
<p>We chose <code>ENSRNOG00000054549</code>, centered at the TSS chr20:12118762.</p>
<pre><code>conda activate enformer-predict-tools

cd /Users/sabrinami/Github/shared_pipelines/enformer_pipeline

python scripts/enformer_predict.py --parameters /Users/sabrinami/Github/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/local_test_personalized.json
</code></pre>
</section>
<section id="compare-results-to-non-pipeline-method" class="level2">
<h2 class="anchored" data-anchor-id="compare-results-to-non-pipeline-method">Compare results to non-pipeline method</h2>
<section id="read-in-h5-prediction-files" class="level3">
<h3 class="anchored" data-anchor-id="read-in-h5-prediction-files">Read in h5 prediction files</h3>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EnformerVCF</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>2023-08-26 14:55:53.212214: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_rat_single_gene/predictions_2023-08-15/enformer_predictions/000789972A/haplotype1/chr20_12118762_12118762_predictions.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb4-2">haplotype1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr20_12118762_12118762'</span>][()]</span>
<span id="cb4-3">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_rat_single_gene/predictions_2023-08-15/enformer_predictions/000789972A/haplotype2/chr20_12118762_12118762_predictions.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb4-4">haplotype2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr20_12118762_12118762'</span>][()]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype1:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, haplotype1)</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haplotype2:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, haplotype2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>haplotype1:
 [[0.24076067 0.30101207 0.5132549  ... 0.20521325 1.1217918  0.25558835]
 [0.15946281 0.20442429 0.37761706 ... 0.04465578 0.24607326 0.08344302]
 [0.15568599 0.21775411 0.4520394  ... 0.05306218 0.20978831 0.08246609]
 ...
 [0.17938398 0.22463004 0.29506153 ... 0.01107231 0.02651541 0.0338815 ]
 [0.16948122 0.2044945  0.2620006  ... 0.01690046 0.04069382 0.06031117]
 [0.15266503 0.201914   0.22262897 ... 0.02438843 0.03895664 0.05986918]]
haplotype2:
 [[0.23317184 0.29741773 0.5182305  ... 0.20385785 1.1424272  0.26008573]
 [0.15613721 0.20323968 0.37887666 ... 0.04524086 0.257699   0.08468267]
 [0.15380262 0.21736239 0.45358157 ... 0.05439655 0.22475001 0.08432709]
 ...
 [0.17942066 0.2246648  0.29515463 ... 0.01105907 0.02650285 0.03387856]
 [0.16946748 0.20452495 0.2621123  ... 0.0168827  0.04067391 0.06034191]
 [0.15272975 0.20209791 0.22299151 ... 0.0243816  0.03896997 0.05996798]]</code></pre>
</div>
</div>
</section>
<section id="run-non-pipeline-enformer" class="level3">
<h3 class="anchored" data-anchor-id="run-non-pipeline-enformer">Run non-pipeline Enformer</h3>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/rn7_genome.fasta'</span></span>
<span id="cb7-2">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## read vcf and encode haplotypes</span></span>
<span id="cb8-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>)</span>
<span id="cb8-3">chr20_vcf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.read_vcf(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/rn7_data/chr20.vcf.gz"</span>)</span>
<span id="cb8-4">haplo1, haplo2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.vcf_to_seq(target_interval, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'000789972A'</span>, chr20_vcf, fasta_extractor)</span>
<span id="cb8-5">haplo1_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo1))[np.newaxis]</span>
<span id="cb8-6">haplo2_enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo2))[np.newaxis]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## run predictions</span></span>
<span id="cb9-2">prediction1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(haplo1_enc)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb9-3">prediction2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(haplo2_enc)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"There are"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(haplotype1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> prediction1)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between haplotype1 matrices and"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(haplotype2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> prediction2)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between haplotype2 matrices."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are 0 differences between haplotype1 matrices and 0 differences between haplotype2 matrices.</code></pre>
</div>
</div>
<p>The pipeline outputs are the same!</p>
</section>
</section>
<section id="test-mouse-head-on-reference-genome" class="level2">
<h2 class="anchored" data-anchor-id="test-mouse-head-on-reference-genome">Test mouse head on reference genome</h2>
<pre><code>conda activate enformer-predict-tools

cd /Users/sabrinami/Github/shared_pipelines/enformer_pipeline

python scripts/enformer_predict.py --parameters /Users/sabrinami/Github/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/local_test_reference.json
</code></pre>
</section>
<section id="compare-results-to-non-pipeline-method-1" class="level2">
<h2 class="anchored" data-anchor-id="compare-results-to-non-pipeline-method-1">Compare results to non-pipeline method</h2>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Read prediction file</span></span>
<span id="cb13-2">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/reference_enformer_rat_single_gene/predictions_2023-08-26/enformer_predictions/reference_enformer_rat/haplotype0/chr20_12118762_12118762_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb13-3">haplotype0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20_12118762_12118762"</span>][()]</span>
<span id="cb13-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shape:"</span>, haplotype0.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>shape: (896, 1643)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb15-2">target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12118762</span>)</span>
<span id="cb15-3">sequence_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.one_hot_encode(fasta_extractor.extract(target_interval.resize(SEQUENCE_LENGTH)))</span>
<span id="cb15-4">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerVCF.model.predict_on_batch(sequence_one_hot[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mouse'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"There are"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(haplotype0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> predictions)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"differences between pipeline and non-pipeline outputs."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are 0 differences between pipeline and non-pipeline outputs.</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-15-test-run-of-personalized-enformer-pipeline-for-rats/index.html</guid>
  <pubDate>Sat, 12 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Debugging Enformer predictions for eQTL genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/debugging.html</link>
  <description><![CDATA[ 




<section id="read-genotypes" class="level2">
<h2 class="anchored" data-anchor-id="read-genotypes">Read Genotypes</h2>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"></span>
<span id="cb1-4">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_147902/538256472.py:4: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000054549'</span></span>
<span id="cb3-2">gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span>
<span id="cb3-3">chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]</span>
<span id="cb3-4">tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb3-5">start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">196608</span>)</span>
<span id="cb3-6">end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">196608</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">region <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene region:"</span>, region)</span>
<span id="cb4-3">vcf_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/home/s1mi/enformer_rat_data/genotypes/BrainVCFs/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.vcf.gz"</span></span>
<span id="cb4-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VCF file:"</span>, vcf_file)</span>
<span id="cb4-5">output_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/home/s1mi/enformer_rat_data/misc/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.vcf.gz"</span></span>
<span id="cb4-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output VCF:"</span>, output_file)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Gene region: 20:11922154-12315370
VCF file: /home/s1mi/enformer_rat_data/genotypes/BrainVCFs/chr20.vcf.gz
Output VCF: /home/s1mi/enformer_rat_data/misc/ENSRNOG00000054549.vcf.gz</code></pre>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>bcftools view {vcf_file} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>regions {region}  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o {output_file} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Oz</span></code></pre></div>
</div>
<p>After a quick scroll through the VCF, there is too much genotype variation across the population to result in uniform Enformer predictions.</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/debugging.html</guid>
  <pubDate>Fri, 11 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing predicted vs observed gene expression for rat genes selected for variation in expression across Br population, number of eQTLs, and elastic net prediction performance</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/index.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq </span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval </span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/personalized_Br_selected_genes/predictions_2023-08-11/enformer_predictions"</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb2-4">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb2-7">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().splitlines()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_135100/534672817.py:4: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<section id="initialize-dataframes-with-observed-expression" class="level3">
<h3 class="anchored" data-anchor-id="initialize-dataframes-with-observed-expression">Initialize Dataframes with Observed Expression</h3>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">pred_vs_obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-3">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb4-4">    pred_vs_obs[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
</section>
<section id="quantify-gene-expression" class="level2">
<h2 class="anchored" data-anchor-id="quantify-gene-expression">Quantify Gene Expression</h2>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb5-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb5-5">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb5-6">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-7">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb5-8">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> pred_vs_obs[gene].index:</span>
<span id="cb5-10">        haplo1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb5-11">        haplo2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype2/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb5-12">        predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (haplo1[interval][()] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo2[interval][()]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb5-13">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(predictions[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">447</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb5-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">446</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb5-15">        pred_vs_obs[gene].loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span>
<span id="cb5-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_135100/1897498957.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000054549
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]
[0.17597985 9.609986   7.9004626  0.16972242]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_predicted_vs_observed(gene):</span>
<span id="cb8-2">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[gene]</span>
<span id="cb8-3"></span>
<span id="cb8-4">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>]</span>
<span id="cb8-5">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>]</span>
<span id="cb8-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb8-7">    plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-8"></span>
<span id="cb8-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb8-10">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb8-11">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb8-12">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb8-13"></span>
<span id="cb8-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb8-15">    plt.show()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb9-2">    plot_predicted_vs_observed(gene)</span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/index_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-11-comparing-enformer-CAGE-predictions-for-high-var-genes/index.html</guid>
  <pubDate>Fri, 11 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Selecting Rat genes for Enformer CAGE predictions</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-selecting-genes/selecting-well-predicted-gene-regions.html</link>
  <description><![CDATA[ 




<section id="calculate-gene-expression-variance-across-individuals" class="level2">
<h2 class="anchored" data-anchor-id="calculate-gene-expression-variance-across-individuals">Calculate gene expression variance across individuals</h2>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Read in expression data</span></span>
<span id="cb2-2">tpm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb2-3">iqn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.iqn.bed"</span>, header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_238845/1386399847.py:2: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  tpm = pd.read_csv("/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed", header = 0, sep="\t",  index_col= 'gene_id')
/tmp/ipykernel_238845/1386399847.py:3: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  iqn = pd.read_csv("/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.iqn.bed", header = 0, sep="\t",  index_col= 'gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">tpm_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].var(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-2">np.average(tpm_var)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>1003.8945129200853</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">iqn_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iqn.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:].var(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-2">np.average(iqn_var)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>0.6306594759954833</code></pre>
</div>
</div>
<p>We first subset to genes in the top decile for both TPM and IQN variance.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">tpm_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tpm_var.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb8-2">iqn_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iqn_var.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb8-3">high_tpm_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(tpm[tpm_var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> tpm_threshold].index)</span>
<span id="cb8-4">high_iqn_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(iqn[iqn_var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> iqn_threshold].index)</span>
<span id="cb8-5">high_var_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> high_tpm_var_genes.intersection(high_iqn_var_genes)</span>
<span id="cb8-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(high_var_genes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes with high variance"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>167 genes with high variance</code></pre>
</div>
</div>
</section>
<section id="count-eqtls" class="level2">
<h2 class="anchored" data-anchor-id="count-eqtls">Count eQTLs</h2>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">eqtl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/Brain.rn7.cis_qtl_signif.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-2">eqtl.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th">variant_id</th>
<th data-quarto-table-cell-role="th">tss_distance</th>
<th data-quarto-table-cell-role="th">af</th>
<th data-quarto-table-cell-role="th">ma_samples</th>
<th data-quarto-table-cell-role="th">ma_count</th>
<th data-quarto-table-cell-role="th">pval_nominal</th>
<th data-quarto-table-cell-role="th">slope</th>
<th data-quarto-table-cell-role="th">slope_se</th>
<th data-quarto-table-cell-role="th">pval_nominal_threshold</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002359</td>
<td>695174</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002361</td>
<td>695176</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002408</td>
<td>695223</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002450</td>
<td>695265</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>ENSRNOG00000050129</td>
<td>chr1:2002464</td>
<td>695279</td>
<td>0.433432</td>
<td>223</td>
<td>294</td>
<td>0.0015</td>
<td>0.129848</td>
<td>0.04054</td>
<td>0.006989</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> eqtl[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>].value_counts()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">counts.describe()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>count    11238.000000
mean      2312.935398
std       1490.079008
min          1.000000
25%       1160.250000
50%       2236.000000
75%       3277.750000
max      10799.000000
Name: gene_id, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">eqtl_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts.quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb14-2">eqtl_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts[counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> eqtl_threshold].index</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(eqtl_genes)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Index(['ENSRNOG00000031024', 'ENSRNOG00000000451', 'ENSRNOG00000032708',
       'ENSRNOG00000000455', 'ENSRNOG00000021507', 'ENSRNOG00000009389',
       'ENSRNOG00000066838', 'ENSRNOG00000000432', 'ENSRNOG00000039396',
       'ENSRNOG00000002232',
       ...
       'ENSRNOG00000016364', 'ENSRNOG00000008471', 'ENSRNOG00000043350',
       'ENSRNOG00000012337', 'ENSRNOG00000005248', 'ENSRNOG00000068325',
       'ENSRNOG00000012868', 'ENSRNOG00000068200', 'ENSRNOG00000005610',
       'ENSRNOG00000008356'],
      dtype='object', length=1124)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> high_var_genes.intersection(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(eqtl_genes))</span>
<span id="cb17-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gene_list), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"candidate genes for enformer prediction experiments"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>17 candidate genes for enformer prediction experiments</code></pre>
</div>
</div>
</section>
<section id="check-elastic-net-prediction-performance" class="level2">
<h2 class="anchored" data-anchor-id="check-elastic-net-prediction-performance">Check Elastic Net Prediction Performance</h2>
<p>Now that we have a manageable number of genes, we can individual check that these genes have sufficient prediction performance.</p>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">model_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/highestR2genes.csv"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>)</span>
<span id="cb19-2">model_genes.loc[[gene <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_genes.index]]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">genename</th>
<th data-quarto-table-cell-role="th">pred.perf.R2</th>
<th data-quarto-table-cell-role="th">n.snps.in.model</th>
<th data-quarto-table-cell-role="th">pred.perf.pval</th>
<th data-quarto-table-cell-role="th">cor</th>
<th data-quarto-table-cell-role="th">pred.perf.qval</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">gene</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000009734</td>
<td>Akr1b8</td>
<td>0.050379</td>
<td>4</td>
<td>6.577101e-04</td>
<td>0.224453</td>
<td>4.811327e-04</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000001311</td>
<td>Rab36</td>
<td>0.559618</td>
<td>2</td>
<td>6.036613e-42</td>
<td>0.748076</td>
<td>7.693936e-41</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000010079</td>
<td>Ca3</td>
<td>0.003307</td>
<td>2</td>
<td>3.884876e-01</td>
<td>0.057507</td>
<td>1.439053e-01</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000028436</td>
<td>Rprml</td>
<td>0.228241</td>
<td>3</td>
<td>2.407910e-14</td>
<td>0.477745</td>
<td>5.222104e-14</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000032908</td>
<td>Acaa1a</td>
<td>0.548779</td>
<td>2</td>
<td>9.394297e-41</td>
<td>0.740796</td>
<td>1.111821e-39</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000050647</td>
<td>Hspa1b</td>
<td>0.078443</td>
<td>6</td>
<td>1.847947e-05</td>
<td>0.280077</td>
<td>1.706734e-05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000012235</td>
<td>Ppp1r17</td>
<td>0.370200</td>
<td>2</td>
<td>2.229702e-24</td>
<td>0.608441</td>
<td>9.825564e-24</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000048258</td>
<td>Cisd2</td>
<td>0.661901</td>
<td>2</td>
<td>6.783282e-55</td>
<td>0.813573</td>
<td>2.391336e-53</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000054549</td>
<td>Lss</td>
<td>0.124023</td>
<td>3</td>
<td>4.970816e-08</td>
<td>0.352169</td>
<td>6.169430e-08</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000004430</td>
<td>Cep131</td>
<td>0.650722</td>
<td>2</td>
<td>2.657264e-53</td>
<td>0.806673</td>
<td>8.153414e-52</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>All of the genes found in the model have positive correlation. For now, we will keep all 17 genes in our list to run Enformer on.</p>
</section>
<section id="run-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="run-pipeline">Run Pipeline</h2>
<section id="write-metadata" class="level3">
<h3 class="anchored" data-anchor-id="write-metadata">Write Metadata</h3>
<p>First, write our <code>metadata/intervals.txt</code> file with the 17 genes we have narrowed down to.</p>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_intervals(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>):</span>
<span id="cb20-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb20-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb20-4">            gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb20-5">            tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb20-6">            interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb20-7">            f.write(interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb21-4">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(gene_list))</span>
<span id="cb21-5">write_intervals(gene_list, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_238845/487979158.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
</div>
<p>Use all 340 individuals:</p>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>bcftools query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_rat_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>genotypes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Brain.rn7.vcf.gz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> metadata<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>individuals.txt</span></code></pre></div>
</div>
</section>
<section id="submit-jobs" class="level3">
<h3 class="anchored" data-anchor-id="submit-jobs">Submit Jobs</h3>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline
python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-10-selecting-genes/personalized_config.json
</code></pre>


</section>
</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-selecting-genes/selecting-well-predicted-gene-regions.html</guid>
  <pubDate>Thu, 10 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Enformer across all rn7 genes</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/running-enformer-across-all-rat-genes.html</link>
  <description><![CDATA[ 




<section id="collect-gene-intervals" class="level2">
<h2 class="anchored" data-anchor-id="collect-gene-intervals">Collect Gene Intervals</h2>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gene annotation</span></span>
<span id="cb2-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt'</span>, sep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,  index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb2-3">annot_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_53672/1963999151.py:2: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv('/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt', sep ='\t',  index_col='geneId')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">geneSymbol</th>
<th data-quarto-table-cell-role="th">chromosome</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">strand</th>
<th data-quarto-table-cell-role="th">tss</th>
<th data-quarto-table-cell-role="th">description</th>
<th data-quarto-table-cell-role="th">hasEqtl</th>
<th data-quarto-table-cell-role="th">expr_BLA</th>
<th data-quarto-table-cell-role="th">expr_Brain</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">sqtl_BLA</th>
<th data-quarto-table-cell-role="th">sqtl_Brain</th>
<th data-quarto-table-cell-role="th">sqtl_Eye</th>
<th data-quarto-table-cell-role="th">sqtl_IL</th>
<th data-quarto-table-cell-role="th">sqtl_LHb</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc</th>
<th data-quarto-table-cell-role="th">sqtl_NAcc2</th>
<th data-quarto-table-cell-role="th">sqtl_OFC</th>
<th data-quarto-table-cell-role="th">sqtl_PL</th>
<th data-quarto-table-cell-role="th">sqtl_PL2</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">geneId</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000066169</td>
<td>ENSRNOG00000066169</td>
<td>1</td>
<td>36112690</td>
<td>36122387</td>
<td>-</td>
<td>36122387</td>
<td>NaN</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000070168</td>
<td>Olr56</td>
<td>1</td>
<td>157231467</td>
<td>157232417</td>
<td>+</td>
<td>157231467</td>
<td>olfactory receptor family 51 subfamily F membe...</td>
<td>True</td>
<td>False</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070901</td>
<td>Irgq</td>
<td>1</td>
<td>80123925</td>
<td>80131881</td>
<td>+</td>
<td>80123925</td>
<td>immunity-related GTPase Q</td>
<td>True</td>
<td>True</td>
<td>True</td>
<td>...</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
<td>False</td>
</tr>
</tbody>
</table>

<p>3 rows × 68 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span>
<span id="cb4-2">obs_gene_expr.head()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_53672/1989937044.py:1: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv("/home/s1mi/enformer_rat_data/expression_data/Brain.rn7.expr.tpm.bed", sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">#chr</th>
<th data-quarto-table-cell-role="th">start</th>
<th data-quarto-table-cell-role="th">end</th>
<th data-quarto-table-cell-role="th">000789972A</th>
<th data-quarto-table-cell-role="th">0007899884</th>
<th data-quarto-table-cell-role="th">000789FF64</th>
<th data-quarto-table-cell-role="th">00079298B1</th>
<th data-quarto-table-cell-role="th">00079299B5</th>
<th data-quarto-table-cell-role="th">0007929A79</th>
<th data-quarto-table-cell-role="th">0007929B36</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">0007899761</th>
<th data-quarto-table-cell-role="th">0007899866</th>
<th data-quarto-table-cell-role="th">00078A00E6</th>
<th data-quarto-table-cell-role="th">0007929938</th>
<th data-quarto-table-cell-role="th">0007929956</th>
<th data-quarto-table-cell-role="th">00079FF7D6</th>
<th data-quarto-table-cell-role="th">0007899826</th>
<th data-quarto-table-cell-role="th">0007929917</th>
<th data-quarto-table-cell-role="th">00077E82E3</th>
<th data-quarto-table-cell-role="th">00078A18A7</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">gene_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000065394</td>
<td>1</td>
<td>31563</td>
<td>31564</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065356</td>
<td>1</td>
<td>41634</td>
<td>41635</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000070568</td>
<td>1</td>
<td>76833</td>
<td>76834</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.01</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ENSRNOG00000065706</td>
<td>1</td>
<td>184235</td>
<td>184236</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.18</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ENSRNOG00000069644</td>
<td>1</td>
<td>272252</td>
<td>272253</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>...</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.00</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
</tbody>
</table>

<p>5 rows × 343 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">obs_gene_expr[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#chr'</span>].unique()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>array([1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 3, 4, 5, 6, 7, 8,
       9, '9', 'JACYVU010000238.1', 'JACYVU010000315.1',
       'JACYVU010000319.1', 'JACYVU010000493.1', 'JACYVU010000587.1',
       'JACYVU010000589.1', 'JACYVU010000619.1', 'JACYVU010000634.1',
       'JACYVU010000642.1', 'JACYVU010000653.1', 'JACYVU010000665.1',
       'JACYVU010000706.1', 'JACYVU010000731.1', 'JACYVU010000732.1',
       'JACYVU010000738.1', 'JACYVU010000744.1', 'JACYVU010000754.1',
       'MT', 'MU150189.1', 'MU150193.1', 'MU150196.1', 'MU150200.1',
       'MU150203.1', 'MU150220.1', 'MU150222.1', 'MU150223.1', 'X', 'Y'],
      dtype=object)</code></pre>
</div>
</div>
<p>We want to filter to genes on chromosomes 1 through 20 and X.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">keys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>]</span>
<span id="cb8-2"></span>
<span id="cb8-3">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-4">interval_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> obs_gene_expr.index:</span>
<span id="cb8-7">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-8">    chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>])</span>
<span id="cb8-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> chromosome <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> keys:</span>
<span id="cb8-10">        tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>]</span>
<span id="cb8-11">        interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-12">        gene_list.append(gene)</span>
<span id="cb8-13">        interval_list.append(interval)</span>
<span id="cb8-14">        </span>
<span id="cb8-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/intervals.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb8-16">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(interval_list))</span>
<span id="cb8-17"></span>
<span id="cb8-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata/genes.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb8-19">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(gene_list))</span>
<span id="cb8-20">    </span></code></pre></div>
</div>
</section>
<section id="run-enformer-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="run-enformer-pipeline">Run Enformer Pipeline</h2>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline

python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/all_genes_reference_config.json</code></pre>
</section>
<section id="rerun-for-missing-genes" class="level2">
<h2 class="anchored" data-anchor-id="rerun-for-missing-genes">Rerun for Missing Genes</h2>
<p>For some reason, only ~19,000 genes in the rn7 reference epigenome were predicted on, and rerunning the same command above is not filling in the gaps. Instead, we’ll create a new intervals list with the missing genes.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb10-2">successful_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes/predictions_2023-08-29/enformer_predictions/reference_Br/haplotype0"</span>)</span>
<span id="cb10-3">successful_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> successful_predictions]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'metadata/intervals.txt'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb11-2">    all_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.read().splitlines()</span>
<span id="cb11-3"></span>
<span id="cb11-4">unsuccessful_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [interval <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> all_intervals <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> successful_intervals]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'metadata/intervals2.txt'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb12-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(unsuccessful_genes))</span></code></pre></div>
</div>
<p>I ran with local provider on an interactive job so I could keep an eye on error messages.</p>
<pre><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline

python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/remaining_genes_reference_config.json</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-10-correlation-across-genes/running-enformer-across-all-rat-genes.html</guid>
  <pubDate>Thu, 10 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Enformer across all rn7 genes (continued)</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-16-correlation-across-genes-human-and-mouse-tracks/pipeline.html</link>
  <description><![CDATA[ 




<p>We’ll reuse the <code>intervals.txt</code> file that spanned all TSS in the rn7 genome.</p>
<section id="human-head" class="level2">
<h2 class="anchored" data-anchor-id="human-head">Human Head</h2>
<pre class="{bash}"><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline

python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-16-correlation-across-genes-human-and-mouse-tracks/all_genes_reference_human_head.json
</code></pre>
</section>
<section id="mouse-head" class="level2">
<h2 class="anchored" data-anchor-id="mouse-head">Mouse Head</h2>
<pre class="{bash}"><code>module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

cd /home/s1mi/Github/shared_pipelines/enformer_pipeline

python3 scripts/enformer_predict.py --parameters /home/s1mi/Github/deep-learning-in-genomics/posts/2023-08-16-correlation-across-genes-human-and-mouse-tracks/all_genes_reference_mouse_head.json
</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-16-correlation-across-genes-human-and-mouse-tracks/pipeline.html</guid>
  <pubDate>Thu, 10 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Running Enformer across all rn7 genes (continued)</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-16-correlation-across-genes-human-and-mouse-tracks/index.html</link>
  <description><![CDATA[ 




<section id="create-list-of-regions-to-exclude" class="level2">
<h2 class="anchored" data-anchor-id="create-list-of-regions-to-exclude">Create list of regions to exclude</h2>
<p>We have successful predictions for 19,493 genes out of the 30,057 intervals supplied. We want to exclude them in the next run of the pipeline.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"></span>
<span id="cb1-3">job_log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes/predictions_2023-08-18/job_logs"</span></span>
<span id="cb1-4">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/Br_predictions/predictions_folder/reference_Br_all_genes/predictions_2023-08-16/enformer_predictions/reference_Br/haplotype0"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"></span>
<span id="cb2-2">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb2-3">predicted_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_predictions.h5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions]</span>
<span id="cb2-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>job_log_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/invalid_queries.csv"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb2-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"region</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(predicted_regions))</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-16-correlation-across-genes-human-and-mouse-tracks/index.html</guid>
  <pubDate>Thu, 10 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Debugging the issue of low variance in Enformer CAGE prediction</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks.html</link>
  <description><![CDATA[ 




<section id="setup" class="level3">
<h3 class="anchored" data-anchor-id="setup">Setup</h3>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq </span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-13">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_Br_genes/predictions_2023-08-08/enformer_predictions"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb2-2">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb2-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_rat_data/reference_genome/rn7_genome.fasta'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"></span>
<span id="cb3-2">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_14448/515731113.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/home/s1mi/enformer_rat_data/annotation/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `Enformer`, `EnformerScoreVariantsNormalized`, `EnformerScoreVariantsPCANormalized`,</span></span>
<span id="cb5-2">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb5-5"></span>
<span id="cb5-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb5-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb5-8"></span>
<span id="cb5-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-10">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb5-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb5-12"></span>
<span id="cb5-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb5-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb5-15">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb5-16">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb5-17"></span>
<span id="cb5-18">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb5-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb5-20">      tape.watch(input_sequence)</span>
<span id="cb5-21">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb5-22">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb5-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb5-24"></span>
<span id="cb5-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb5-26">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-28"></span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsRaw:</span>
<span id="cb5-31"></span>
<span id="cb5-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb5-33">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(tfhub_url)</span>
<span id="cb5-34">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> organism</span>
<span id="cb5-35"></span>
<span id="cb5-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-37">    ref_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb5-38">    alt_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb5-39"></span>
<span id="cb5-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> alt_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ref_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-41"></span>
<span id="cb5-42"></span>
<span id="cb5-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsNormalized:</span>
<span id="cb5-44"></span>
<span id="cb5-45">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb5-46">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb5-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transforms only compatible with organism=human'</span></span>
<span id="cb5-48">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb5-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-50">      transform_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb5-51">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_pipeline.steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># StandardScaler.</span></span>
<span id="cb5-52"></span>
<span id="cb5-53">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-54">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb5-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)</span>
<span id="cb5-56"></span>
<span id="cb5-57"></span>
<span id="cb5-58"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsPCANormalized:</span>
<span id="cb5-59"></span>
<span id="cb5-60">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb5-61">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, num_top_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>):</span>
<span id="cb5-62">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb5-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-64">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb5-65">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_top_features</span>
<span id="cb5-66"></span>
<span id="cb5-67">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb5-68">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb5-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)[:, :<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features]</span>
<span id="cb5-70"></span>
<span id="cb5-71"></span>
<span id="cb5-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(avsec): Add feature description: Either PCX, or full names.</span></span>
<span id="cb5-73"></span>
<span id="cb5-74"></span>
<span id="cb5-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `variant_centered_sequences`</span></span>
<span id="cb5-76"></span>
<span id="cb5-77"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb5-78"></span>
<span id="cb5-79">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb5-80">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb5-81">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb5-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import pd.Interval as Interval</span></span>
<span id="cb5-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb5-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb5-85">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb5-86">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb5-87">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb5-88">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb5-89">                                    )</span>
<span id="cb5-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb5-91">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb5-92">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb5-93">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb5-94">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb5-95">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-96">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb5-98"></span>
<span id="cb5-99">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb5-101"></span>
<span id="cb5-102"></span>
<span id="cb5-103"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb5-104">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span>
<span id="cb5-105"></span>
<span id="cb5-106"></span>
<span id="cb5-107"></span>
<span id="cb5-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `plot_tracks`</span></span>
<span id="cb5-109"></span>
<span id="cb5-110"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb5-111">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-112">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb5-113">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb5-114">    ax.set_title(title)</span>
<span id="cb5-115">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-116">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb5-117">  plt.tight_layout()</span>
<span id="cb5-118"></span>
<span id="cb5-119"></span>
<span id="cb5-120">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_track(title, y, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb5-121">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height))</span>
<span id="cb5-122">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb5-123">    ax.set_title(title)</span>
<span id="cb5-124">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-125">    ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb5-126">    plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path)</span>
<span id="cb6-2"></span>
<span id="cb6-3">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> compute_tss_bin(output_window_coords_resized, tss_position, output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>, bin_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, rc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb7-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Computes the bin index of the enformer output bin containing the TSS</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Inputs:</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_window_coords_resized: Kipoiseq interval for the output window of Enformer, should already be resized to the model output window size</span></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_position: absolute location of TSS</span></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_length: Length of output window in base pairs</span></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    bin_size: Length of output bins in base pairs</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Outputs:</span></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_bin: Index of bin containing TSS</span></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb7-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb7-13">        relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(tss_position) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_window_coords_resized.start)</span>
<span id="cb7-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb7-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position)</span></span>
<span id="cb7-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(output_window_coords_resized.start)</span></span>
<span id="cb7-17">        sys.exit()</span>
<span id="cb7-18"></span>
<span id="cb7-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> output_length:</span>
<span id="cb7-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position, "appears to be out of bounds for output window: ",output_window_coords_resized)</span></span>
<span id="cb7-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> </span>
<span id="cb7-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-23">        center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> bin_length</span>
<span id="cb7-24"></span>
<span id="cb7-25">        </span>
<span id="cb7-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> rc:</span>
<span id="cb7-27">            number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin_length)</span>
<span id="cb7-28">            new_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> center</span>
<span id="cb7-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(new_center)</span></span>
<span id="cb7-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,new_center,new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(center)</span></span>
<span id="cb7-33">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,center,center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
</section>
<section id="check-reference-genome-for-peaks" class="level2">
<h2 class="anchored" data-anchor-id="check-reference-genome-for-peaks">Check reference genome for peaks</h2>
<p>We selected 7 genes based of prediction performance in elastic training, and ran Enformer on 340 individuals centered at the TSS for each gene. Since we did not see any association between predicted and observed expression, we run Enformer with the reference genome to consider their relative expression levels compared in a transcriptome-wide context.</p>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_list.txt"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb8-2">    gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().splitlines()</span>
<span id="cb8-3"></span>
<span id="cb8-4">CAGE_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb8-7">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb8-8">    tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>], gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>])</span>
<span id="cb8-9">    sequence_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> one_hot_encode(fasta_extractor.extract(tss.resize(SEQUENCE_LENGTH)))</span>
<span id="cb8-10">    prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(sequence_one_hot[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb8-11">    CAGE_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prediction[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>]</span>
<span id="cb8-12">    plot_track(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAGE:Brain, '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene, np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> CAGE_predictions[gene]), tss.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>))</span>
<span id="cb8-13">    </span>
<span id="cb8-14">    </span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-1.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-4.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-5.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-6.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks_files/figure-html/cell-8-output-7.png" class="img-fluid"></p>
</div>
</div>
<p>Several genes have peaks at the center of the interval, where we fixed the TSS. This indicates that Enformer is correctly identifying TSS, even if some genes don’t show peaks at the TSS.</p>
</section>
<section id="variance-across-interval" class="level2">
<h2 class="anchored" data-anchor-id="variance-across-interval">Variance across Interval</h2>
<p>We have two genes with CAGE:Brain peaks at the TSS, now we take a closer look at the predictions generated from the pipeline compared to the original usage notebook.</p>
<div class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">genes_of_interest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>]</span>
<span id="cb9-2">individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(predictions_dir)</span>
<span id="cb9-3"></span>
<span id="cb9-4"></span>
<span id="cb9-5">old_predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_pipeline/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-26/enformer_predictions"</span></span>
<span id="cb9-6">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb9-7"></span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes_of_interest:</span>
<span id="cb9-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb9-11">    predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals)</span>
<span id="cb9-12">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb9-13">    interval_obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>], gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>])</span>
<span id="cb9-14">    tss_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compute_tss_bin(interval_obj.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>])</span>
<span id="cb9-15">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb9-17">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>old_predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb9-18">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb9-19">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[tss_bins, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb9-20">        predictions[gene].loc[individual, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000020624
ENSRNOG00000058006</code></pre>
</div>
</div>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes_of_interest:</span>
<span id="cb11-2">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb11-3">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb11-4">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb11-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals:</span>
<span id="cb11-6">        interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb11-7">        predictions_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb11-8">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_file[interval][()]</span>
<span id="cb11-9">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">447</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">449</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb11-10">        predictions[gene].loc[individual,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span></code></pre></div>
</div>
<div class="cell" data-execution_count="64">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes_of_interest:</span>
<span id="cb12-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb12-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old Range:"</span>, predictions[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].unique())</span>
<span id="cb12-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New Range:"</span>, predictions[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].unique())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000020624
Old Range: [4.09390497 4.09556913 4.09526396]
New Range: [6.03277731 6.03283596]
ENSRNOG00000058006
Old Range: [0.0266992  0.0266884  0.02666909]
New Range: [0.01251906 0.01252023]</code></pre>
</div>
</div>
</section>
<section id="conclusions" class="level2">
<h2 class="anchored" data-anchor-id="conclusions">Conclusions</h2>
<p>For both genes, centering enformer predictions at the TSS, rather than the start and end of genes, reduces variation in CAGE predictions. It is unclear to me why shifting the center increases CAGE values around the TSS for one gene but decreases them for the other gene. I think I should focus on picking genes with (1) more variation in observed expression, (2) CAGE peaks at the TSS, and (3) high R2 in elasticnet models, and continue centering our intervals around the start and end of our genes.</p>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/2023-08-08-running-enformer-on-rat-genes-at-TSS/variance_at_peaks.html</guid>
  <pubDate>Wed, 09 Aug 2023 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
