<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>deep-learning-in-genomics</title>
<link>https://sabrinami.quarto.pub/deep-learning-in-genomics/index.html</link>
<atom:link href="https://sabrinami.quarto.pub/deep-learning-in-genomics/index.xml" rel="self" type="application/rss+xml"/>
<description>Sabrina&#39;s blog for Deep Learning in Genomics course</description>
<generator>quarto-1.3.361</generator>
<lastBuildDate>Tue, 25 Jul 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>Running the Enformer Pipeline locally</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-locally/run_locally.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">SCRIPTS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Github/shared_folder/enformer_pipeline/scripts/"</span> </span>
<span id="cb1-2">MODULES<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SCRIPTS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modules/"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Collecting cyvcf2
  Downloading cyvcf2-0.30.22-cp39-cp39-macosx_10_9_x86_64.whl (3.2 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.2/3.2 MB 5.3 MB/s eta 0:00:0000:0100:01
Requirement already satisfied: numpy in /Users/sabrinami/miniconda3/envs/tf/lib/python3.9/site-packages (from cyvcf2) (1.24.3)
Collecting coloredlogs (from cyvcf2)
  Using cached coloredlogs-15.0.1-py2.py3-none-any.whl (46 kB)
Requirement already satisfied: click in /Users/sabrinami/miniconda3/envs/tf/lib/python3.9/site-packages (from cyvcf2) (8.1.4)
Collecting humanfriendly&gt;=9.1 (from coloredlogs-&gt;cyvcf2)
  Downloading humanfriendly-10.0-py2.py3-none-any.whl (86 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 86.8/86.8 kB 1.4 MB/s eta 0:00:00a 0:00:01
Installing collected packages: humanfriendly, coloredlogs, cyvcf2
Successfully installed coloredlogs-15.0.1 cyvcf2-0.30.22 humanfriendly-10.0
Note: you may need to restart the kernel to use updated packages.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys, json, re</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating dataframes</span></span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##import parsl ## local runs, no parsl</span></span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> date</span>
<span id="cb3-6"></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># some locations and folders</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># whereis_script = os.path.dirname(__file__) #os.path.dirname(sys.argv[0]) # or os.path.dirname(__file__)</span></span>
<span id="cb3-10">script_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SCRIPTS</span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch_utils_path = os.path.join(script_path, 'modules')</span></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sys.path.append(batch_utils_path)</span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## MODULES should be the location of the modules</span></span>
<span id="cb3-15">sys.path.append(MODULES)</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> loggerUtils</span>
<span id="cb3-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> directives</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> enformer_predict(parameters):</span>
<span id="cb4-3"></span>
<span id="cb4-4">    params_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters</span>
<span id="cb4-5"></span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isabs(params_path):</span>
<span id="cb4-7">        params_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.abspath(params_path)</span>
<span id="cb4-8"></span>
<span id="cb4-9">    p_two <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(script_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'modules'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictUtils_two.py'</span>)</span>
<span id="cb4-10"></span>
<span id="cb4-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>params_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-12">        parameters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb4-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The rest of the script remains the same</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">        prediction_data_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_data_name'</span>]</span>
<span id="cb4-16">        prediction_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_id'</span>]</span>
<span id="cb4-17">        run_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> date.today().strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-18"></span>
<span id="cb4-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sub_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb4-20">            project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'project_dir'</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictions_folder'</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'predictions_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sub_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb4-22">            project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'project_dir'</span>], <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'predictions_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-24">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERROR - `sub_dir` argument must be a boolean, either true or false'</span>)</span>
<span id="cb4-25"></span>
<span id="cb4-26">        interval_list_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'interval_list_file'</span>]</span>
<span id="cb4-27">        predictions_log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(project_dir, parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictions_log_dir'</span>])</span>
<span id="cb4-28">        job_log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(project_dir, parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'write_log'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logdir'</span>])</span>
<span id="cb4-29">        n_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_regions"</span>]</span>
<span id="cb4-30">        batch_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'batch_regions'</span>])</span>
<span id="cb4-31">        use_parsl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'use_parsl'</span>]</span>
<span id="cb4-32">        parsl_parameters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'parsl_parameters'</span>]</span>
<span id="cb4-33">        sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence_source'</span>]</span>
<span id="cb4-34">        exclude_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exclude_regions"</span>]</span>
<span id="cb4-35">        reverse_complement <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reverse_complement"</span>]</span>
<span id="cb4-36">    </span>
<span id="cb4-37">        metadata_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'metadata_dir'</span>]</span>
<span id="cb4-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(metadata_dir):</span>
<span id="cb4-39">            os.makedirs(metadata_dir)</span>
<span id="cb4-40"></span>
<span id="cb4-41">        output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(project_dir, parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'output_dir'</span>])</span>
<span id="cb4-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(output_dir):</span>
<span id="cb4-43">            os.makedirs(output_dir)</span>
<span id="cb4-44"></span>
<span id="cb4-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_regions) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb4-46">            n_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_regions) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-48">            n_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n_regions) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(n_regions, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-49"></span>
<span id="cb4-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># personalized parameters </span></span>
<span id="cb4-51">        individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'individuals'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-52">        vcf_files_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vcf_files'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-53"></span>
<span id="cb4-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span>:</span>
<span id="cb4-55">             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use only the chromosomes that have been made available in the config file vcf params</span></span>
<span id="cb4-56">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Sequence source is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sequence_source<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. Using a reference genome + vcf files.'</span>)</span>
<span id="cb4-57">            chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(vcf_files_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'files'</span>].keys())</span>
<span id="cb4-58"></span>
<span id="cb4-59">            batch_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch_individuals"</span>]</span>
<span id="cb4-60">            n_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_individuals'</span>])</span>
<span id="cb4-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of chromosomes (if the sequence source is reference)</span></span>
<span id="cb4-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>:</span>
<span id="cb4-63">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Sequence source is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sequence_source<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. Using a reference genome.'</span>)</span>
<span id="cb4-64">            chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>)]</span>
<span id="cb4-65">            chromosomes.extend([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chrX'</span>])</span>
<span id="cb4-66"></span>
<span id="cb4-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> reverse_complement:</span>
<span id="cb4-68">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Predicting on reverse complements too'</span>)</span>
<span id="cb4-69"></span>
<span id="cb4-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # write the params_path to a config.json file in a predefined folder</span></span>
<span id="cb4-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tmp_config_data = {'params_path': params_path}</span></span>
<span id="cb4-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tmp_config_file = os.path.join(batch_utils_path, f'tmp_config_{prediction_data_name}_{prediction_id}.json')</span></span>
<span id="cb4-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with open(tmp_config_file, mode='w') as cj:</span></span>
<span id="cb4-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     json.dump(tmp_config_data, cj)</span></span>
<span id="cb4-75"></span>
<span id="cb4-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modify parsl parameters to add the working directory</span></span>
<span id="cb4-77">    parsl_parameters[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'working_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> project_dir</span>
<span id="cb4-78"></span>
<span id="cb4-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(job_log_dir):</span>
<span id="cb4-80">        os.makedirs(job_log_dir)</span>
<span id="cb4-81"></span>
<span id="cb4-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set parsl directives</span></span>
<span id="cb4-83">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_parsl:</span>
<span id="cb4-84">        directives.parsl_directives(use_parsl, parsl_parameters)</span>
<span id="cb4-85">    </span>
<span id="cb4-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># importing this module does not work; best to execute it here</span></span>
<span id="cb4-87">    predict_utils_one <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(script_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'modules'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictUtils_one.py'</span>)</span>
<span id="cb4-88">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exec</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(predict_utils_one).read(), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>(), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>())</span>
<span id="cb4-89"></span>
<span id="cb4-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># decorate the prediction function with or without parsl</span></span>
<span id="cb4-91">    prediction_fxn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> return_prediction_function(use_parsl)</span>
<span id="cb4-92"></span>
<span id="cb4-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># determine what individuals to predict on and all that</span></span>
<span id="cb4-94">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span>:</span>
<span id="cb4-95">        </span>
<span id="cb4-96">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>):</span>
<span id="cb4-97">            id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals</span>
<span id="cb4-98">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb4-99">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'str'</span>)):</span>
<span id="cb4-100">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isfile(individuals):</span>
<span id="cb4-101">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb4-102">                    id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(individuals, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:]</span>
<span id="cb4-103">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> n_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-104">                    id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(individuals, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:(n_individuals)]</span>
<span id="cb4-105">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-106">                id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [individuals]</span>
<span id="cb4-107">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(id_list)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals to predict on'</span>)</span>
<span id="cb4-108"></span>
<span id="cb4-109">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>:</span>
<span id="cb4-110">        id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [prediction_data_name]</span>
<span id="cb4-111">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found one reference set named </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>id_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> to predict on'</span>)</span>
<span id="cb4-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'random'</span>:</span>
<span id="cb4-113">        id_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [prediction_data_name]</span>
<span id="cb4-114">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Prediction will be on a randomly generated set'</span>)</span>
<span id="cb4-115"></span>
<span id="cb4-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set log files to be put in a folder and touch the log files per sample</span></span>
<span id="cb4-117">    prediction_logfiles_folder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions_log_dir</span>
<span id="cb4-118">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.isdir(prediction_logfiles_folder):</span>
<span id="cb4-119">        os.makedirs(prediction_logfiles_folder)</span>
<span id="cb4-120">        </span>
<span id="cb4-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of intervals to be predicted on</span></span>
<span id="cb4-122">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(interval_list_file, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>).dropna(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#.drop_duplicates(subset=['region', 'sample', 'status', 'sequence_source'], keep='last')</span></span>
<span id="cb4-123">    list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:(n_regions)] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a list of queries</span></span>
<span id="cb4-124">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(list_of_regions)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> regions to be split into batches with at most </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>batch_regions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> regions in each batch.'</span>)</span>
<span id="cb4-125"></span>
<span id="cb4-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># filter the list of chromosomes to be compatible with the available regions</span></span>
<span id="cb4-127">    chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>([r.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> list_of_regions]))</span>
<span id="cb4-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(f'INFO - Chromosomes to predict on are: {chromosomes}')</span></span>
<span id="cb4-129"></span>
<span id="cb4-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># should some regions be excluded?</span></span>
<span id="cb4-131">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> exclude_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb4-132">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seach for the invalid_regions.csv file</span></span>
<span id="cb4-133">        exclude_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(job_log_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'invalid_queries.csv'</span>)</span>
<span id="cb4-134">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isfile(exclude_file):</span>
<span id="cb4-135">            exclude_these_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(exclude_file)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'region'</span>].tolist()</span>
<span id="cb4-136">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Found regions to be excluded from the input regions.'</span>)</span>
<span id="cb4-137">            list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [l <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> list_of_regions <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> exclude_these_regions]  </span>
<span id="cb4-138">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Updated number of regions to predict on is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(list_of_regions)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-139">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-140">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - No regions to exclude yet. You either did not supply a file, this is the first run, or there are truly no regions to exclude'</span>)</span>
<span id="cb4-141">            exclude_these_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-142">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-143">        exclude_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-144">    </span>
<span id="cb4-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch the samples too</span></span>
<span id="cb4-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if you have 1000 individuals, it may be too much</span></span>
<span id="cb4-147">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(id_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:</span>
<span id="cb4-148">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> batch_individuals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb4-149">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(batch_individuals, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb4-150">                sample_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(generate_batch_n_elems(id_list, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> batch_individuals)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5 samples in each batch</span></span>
<span id="cb4-151">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - There are more than 10 individuals. Predictions will be done for every </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>batch_individuals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals.'</span>)</span>
<span id="cb4-152">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-153">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'ERROR - argument `batch_individuals` is not a str type. You supplied a </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(batch_individuals)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-154">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-155">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - You have multiple individuals/samples and have not supplied how to batch them. For efficient use of resources, use the `batch_individuals` argument.'</span>)</span>
<span id="cb4-156">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-157">        sample_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [id_list] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put the list in a list</span></span>
<span id="cb4-158">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - There seem to be just one sample i.e. </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_batches<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. No need to batch.'</span>)</span>
<span id="cb4-159"></span>
<span id="cb4-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to make this fast, pass multiple regions to one parsl app</span></span>
<span id="cb4-161">    sample_app_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-162">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sample_list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample_batches:</span>
<span id="cb4-163">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> chromosome <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chromosomes:</span>
<span id="cb4-164">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(chromosome)</span></span>
<span id="cb4-165">            chr_list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [r <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> list_of_regions <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> r.startswith(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_"</span>)]</span>
<span id="cb4-166">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span>:</span>
<span id="cb4-167">                chr_vcf_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(vcf_files_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'folder'</span>], vcf_files_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'files'</span>][chromosome])</span>
<span id="cb4-168">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>:</span>
<span id="cb4-169">                chr_vcf_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-170"></span>
<span id="cb4-171">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> chr_list_of_regions:</span>
<span id="cb4-172">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'WARNING - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> sites are not available.'</span>)</span>
<span id="cb4-173">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb4-174"></span>
<span id="cb4-175">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I want many regions to be put in a parsl app</span></span>
<span id="cb4-176">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(chr_list_of_regions) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> batch_regions:</span>
<span id="cb4-177">                region_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_batch_n_elems(chr_list_of_regions, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_regions) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch_regions total batches</span></span>
<span id="cb4-178">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-179">                region_batches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [chr_list_of_regions]</span>
<span id="cb4-180">            </span>
<span id="cb4-181">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-182">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> region_list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> region_batches:</span>
<span id="cb4-183">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(len(sample_list))</span></span>
<span id="cb4-184">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(f'{len(region_list)} regions in {chromosome} for {len(sample_list)} samples')</span></span>
<span id="cb4-185">                sample_app_futures.append(prediction_fxn(batch_regions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(region_list), samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sample_list), path_to_vcf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chr_vcf_file, batch_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count, script_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>script_path, output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir, prediction_logfiles_folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_logfiles_folder, sequence_source<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sequence_source, tmp_config_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params_path, p_two<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p_two))   </span>
<span id="cb4-186"></span>
<span id="cb4-187">                count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> </span>
<span id="cb4-188"></span>
<span id="cb4-189">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_parsl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb4-190">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Executing parsl futures for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_app_futures)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> parsl apps'</span>)</span>
<span id="cb4-191">        exec_futures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample_app_futures] </span>
<span id="cb4-192">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(sample_app_futures)</span></span>
<span id="cb4-193">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Finished predictions for all'</span>)</span>
<span id="cb4-194">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> use_parsl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb4-195">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Finished predictions for: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_app_futures<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> ...'</span>)</span>
<span id="cb4-196"></span>
<span id="cb4-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># just so I don't have to deal with having too many resources, I can request a small amount of resource</span></span>
<span id="cb4-198">    check_fxn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> return_check_function(use_parsl)</span>
<span id="cb4-199">    SUMMARY_FILE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(job_log_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.summary'</span>)</span>
<span id="cb4-200">    summary_exec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-201">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sample <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> id_list:</span>
<span id="cb4-202">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isfile(os.path.join(prediction_logfiles_folder, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_log.csv"</span>)):</span>
<span id="cb4-203">            summary_exec.append(check_fxn(sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample, predictions_folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir, log_folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_logfiles_folder, interval_list_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>interval_list_file, exclude_csv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exclude_file, sequence_source<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sequence_source))</span>
<span id="cb4-204"></span>
<span id="cb4-205">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_parsl:</span>
<span id="cb4-206">        summary_exec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [q.result() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> summary_exec]</span>
<span id="cb4-207">        parsl.clear() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># end parsl</span></span>
<span id="cb4-208"></span>
<span id="cb4-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#summary_exec = list(set(summary_exec))</span></span>
<span id="cb4-210">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, qr <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(summary_exec):</span>
<span id="cb4-211">        loggerUtils.write_logger(log_msg_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qr[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logtype'</span>], logfile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SUMMARY_FILE, message<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qr[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logmessage'</span>])</span>
<span id="cb4-212"></span>
<span id="cb4-213">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># regex the summary file and save the failed ones e.t.c to csv</span></span>
<span id="cb4-214">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- there is a better way to do this but for now, this will do</span></span>
<span id="cb4-215"></span>
<span id="cb4-216">    warning_pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"^\[WARNING.*For\s(\w+|\d+).*"</span></span>
<span id="cb4-217">    success_pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"^\[INFO.*For\s(\w+|\d+).*"</span></span>
<span id="cb4-218">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(SUMMARY_FILE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-219">        lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(f.readlines()))</span>
<span id="cb4-220">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(line)</span></span>
<span id="cb4-221">    warning_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [re.search(warning_pattern, l).group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lines <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> re.search(warning_pattern, l) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb4-222">    success_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [re.search(success_pattern, l).group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lines <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> re.search(success_pattern, l) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb4-223"></span>
<span id="cb4-224">    pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(warning_result))).to_csv(os.path.join(metadata_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.unsuccessful_predictions.csv'</span>), index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-225"></span>
<span id="cb4-226">    pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(success_result))).to_csv(os.path.join(metadata_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.successful_predictions.csv'</span>), index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-227"></span>
<span id="cb4-228">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># collect the successfule predictions</span></span>
<span id="cb4-229">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># successful_predictions = list(set([q['sample'] for q in summary_exec if q['logtype'] == 'INFO']))</span></span>
<span id="cb4-230">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unsuccessful_predictions = list(set([q['sample'] for q in summary_exec if q['logtype'] == 'WARNING']))</span></span>
<span id="cb4-231">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pd.DataFrame({'successful_predictions':successful_predictions}).to_csv(os.path.join(metadata_dir, f'{prediction_data_name}_{prediction_id}_{run_date}.successful_predictions.csv'), index=False, header=False)</span></span>
<span id="cb4-232">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pd.DataFrame({'unsuccessful_predictions':unsuccessful_predictions}).to_csv(os.path.join(metadata_dir, f'{prediction_data_name}_{prediction_id}_{run_date}.unsuccessful_predictions.csv'), index=False, header=False)</span></span>
<span id="cb4-233"></span>
<span id="cb4-234">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Check </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>SUMMARY_FILE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for a summary of the entire run.'</span>)</span>
<span id="cb4-235">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Check `</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metadata_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">` for successful and unsucessful predictions.'</span>)</span>
<span id="cb4-236"></span>
<span id="cb4-237">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># == After predictions are complete, a json file will be written out to help with aggregation</span></span>
<span id="cb4-238">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'INFO - Writing `aggregation_config_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.json` file to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metadata_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-239">    agg_dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predictions_folder'</span>: project_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enformer_prediction_path'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_logfiles_folder'</span>:prediction_logfiles_folder, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_data_name'</span>:prediction_data_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence_source'</span>: sequence_source, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run_date'</span>:run_date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prediction_id'</span>:prediction_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'individuals'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reference'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'random'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> individuals, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_individuals'</span>:n_individuals <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> sequence_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'personalized'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>}</span>
<span id="cb4-240"></span>
<span id="cb4-241">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metadata_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/aggregation_config_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_data_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prediction_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.json'</span>, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>)) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> wj:</span>
<span id="cb4-242">        json.dump(agg_dt, wj)</span>
<span id="cb4-243"></span>
<span id="cb4-244">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove temporatry config file</span></span>
<span id="cb4-245">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(f"INFO - Cleaning up: Removing temporary config file at {tmp_config_file}")</span></span>
<span id="cb4-246">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># os.remove(tmp_config_file)</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">enformer_predict(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run_locally.json'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>INFO - Sequence source is reference. Using a reference genome.
INFO - Found one reference set named reference_enformer_minimal to predict on
INFO - Found 2 regions to be split into batches with at most 5 regions in each batch.
INFO - No regions to exclude yet. You either did not supply a file, this is the first run, or there are truly no regions to exclude
INFO - There seem to be just one sample i.e. [['reference_enformer_minimal']]. No need to batch.
Using this config file: /Users/sabrinami/Github/shared_folder/enformer_pipeline/run_locally.json
Sample reference_enformer_minimal chr1_65419_71585 haplotype0 predictions are of the correct shape:  (896, 5313)
Sample reference_enformer_minimal chr1_65419_71585 haplotypes predictions have been saved.
Sample reference_enformer_minimal chr1_65419_71585 haplotypes predictions have been logged.
Sample reference_enformer_minimal chr1_450740_451678 haplotype0 predictions are of the correct shape:  (896, 5313)
Sample reference_enformer_minimal chr1_450740_451678 haplotypes predictions have been saved.
Sample reference_enformer_minimal chr1_450740_451678 haplotypes predictions have been logged.
[INFO] (time) to predict on batch 0 is 90.45835176800006
INFO - Finished predictions for: [[0, 0]] ...
INFO - Check /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/reference_enformer_minimal_some_regions/predictions_2023-07-24/job_logs/reference_enformer_minimal_some_regions_2023-07-24.summary for a summary of the entire run.
INFO - Check `/Users/sabrinami/Github/shared_folder/enformer_pipeline/metadata` for successful and unsucessful predictions.
INFO - Writing `aggregation_config_reference_enformer_minimal_some_regions.json` file to /Users/sabrinami/Github/shared_folder/enformer_pipeline/metadata</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>WARNING:kipoi_utils.external.related.mixins:Unrecognized fields for DataLoaderDescription: {'postprocessing'}. Available fields are {'info', 'output_schema', 'type', 'args', 'dependencies', 'writers', 'path', 'defined_as'}
WARNING:kipoi_utils.external.related.mixins:Unrecognized fields for DataLoaderDescription: {'postprocessing'}. Available fields are {'info', 'output_schema', 'type', 'args', 'dependencies', 'writers', 'path', 'defined_as'}
WARNING:kipoi_utils.external.related.mixins:Unrecognized fields for DataLoaderDescription: {'postprocessing'}. Available fields are {'info', 'output_schema', 'type', 'args', 'dependencies', 'writers', 'path', 'defined_as'}
[INFO: 07/24/2023 10:43:13 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_65419_71585]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_65419_71585]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
[INFO: 07/24/2023 10:43:58 AM] [CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1) for chr1_450740_451678]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[INFO: 07/24/2023 10:44:42 AM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=1, maxsize=5, currsize=1)]
[WARNING: 07/24/2023 10:44:42 AM] WARNING - For reference_enformer_minimal, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
WARNING:summary_log:WARNING - For reference_enformer_minimal, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb8-2">file_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/reference_enformer_minimal_some_regions/predictions_2023-07-24/enformer_predictions/reference_enformer_minimal/haplotype0/chr1_65419_71585_predictions.h5"</span></span>
<span id="cb8-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb8-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List all the groups and datasets in the file</span></span>
<span id="cb8-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Groups and Datasets in the HDF5 file:"</span>)</span>
<span id="cb8-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb8-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(name)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Groups and Datasets in the HDF5 file:
chr1_65419_71585</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb10-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 2: Access datasets and attributes within the file</span></span>
<span id="cb10-3">    dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr1_65419_71585"</span></span>
<span id="cb10-4">    dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>[dataset_name]</span>
<span id="cb10-5"></span>
<span id="cb10-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Read the entire dataset into a NumPy array</span></span>
<span id="cb10-7">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[()]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.shape)</span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(896, 5313)
[[0.5291589  0.5204935  0.57351285 ... 0.00935043 0.01473221 0.01198051]
 [0.65397567 0.6207656  0.7431343  ... 0.01434602 0.02783546 0.02128439]
 [0.5326947  0.5510576  0.767584   ... 0.01038613 0.03195343 0.0286333 ]
 ...
 [0.00713983 0.0077101  0.00634603 ... 0.00115762 0.01039891 0.00428226]
 [0.00585703 0.00676019 0.00490488 ... 0.0047263  0.0377146  0.01976843]
 [0.00355603 0.00391064 0.00305343 ... 0.00085077 0.00762693 0.00313292]]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">enformer_predict(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run_local_personalized.json'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>INFO - Sequence source is personalized. Using a reference genome + vcf files.
INFO - Found 2 individuals to predict on
INFO - Found 2 regions to be split into batches with at most 5 regions in each batch.
INFO - No regions to exclude yet. You either did not supply a file, this is the first run, or there are truly no regions to exclude
INFO - There seem to be just one sample i.e. [['HG00096', 'HG00097']]. No need to batch.
Using this config file: /Users/sabrinami/Github/shared_folder/enformer_pipeline/run_local_personalized.json
Sample HG00096 chr1_65419_71585 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_65419_71585 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_65419_71585 haplotypes predictions have been saved.
Sample HG00096 chr1_65419_71585 haplotypes predictions have been logged.
Sample HG00097 chr1_65419_71585 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_65419_71585 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_65419_71585 haplotypes predictions have been saved.
Sample HG00097 chr1_65419_71585 haplotypes predictions have been logged.
Sample HG00096 chr1_450740_451678 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_450740_451678 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00096 chr1_450740_451678 haplotypes predictions have been saved.
Sample HG00096 chr1_450740_451678 haplotypes predictions have been logged.
Sample HG00097 chr1_450740_451678 haplotype1 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_450740_451678 haplotype2 predictions are of the correct shape:  (896, 5313)
Sample HG00097 chr1_450740_451678 haplotypes predictions have been saved.
Sample HG00097 chr1_450740_451678 haplotypes predictions have been logged.
[INFO] (time) to predict on batch 0 is 1503.2652588659985
INFO - Finished predictions for: [[0, 0, 0, 0]] ...
INFO - Check /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-24/job_logs/personalized_enformer_minimal_some_regions_2023-07-24.summary for a summary of the entire run.
INFO - Check `/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline/metadata` for successful and unsucessful predictions.
INFO - Writing `aggregation_config_personalized_enformer_minimal_some_regions.json` file to /Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline/metadata</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
[INFO: 07/24/2023 03:25:05 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_65419_71585]
/Users/sabrinami/Github/shared_folder/enformer_pipeline/scripts/modules/sequencesUtils.py:177: UserWarning: no intervals found for b'/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/Reference-Data/1000G/vcf_snps_only/ALL.chr1.shapeit2_integrated_SNPs_v2a_27022019.GRCh38.phased.vcf.gz' at chr1:-128105-265111
  variants_dictionary['positions'] = tuple(variant.POS for variant in cyvcf2_object(query))
[E::hts_parse_region] Coordinates must be &gt; 0
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:49 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:34:50 PM] [CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
INFO:cache_log:[CACHE] (fasta) [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2) for chr1_450740_451678]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[INFO: 07/24/2023 03:38:37 PM] [CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
INFO:cache_log:[CACHE] (model) at batch 0: [CacheInfo(hits=1, misses=2, maxsize=5, currsize=2)]
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00096, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00096, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
WARNING:summary_log:WARNING - For HG00096, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
[WARNING: 07/24/2023 03:38:38 PM] WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.
WARNING:summary_log:WARNING - For HG00097, either all predictions don't match all logged queries in the interval list files minus excluded regions or vice versa. This can happen if you have supplied a list of intervals but have chosen to predict on a subset. If this is the case, this behavior is normal. If you are unsure, please re-run the enformer prediction pipeline with the same parameters. You may supply a csv file of regions to exclude if available, but this should not matter.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb16-2">file_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Desktop/2022-23/tutorials/enformer_pipeline_test/predictions_folder/personalized_enformer_minimal_some_regions/predictions_2023-07-24/enformer_predictions/HG00096/haplotype1/chr1_65419_71585_predictions.h5"</span></span>
<span id="cb16-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb16-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List all the groups and datasets in the file</span></span>
<span id="cb16-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Groups and Datasets in the HDF5 file:"</span>)</span>
<span id="cb16-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb16-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(name)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Groups and Datasets in the HDF5 file:
chr1_65419_71585</code></pre>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> h5py.File(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb18-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 2: Access datasets and attributes within the file</span></span>
<span id="cb18-3">    dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr1_65419_71585"</span></span>
<span id="cb18-4">    dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>[dataset_name]</span>
<span id="cb18-5"></span>
<span id="cb18-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Read the entire dataset into a NumPy array</span></span>
<span id="cb18-7">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[()]</span>
<span id="cb18-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.shape)</span>
<span id="cb18-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(896, 5313)
[[0.5291589  0.5204935  0.57351285 ... 0.00935043 0.01473221 0.01198051]
 [0.65397567 0.6207656  0.7431343  ... 0.01434602 0.02783546 0.02128439]
 [0.5326947  0.5510576  0.767584   ... 0.01038613 0.03195343 0.0286333 ]
 ...
 [0.00713983 0.0077101  0.00634603 ... 0.00115762 0.01039891 0.00428226]
 [0.00585703 0.00676019 0.00490488 ... 0.0047263  0.0377146  0.01976843]
 [0.00355603 0.00391064 0.00305343 ... 0.00085077 0.00762693 0.00313292]]</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-locally/run_locally.html</guid>
  <pubDate>Tue, 25 Jul 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>A test run of the Enformer pipeline on Palmer Lab rat data</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/test-run-of-enformer-pipeline-on-rat-data/index.html</link>
  <description><![CDATA[ 




<p>All of the data is publicly available</p>
<ul>
<li><a href="https://hgdownload.soe.ucsc.edu/goldenPath/rn7/bigZips/rn7.fa.gz%20%7C%20gunzip%20-c%20%3E%20%7Bfasta_file%7D">Reference Genome</a></li>
<li><a href="https://ratgtex.org/data/geno/Brain.rn7.vcf.gz">Genotypes</a></li>
<li><a href="https://ratgtex.org/data/expr/Brain.rn7.expr.tpm.bed.gz">Gene Expression</a></li>
</ul>
<p>First, I checked that enformer could run on the rat data in python using code provided by deepmind.</p>
<ul>
<li><a href="https://github.com/hakyimlab/sabrina-deep-learning-in-genomics/blob/main/posts/test-run-of-enformer-pipeline-on-rat-data/code/000789972A_chr1_1001138_1014540.py">000789972A_chr1_1001138_1014540.py</a>: Personalized enformer run on individual 000789972A on chromosome 1, 1001138 to 1014540.</li>
<li><a href="https://github.com/hakyimlab/sabrina-deep-learning-in-genomics/blob/main/posts/test-run-of-enformer-pipeline-on-rat-data/code/EnformerVCF.py">EnformerVCF.py</a>: Helper functions provided by deepmind along with some VCF handling functions.</li>
</ul>
<p>Next, I needed to <a href="https://github.com/hakyimlab/sabrina-deep-learning-in-genomics/blob/main/posts/test-run-of-enformer-pipeline-on-rat-data/code/prepare_pipeline_inputs.sh">process the data for the pipeline</a>. This included splitting the VCF by chromosome, indexing the new VCFs, and creating a list of individuals.</p>
<p>I wrote my config json (<code>/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/config_files/run_on_polaris_personalized.json</code> on polaris):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"individuals"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/metadata/individuals.txt"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"project_dir"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"interval_list_file"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/metadata/intervals.txt"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"prediction_data_name"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"personalized_enformer_minimal"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"prediction_id"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"some_regions"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"reverse_complement"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"date"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"exclude_regions"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"n_individuals"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"batch_individuals"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"vcf_files"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"folder"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_rat_data/BrainVCFs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"files"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-15">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr1"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr1.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-16">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr2"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr2.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-17">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr3"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr3.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-18">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr4"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr4.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-19">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr5"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr5.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-20">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr6"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr6.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-21">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr7"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr7.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-22">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr8"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr8.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-23">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr9"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr9.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-24">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr10"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr10.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-25">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr11"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr11.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-26">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr12"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr12.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-27">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr13"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr13.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-28">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr14"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr14.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-29">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr15"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr15.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-30">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr16"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr16.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-31">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr17"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr17.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-32">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr18"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr18.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-33">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr19"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr19.vcf.gz"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-34">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"chr20"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr20.vcf.gz"</span></span>
<span id="cb1-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb1-37">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"sub_dir"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-38">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"use_parsl"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-39">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"model_path"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lus/grand/projects/TFXcan/imlab/data/enformer/raw"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-40">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"fasta_file"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_data/rn7_genome.fasta"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-41">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"metadata_dir"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/metadata"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-42">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"output_dir"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer_predictions"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-43">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"tracks_to_save"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-44">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bins_to_save"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-45">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"sequence_source"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"personalized"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-46">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"predictions_log_dir"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predictions_log"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-47">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"batch_regions"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-48">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"n_regions"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-49">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"write_log"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"logdir"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"job_logs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"logtypes"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-52">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"memory"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-53">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"error"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-54">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"time"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-55">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"cache"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb1-56">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb1-58">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"parsl_parameters"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-59">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"job_name"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enformer_predict_regions_personalized"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"num_of_full_nodes"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-61">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"walltime"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"00:30:00"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-62">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"init_blocks"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-63">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"min_num_blocks"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-64">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"max_num_blocks"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-65">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"queue"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preemptable"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-66">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"account"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TFXcan"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-67">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"hpc"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"polaris"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-68">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"provider"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"highthroughput"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-69">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"worker_init"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"source ~/.bashrc; module load conda; conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools; which python; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools/lib"</span></span>
<span id="cb1-70">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<pre><code>cd /home/s1mi/Github/shared_folder/enformer_pipeline

module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

python3 scripts/enformer_predict.py --parameters /home/s1mi/enformer_rat_pipeline/config_files/run_on_polaris_personalized.json
</code></pre>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/test-run-of-enformer-pipeline-on-rat-data/index.html</guid>
  <pubDate>Thu, 20 Jul 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Getting started on Polaris</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/polaris-intro/index.html</link>
  <description><![CDATA[ 




<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>More info can be found on:</p>
<ul>
<li><a href="https://docs.alcf.anl.gov/polaris/getting-started/">Main Page</a></li>
<li><a href="https://docs.alcf.anl.gov/running-jobs/example-job-scripts/">Example Job Scripts</a></li>
</ul>
</section>
<section id="shortcuts" class="level2">
<h2 class="anchored" data-anchor-id="shortcuts">Shortcuts</h2>
<ul>
<li>Login: <code>ssh s1mi@polaris.alcf.anl.gov</code></li>
<li>Main project storage: <code>/lus/grand/projects/TFXcan</code></li>
<li>Interactive Job: <code>qsub -I -A TFXcan -l select=1 -l filesystems=home:grand -l walltime=1:00:00 -q debug</code></li>
</ul>
</section>
<section id="basic-job-script" class="level2">
<h2 class="anchored" data-anchor-id="basic-job-script">Basic Job Script</h2>
<pre><code>#!/bin/bash
#PBS -A $PROJECT
#PBS -lwalltime=01:00:00
#PBS -lselect=4
#PBS -lsystem=polaris
#PBS -lfilesystems=home:eagle

rpn=4 # assume 1 process per GPU
procs=$((PBS_NODES*rpn))

# job to “run” from your submission directory
cd $PBS_O_WORKDIR

module load &lt;something&gt;

set +x # report all commands to stderr
env
mpiexec -n $procs -ppn $rpn --cpu-bind core -genvall ./bin &lt;opts&gt;
</code></pre>
</section>
<section id="conda-environments" class="level2">
<h2 class="anchored" data-anchor-id="conda-environments">Conda Environments</h2>
<p>Before activating and deactivating environments, we need to run <code>module load conda</code>.</p>
<p>To create an environment:</p>
<pre><code>module load conda

export http_proxy=http://proxy.alcf.anl.gov:3128
export https_proxy=$http_proxy

conda create -n ml-python python=3.10
conda activate ml-python
conda install -y jupyter nb_conda ipykernel mpi
conda install -y pytorch torchvision -c pytorch
conda install -c conda-forge tensorflow
python -m ipykernel install --user --name ml-python</code></pre>
<p>The last line creates a new directory <code>~/.local/share/jupyter/kernels/ml-python</code>. We add a couple lines to <code>kernel.json</code> so that we can use the new environment in the our Jupyter notebooks:</p>
<pre><code>{
  "argv": [
    "/home/s1mi/.conda/envs/ml-python/bin/python",
    "-m",
    "ipykernel_launcher",
    "-f",
    "{connection_file}"
  ],
  "display_name": "ml-python",
  "language": "python",
  "env": {
    "CONDA_PREFIX": "/home/s1mi/.conda/envs/ml-python",
    "PATH": "/home/s1mi/.conda/envs/ml-python:${PATH}",
    "http_proxy": "http://proxy.alcf.anl.gov:3128",
    "https_proxy": "http://proxy.alcf.anl.gov:3128"
  },
  "metadata": {
    "debugger": true
  }
}</code></pre>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/polaris-intro/index.html</guid>
  <pubDate>Mon, 26 Jun 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Week 1</title>
  <dc:creator>Sabrina Mi</dc:creator>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/week-1/index.html</link>
  <description><![CDATA[ 




<p>Here’s my notes from the <a href="https://www.w3schools.com/python/numpy/numpy_intro.asp">w3 NumPy tutorial</a>:</p>
<section id="data-types-in-numpy" class="level2">
<h2 class="anchored" data-anchor-id="data-types-in-numpy">Data Types in Numpy:</h2>
<p>By default, Python has strings, integer, float, boolean, and complex. NumPy has extra data types:</p>
<ul>
<li>i: integer</li>
<li>b: boolean</li>
<li>u: unsigned integer</li>
<li>f: float</li>
<li>c: complex float</li>
<li>m: timedelta</li>
<li>M: datetime</li>
<li>O: object</li>
<li>S: string</li>
<li>U: unicode string</li>
<li>V: void</li>
</ul>
</section>
<section id="pytorch-notes" class="level1">
<h1>PyTorch Notes</h1>
<p>PyTorch is a machine learning framework leveraging two key features:</p>
<ul>
<li>Tensor computing on GPUs</li>
<li>Deep neural networks on an automatic differentiation engine</li>
</ul>
<p>Deep learning softwares including Enformer are built on top of PyTorch.</p>
<p>We covered the basics of the pytorch library in Python, starting with <a href="https://pytorch.org/tutorials/beginner/blitz/tensor_tutorial.html">Tensors</a>. Tensors function very similarly to NumPy arrays, but the operations can be run on GPUs. As a result, the tensor operations have counterparts in the numpy library.</p>
<p>We’ll only write about new concepts:</p>
<section id="tensors" class="level3">
<h3 class="anchored" data-anchor-id="tensors">Tensors</h3>
<p>By default, tensors are intialized on CPU. To move a tensor from CPU to GPU, we run:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"></span>
<span id="cb1-4">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb1-5">x_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(data)</span>
<span id="cb1-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tensor([[1, 2],
        [3, 4]])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> torch.cuda.is_available():</span>
<span id="cb3-2">  tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>)</span>
<span id="cb3-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Device tensor is stored on: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tensor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>device<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</div>
<p>Tensors on the CPU and NumPy arrays can share their underlying memory locations, and changing one will change the other.</p>
<p>Below we convert a torch tensor to numpy array and add 1 to every element.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ones(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"t: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-3">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.numpy()</span>
<span id="cb4-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"n: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">t.add_(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"t: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"n: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="neural-networks" class="level3">
<h3 class="anchored" data-anchor-id="neural-networks">Neural Networks</h3>
<p>We use <code>torch.nn</code> and <code>torch.autograd</code> packages to develop neural networks.</p>
<p>We learned how to compute gradients for backward propagation with <code>torch.autograd</code> automatic differentiation.</p>
<p>We can <code>torch.nn</code> to first define a neural network in a <code>forward</code> function. Next, we chose a loss function, <code>nn.MSELoss</code> and run back prop as before. We update the weights with SGD update rule:</p>
<pre><code>weight = weight - learning_rate * gradient
</code></pre>
<p><code>torch.optim</code> includes various update rules that take parameters and learning rate as input.</p>
<p>We summarize the typical training procedure for a neural network:</p>
<ul>
<li>Define the neural network that has some learnable parameters (or weights)</li>
<li>Iterate over a dataset of inputs</li>
<li>Process input through the network</li>
<li>Compute the loss (how far is the output from being correct)</li>
<li>Propagate gradients back into the network’s parameters</li>
<li>Update the weights of the network, typically using a simple update rule: <code>weight = weight - learning_rate * gradient</code></li>
</ul>
<p>Lastly, we looked at training on the CIFAR-10 dataset. The process involved the same steps as before, but with a more complex network and more iterations in the training process. We also tested the model.</p>


</section>
</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/week-1/index.html</guid>
  <pubDate>Fri, 23 Jun 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Overview of LLM in Molecular Biology article by Serafim Batzoglou</title>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/llm-in-molecular-biology-article/index.html</link>
  <description><![CDATA[ 




<p>Read the paper <a href="https://towardsdatascience.com/large-language-models-in-molecular-biology-9eb6b65d8a30">here</a></p>
<section id="introduction-to-large-language-models" class="level2">
<h2 class="anchored" data-anchor-id="introduction-to-large-language-models">Introduction to Large Language Models</h2>
<ul>
<li>Large language models like GPT-3 are trained on extensive text data and excel at generating coherent and contextually relevant text.</li>
<li>These models can be adapted for molecular biology tasks by encoding molecular information and training them on relevant datasets.</li>
</ul>
</section>
<section id="protein-structure-prediction" class="level2">
<h2 class="anchored" data-anchor-id="protein-structure-prediction">Protein Structure Prediction</h2>
<ul>
<li>Large language models can assist in predicting protein structures from amino acid sequences.</li>
<li>Language models can generate plausible protein structures, aiding in protein folding predictions and protein engineering.</li>
<li>Challenges include the vast conformational space and the need for high-quality training data to improve accuracy.</li>
</ul>
</section>
<section id="analyzing-dna-sequences" class="level2">
<h2 class="anchored" data-anchor-id="analyzing-dna-sequences">Analyzing DNA Sequences</h2>
<ul>
<li>Language models can be trained to recognize patterns in DNA sequences and identify regulatory elements.</li>
<li>They can predict the effects of genetic mutations, aiding in understanding genetic diseases and personalized medicine.</li>
<li>Large language models have the potential to improve upon existing methods for DNA sequence analysis.</li>
</ul>
</section>
<section id="molecular-design" class="level2">
<h2 class="anchored" data-anchor-id="molecular-design">Molecular Design</h2>
<ul>
<li>Language models can generate novel molecules with desired properties, contributing to drug discovery and material science.</li>
<li>They can suggest potential compounds based on specified criteria, accelerating the search for new drugs.</li>
<li>Large language models in molecular design can assist in exploring the chemical space and generating molecules that were not previously considered.</li>
</ul>
</section>
<section id="limitations-and-challenges" class="level2">
<h2 class="anchored" data-anchor-id="limitations-and-challenges">Limitations and Challenges</h2>
<ul>
<li>Obtaining high-quality training data for molecular biology tasks remains a challenge.</li>
<li>Interpreting the outputs of language models and understanding the underlying biological mechanisms is essential.</li>
<li>Incorporating domain-specific knowledge into language models is crucial for accurate and reliable results.</li>
</ul>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/llm-in-molecular-biology-article/index.html</guid>
  <pubDate>Tue, 20 Jun 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How we could improve plots:</title>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="101">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">gene_expr_bed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/data-Github/rat-genomic-analysis/Enformer-Predictions/data/Brain.rn7.expr.tpm.bed"</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_expr_bed, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/var/folders/1q/nqyt2x9s071fkn235hfq1p680000gn/T/ipykernel_33538/2078132498.py:5: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  obs_gene_expr = pd.read_csv(gene_expr_bed, sep="\t", header=0, index_col='gene_id')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="102">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## TEMPORARILY SUBSET OBS GENE EXPR DATA TO INDIVIDUALS IN BOX FOLDER</span></span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb3-3">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/data-Github/rat-genomic-analysis/Enformer-Predictions/predictions"</span></span>
<span id="cb3-4">individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(predictions_dir)]</span>
<span id="cb3-5">obs_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr[individuals]</span>
<span id="cb3-6"></span>
<span id="cb3-7"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="103">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">gene_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000060045'</span>]</span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(obs_gene_expr.loc[gene_list])</span></span>
<span id="cb4-3"></span>
<span id="cb4-4">pred_vs_obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb4-6">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_gene_expr.loc[gene][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]</span>
<span id="cb4-7">    pred_vs_obs[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>: obs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: np.zeros(obs.shape)})</span></code></pre></div>
</div>
<div class="cell" data-execution_count="104">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> compute_tss_bin(output_window_coords_resized, tss_position, output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>, bin_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, rc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb5-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Computes the bin index of the enformer output bin containing the TSS</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Inputs:</span></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_window_coords_resized: Kipoiseq interval for the output window of Enformer, should already be resized to the model output window size</span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_position: absolute location of TSS</span></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_length: Length of output window in base pairs</span></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    bin_size: Length of output bins in base pairs</span></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Outputs:</span></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_bin: Index of bin containing TSS</span></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb5-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb5-13">        relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(tss_position) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_window_coords_resized.start)</span>
<span id="cb5-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb5-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position)</span></span>
<span id="cb5-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(output_window_coords_resized.start)</span></span>
<span id="cb5-17">        sys.exit()</span>
<span id="cb5-18"></span>
<span id="cb5-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> output_length:</span>
<span id="cb5-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(tss_position, "appears to be out of bounds for output window: ",output_window_coords_resized)</span></span>
<span id="cb5-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> </span>
<span id="cb5-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb5-23">        center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> relative_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> bin_length</span>
<span id="cb5-24"></span>
<span id="cb5-25">        </span>
<span id="cb5-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> rc:</span>
<span id="cb5-27">            number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin_length)</span>
<span id="cb5-28">            new_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> number_of_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> center</span>
<span id="cb5-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(new_center)</span></span>
<span id="cb5-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,new_center,new_center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb5-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb5-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(center)</span></span>
<span id="cb5-33">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,center,center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">annot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/data-Github/rat-genomic-analysis/Enformer-Predictions/data/rn7.gene.txt"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'geneId'</span>)</span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(annot_df.loc[gene_list])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                            geneSymbol chromosome      start        end  \
geneId                                                                    
ENSRNOG00000001342  ENSRNOG00000001342         12   33261476   33293932   
ENSRNOG00000020624              Acadsb          1  186188987  186230379   
ENSRNOG00000058006                Sncg         16    9700514    9705368   
ENSRNOG00000060045               Pi4ka         11   83609069   83724080   

                   strand        tss  \
geneId                                 
ENSRNOG00000001342      -   33293932   
ENSRNOG00000020624      +  186188987   
ENSRNOG00000058006      -    9705368   
ENSRNOG00000060045      +   83609069   

                                                     description  hasEqtl  \
geneId                                                                      
ENSRNOG00000001342     cilia and flagella associated protein 251     True   
ENSRNOG00000020624  acyl-CoA dehydrogenase, short/branched chain     True   
ENSRNOG00000058006                              synuclein, gamma     True   
ENSRNOG00000060045           phosphatidylinositol 4-kinase alpha     True   

                    expr_BLA  expr_Brain  ...  sqtl_BLA  sqtl_Brain  sqtl_Eye  \
geneId                                    ...                                   
ENSRNOG00000001342      True        True  ...     False        True     False   
ENSRNOG00000020624      True        True  ...      True        True     False   
ENSRNOG00000058006      True        True  ...     False        True     False   
ENSRNOG00000060045      True        True  ...     False       False     False   

                    sqtl_IL  sqtl_LHb  sqtl_NAcc  sqtl_NAcc2  sqtl_OFC  \
geneId                                                                   
ENSRNOG00000001342    False     False      False       False     False   
ENSRNOG00000020624    False     False      False        True     False   
ENSRNOG00000058006    False     False      False       False     False   
ENSRNOG00000060045    False     False      False       False     False   

                    sqtl_PL  sqtl_PL2  
geneId                                 
ENSRNOG00000001342    False     False  
ENSRNOG00000020624    False      True  
ENSRNOG00000058006    False     False  
ENSRNOG00000060045    False     False  

[4 rows x 68 columns]</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>/var/folders/1q/nqyt2x9s071fkn235hfq1p680000gn/T/ipykernel_33538/1256236689.py:1: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  annot_df = pd.read_csv("/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/data-Github/rat-genomic-analysis/Enformer-Predictions/data/rn7.gene.txt", sep="\t", index_col='geneId')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="105">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating fasta files</span></span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># same as above, really</span></span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb9-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span>
<span id="cb9-5">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/data-Github/rat-genomic-analysis/Enformer-Predictions/predictions"</span></span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list:</span>
<span id="cb9-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene)</span>
<span id="cb9-9">    gene_annot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annot_df.loc[gene]</span>
<span id="cb9-10">    interval_obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>], gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>])</span>
<span id="cb9-11">    tss_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compute_tss_bin(interval_obj.resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span>), gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tss'</span>])</span>
<span id="cb9-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tss_bins <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb9-13">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Skipping"</span>, gene)</span>
<span id="cb9-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb9-15">    interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chromosome'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_annot[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-16">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb9-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> pred_vs_obs[gene].index:</span>
<span id="cb9-18">        predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>predictions_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/haplotype1/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>)</span>
<span id="cb9-19">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions[interval][()]</span>
<span id="cb9-20">        extra_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  [tss_bins[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tss_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [tss_bins[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb9-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:</span>
<span id="cb9-22">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(matrix[extra_bins, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb9-23">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb9-24">        pred_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.average(matrix[tss_bins, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4980</span>])</span>
<span id="cb9-25">        pred_vs_obs[gene].loc[individual, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_expr</span>
<span id="cb9-26"></span>
<span id="cb9-27">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ENSRNOG00000001342
[0.00573737 0.00508188 0.00727259 0.00560077 0.0076798 ]
[0.00573869 0.00508314 0.00727495 0.00560294 0.00768098]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573627 0.00507914 0.0072732  0.00559864 0.00767822]
[0.00573737 0.00508188 0.00727259 0.00560077 0.0076798 ]
ENSRNOG00000020624
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
[5.7827654  4.293017   7.8872423  0.10644712 0.05631344]
[5.7819533  4.290507   7.8848658  0.10634203 0.05630142]
[5.7819533  4.290507   7.8848658  0.10634203 0.05630142]
[5.7819533  4.290507   7.8848658  0.10634203 0.05630142]
ENSRNOG00000058006
[1.42411528e+01 5.73353358e-02 1.29730888e-02 9.69883148e-03
 1.51052885e-02]
[1.42411528e+01 5.73353358e-02 1.29730888e-02 9.69883148e-03
 1.51052885e-02]
[1.42411528e+01 5.73353358e-02 1.29730888e-02 9.69883148e-03
 1.51052885e-02]
[1.4251710e+01 5.7409633e-02 1.2985041e-02 9.7029284e-03 1.5121926e-02]
[1.42411528e+01 5.73353358e-02 1.29730888e-02 9.69883148e-03
 1.51052885e-02]
ENSRNOG00000060045
Skipping ENSRNOG00000060045</code></pre>
</div>
</div>
<div class="cell" data-execution_count="106">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pred_vs_obs.keys())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>dict_keys(['ENSRNOG00000001342', 'ENSRNOG00000020624', 'ENSRNOG00000058006', 'ENSRNOG00000060045'])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="116">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb13-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000020624'</span>]</span>
<span id="cb13-3"></span>
<span id="cb13-4"></span>
<span id="cb13-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zscore</span>
<span id="cb13-6">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>])</span>
<span id="cb13-7">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb13-9">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb13-10"></span>
<span id="cb13-11"></span>
<span id="cb13-12"></span>
<span id="cb13-13"></span>
<span id="cb13-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb13-15">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb13-16">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb13-17">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb13-18"></span>
<span id="cb13-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb13-20">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression_files/figure-html/cell-9-output-1.png" class="img-fluid"></p>
</div>
</div>
<ul>
<li>Use all 340 individuals (instead of the 80 that I moved to Box before polaris shut down)</li>
<li>Rerun predictions with sequences centered at TSS (instead of gene start and end)</li>
<li>The upside is that the Enformer predictions so far agree with basic expectations:
<ul>
<li>There is variation in predicted gene expression between individuals (although slim)</li>
<li>CAGE expression peaks around TSS and tapers off</li>
</ul></li>
</ul>
<section id="extra-plots" class="level3">
<h3 class="anchored" data-anchor-id="extra-plots">Extra Plots</h3>
<div class="cell" data-execution_count="120">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">predixcan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/sabrinami/Library/CloudStorage/Box-Box/imlab-data/data-Github/rat-genomic-analysis/PTRS-Analysis/RatXcan/Results/Br_EN__predict.txt'</span></span>
<span id="cb14-2">pred_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(predixcan, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'IID'</span>)</span>
<span id="cb14-3">pred_gene_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_gene_expr.loc[individuals]</span>
<span id="cb14-4"></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/var/folders/1q/nqyt2x9s071fkn235hfq1p680000gn/T/ipykernel_33538/69215650.py:2: DtypeWarning: Columns (0,1) have mixed types. Specify dtype option on import or set low_memory=False.
  pred_gene_expr = pd.read_csv(predixcan, sep="\t", header=0, index_col='IID')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="89">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000001342'</span>]</span>
<span id="cb16-2"></span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zscore</span>
<span id="cb16-5">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>])</span>
<span id="cb16-6">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb16-8">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb16-9"></span>
<span id="cb16-10"></span>
<span id="cb16-11"></span>
<span id="cb16-12"></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb16-14">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb16-15">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb16-16">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb16-17"></span>
<span id="cb16-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb16-19">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression_files/figure-html/cell-11-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="90">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb17-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_vs_obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ENSRNOG00000058006'</span>]</span>
<span id="cb17-3"></span>
<span id="cb17-4"></span>
<span id="cb17-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zscore</span>
<span id="cb17-6">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'observed'</span>])</span>
<span id="cb17-7">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zscore(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'predicted'</span>])</span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dot plot</span></span>
<span id="cb17-9">plt.scatter(x, y, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb17-10"></span>
<span id="cb17-11"></span>
<span id="cb17-12"></span>
<span id="cb17-13"></span>
<span id="cb17-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb17-15">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Observed'</span>)</span>
<span id="cb17-16">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb17-17">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformed Predicted vs Observed Gene Expression'</span>)</span>
<span id="cb17-18"></span>
<span id="cb17-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb17-20">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression_files/figure-html/cell-12-output-1.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/comparing-enformer-CAGE-to-observed-gene-expression/comparing-gene-expression.html</guid>
  <pubDate>Thu, 03 Aug 2023 02:47:03 GMT</pubDate>
</item>
<item>
  <title>Testing reverse complement</title>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-locally/scripts/misc.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb2-2">C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb2-3">G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb2-4">T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb2-5"></span>
<span id="cb2-6">seq_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>: A, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C'</span>: C, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'G'</span>: G, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T'</span>: T}</span>
<span id="cb2-7">seq_dict</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>{'A': array([1., 0., 0., 0.], dtype=float32),
 'C': array([0., 1., 0., 0.], dtype=float32),
 'G': array([0., 0., 1., 0.], dtype=float32),
 'T': array([0., 0., 0., 1.], dtype=float32)}</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(seq_dict[s] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> seq)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">input_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([A, C, G, T])</span>
<span id="cb5-2">input_np</span></code></pre></div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sequence_to_encoding(seq, encoding_dict):</span>
<span id="cb6-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(np.array(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(encoding_dict[s] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> seq)))</span>
<span id="cb6-3"></span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> encoding_to_sequence(input_array, encoding_dict, delim_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb6-6"></span>
<span id="cb6-7">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> copy </span>
<span id="cb6-8"></span>
<span id="cb6-9">    keys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(encoding_dict.keys())</span>
<span id="cb6-10">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(encoding_dict.values())</span>
<span id="cb6-11">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ar.tolist() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ar <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> values]</span>
<span id="cb6-12"></span>
<span id="cb6-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(input_array.shape) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb6-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Input array should have 2 dimensions'</span>)</span>
<span id="cb6-15"></span>
<span id="cb6-16">    seq_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, na <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(input_array.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])):</span>
<span id="cb6-18">        ts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_array[i,:].tolist()</span>
<span id="cb6-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look up in the dictionary</span></span>
<span id="cb6-20">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> values.index(ts)</span>
<span id="cb6-21">        seq_list.append(keys[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>])</span>
<span id="cb6-22"></span>
<span id="cb6-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> delim_indices <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb6-24">        seq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [seq_list[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> delim_indices <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> seq_list[i].lower() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(seq_list)) ] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(seq))</span>
<span id="cb6-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb6-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(seq_list))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sequence_to_encoding(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ACCGTAT'</span>, seq_dict)</span>
<span id="cb7-2">a, a.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<pre><code>(array([[1., 0., 0., 0.],
        [0., 1., 0., 0.],
        [0., 1., 0., 0.],
        [0., 0., 1., 0.],
        [0., 0., 0., 1.],
        [1., 0., 0., 0.],
        [0., 0., 0., 1.]], dtype=float32),
 (7, 4))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> encoding_to_sequence(a, seq_dict)</span>
<span id="cb9-2">b, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(b)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="30">
<pre><code>('ACCGTAT', 7)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GCTAAACT"</span></span>
<span id="cb11-2">input_encoding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sequence_to_encoding(input_sequence, seq_dict)</span>
<span id="cb11-3">input_sequence, input_encoding</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="33">
<pre><code>('GCTAAACT',
 array([[0., 0., 1., 0.],
        [0., 1., 0., 0.],
        [0., 0., 0., 1.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [0., 1., 0., 0.],
        [0., 0., 0., 1.]], dtype=float32))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reversed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.flip(input_encoding, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reversed</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>array([[0., 0., 0., 1.],
       [0., 1., 0., 0.],
       [1., 0., 0., 0.],
       [1., 0., 0., 0.],
       [1., 0., 0., 0.],
       [0., 0., 0., 1.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.]], dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">encoding_to_sequence(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reversed</span>, seq_dict), input_sequence</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="36">
<pre><code>('TCAAATCG', 'GCTAAACT')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">encoding_to_sequence(np.flip(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reversed</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), seq_dict), input_sequence</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="42">
<pre><code>('AGTTTAGC', 'GCTAAACT')</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">np.flip(np.flip(input_encoding, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">haplotypes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ACTGCGA'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GTCGAGT'</span>]</span>
<span id="cb20-2">samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sam1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sam2'</span>]</span>
<span id="cb20-3">hap_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype2'</span>]</span>
<span id="cb20-4"></span>
<span id="cb20-5">encoding_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb20-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sam <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> samples:</span>
<span id="cb20-7">    encoding_dict[sam] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb20-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, hap <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(haplotypes):</span>
<span id="cb20-9">        encoding_dict[sam][hap_names[i]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sequence_to_encoding(hap, seq_dict)</span>
<span id="cb20-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(encoding_dict)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'sam1': {'haplotype1': array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 0., 1.],
       [0., 0., 1., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [1., 0., 0., 0.]], dtype=float32), 'haplotype2': array([[0., 0., 1., 0.],
       [0., 0., 0., 1.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [1., 0., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]], dtype=float32)}, 'sam2': {'haplotype1': array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 0., 1.],
       [0., 0., 1., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [1., 0., 0., 0.]], dtype=float32), 'haplotype2': array([[0., 0., 1., 0.],
       [0., 0., 0., 1.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [1., 0., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]], dtype=float32)}}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> reverse_complement_one_hot_encoded_sequences(one_hot_encoded_sequence):</span>
<span id="cb22-2">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb22-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(np.flip(np.flip(one_hot_encoded_sequence, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="51">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">haplotypes_rcs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype1_rc'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype2_rc'</span>]</span>
<span id="cb23-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sample, haplotypes_encoded <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> encoding_dict.items():</span>
<span id="cb23-3">    hapnames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(haplotypes_encoded.keys())</span>
<span id="cb23-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(hapnames)):</span>
<span id="cb23-5">        encoding_dict[sample][haplotypes_rcs[i]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reverse_complement_one_hot_encoded_sequences(encoding_dict[sample][hapnames[i]])</span>
<span id="cb23-6">encoding_dict</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="51">
<pre><code>{'sam1': {'haplotype1': array([[1., 0., 0., 0.],
         [0., 1., 0., 0.],
         [0., 0., 0., 1.],
         [0., 0., 1., 0.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [1., 0., 0., 0.]], dtype=float32),
  'haplotype2': array([[0., 0., 1., 0.],
         [0., 0., 0., 1.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [1., 0., 0., 0.],
         [0., 0., 1., 0.],
         [0., 0., 0., 1.]], dtype=float32),
  'haplotype1_rc': array([[0., 0., 0., 1.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [0., 1., 0., 0.],
         [1., 0., 0., 0.],
         [0., 0., 1., 0.],
         [0., 0., 0., 1.]], dtype=float32),
  'haplotype2_rc': array([[1., 0., 0., 0.],
         [0., 1., 0., 0.],
         [0., 0., 0., 1.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [1., 0., 0., 0.],
         [0., 1., 0., 0.]], dtype=float32)},
 'sam2': {'haplotype1': array([[1., 0., 0., 0.],
         [0., 1., 0., 0.],
         [0., 0., 0., 1.],
         [0., 0., 1., 0.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [1., 0., 0., 0.]], dtype=float32),
  'haplotype2': array([[0., 0., 1., 0.],
         [0., 0., 0., 1.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [1., 0., 0., 0.],
         [0., 0., 1., 0.],
         [0., 0., 0., 1.]], dtype=float32),
  'haplotype1_rc': array([[0., 0., 0., 1.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [0., 1., 0., 0.],
         [1., 0., 0., 0.],
         [0., 0., 1., 0.],
         [0., 0., 0., 1.]], dtype=float32),
  'haplotype2_rc': array([[1., 0., 0., 0.],
         [0., 1., 0., 0.],
         [0., 0., 0., 1.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [1., 0., 0., 0.],
         [0., 1., 0., 0.]], dtype=float32)}}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="53">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">haplotypes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ACTGCGA'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GTCGAGT'</span>]</span>
<span id="cb25-2">hap_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype2'</span>]</span>
<span id="cb25-3"></span>
<span id="cb25-4">ref_encoding_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb25-5">ref_encoding_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb25-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, hap <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(haplotypes):</span>
<span id="cb25-7">    ref_encoding_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence'</span>][hap_names[i]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sequence_to_encoding(haplotypes[i], seq_dict)</span>
<span id="cb25-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ref_encoding_dict)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'sequence': {'haplotype1': array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 0., 1.],
       [0., 0., 1., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [1., 0., 0., 0.]], dtype=float32), 'haplotype2': array([[0., 0., 1., 0.],
       [0., 0., 0., 1.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [1., 0., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]], dtype=float32)}}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="54">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">haplotypes_rcs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype1_rc'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype2_rc'</span>]</span>
<span id="cb27-2">hapnames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(ref_encoding_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence'</span>].keys())</span>
<span id="cb27-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(hapnames)):</span>
<span id="cb27-4">    ref_encoding_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence'</span>][haplotypes_rcs[i]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reverse_complement_one_hot_encoded_sequences(ref_encoding_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sequence'</span>][hapnames[i]])</span>
<span id="cb27-5">ref_encoding_dict</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="54">
<pre><code>{'sequence': {'haplotype1': array([[1., 0., 0., 0.],
         [0., 1., 0., 0.],
         [0., 0., 0., 1.],
         [0., 0., 1., 0.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [1., 0., 0., 0.]], dtype=float32),
  'haplotype2': array([[0., 0., 1., 0.],
         [0., 0., 0., 1.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [1., 0., 0., 0.],
         [0., 0., 1., 0.],
         [0., 0., 0., 1.]], dtype=float32),
  'haplotype1_rc': array([[0., 0., 0., 1.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [0., 1., 0., 0.],
         [1., 0., 0., 0.],
         [0., 0., 1., 0.],
         [0., 0., 0., 1.]], dtype=float32),
  'haplotype2_rc': array([[1., 0., 0., 0.],
         [0., 1., 0., 0.],
         [0., 0., 0., 1.],
         [0., 1., 0., 0.],
         [0., 0., 1., 0.],
         [1., 0., 0., 0.],
         [0., 1., 0., 0.]], dtype=float32)}}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">logfile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/lus/grand/projects/covid-ct/imlab/users/temi/projects/TFXcan/TFPred_pipeline/prediction_folder/predictions_log/geuvadis_AR/predictions_log_2023-01-27.csv'</span></span>
<span id="cb29-2">logfile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(logfile)</span>
<span id="cb29-3">logfile.head(), logfile.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>(                       motif individual     status sequence_type
 0  chr12_119667745_119668095    HG00096  completed           var
 1  chr12_109940195_109940745    HG00096  completed           var
 2  chr12_110048445_110048895    HG00096  completed           var
 3  chr12_119716295_119717145    HG00096  completed           var
 4  chr12_117038095_117039145    HG00096  completed           var,
 (616254, 4))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HG00128'</span></span>
<span id="cb31-2">id_logfile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> logfile.loc[logfile[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'individual'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> sample, : ]</span>
<span id="cb31-3">id_logfile.head(), id_logfile.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>(                            motif individual     status sequence_type
 548969    chr10_98332743_98333443    HG00128  completed           var
 548970    chr10_98414943_98415443    HG00128  completed           var
 548971    chr10_99945143_99945843    HG00128  completed           var
 548972    chr10_98470843_98471293    HG00128  completed           var
 548973  chr10_100185843_100186293    HG00128  completed           var,
 (18654, 4))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/lus/grand/projects/covid-ct/imlab/users/temi/projects/TFXcan/baca_cwas/predictors/baca_cwas_AR_regions_hg38_2023-01-27.txt'</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>).dropna(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>]</span>
<span id="cb33-2">queries</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>['chr1_99543994_99544394',
 'chr1_9943142_9943692',
 'chr1_99598344_99598844',
 'chr1_99615044_99615644',
 'chr1_99766294_99766944',
 'chr1_99806744_99807394',
 'chr1_99836194_99836794',
 'chr1_100037994_100038294',
 'chr1_100132694_100133394',
 'chr1_100202594_100203294',
 'chr1_100239894_100240544',
 'chr1_100351494_100351894',
 'chr1_100352294_100352644',
 'chr1_100414694_100415194',
 'chr1_100419294_100419794',
 'chr1_100452544_100453344',
 'chr1_10032592_10033142',
 'chr1_1074020_1074370',
 'chr1_100874244_100874944',
 'chr1_100875044_100875644',
 'chr1_100916494_100917144',
 'chr1_100930944_100931244',
 'chr1_100946944_100947594',
 'chr1_101288494_101288994',
 'chr1_10210292_10210542',
 'chr1_10430293_10430793',
 'chr1_104630728_104631178',
 'chr1_104884128_104884728',
 'chr1_104953428_104954328',
 'chr1_105394878_105395428',
 'chr1_105395878_105396528',
 'chr1_105399778_105400578',
 'chr1_105533278_105533678',
 'chr1_105572678_105573328',
 'chr1_106134478_106135078',
 'chr1_106276328_106276928',
 'chr1_106480528_106481178',
 'chr1_106541428_106542078',
 'chr1_106607778_106608328',
 'chr1_106644128_106644778',
 'chr1_106746928_106747478',
 'chr1_10674893_10675543',
 'chr1_10697543_10698093',
 'chr1_107473878_107474528',
 'chr1_107502478_107503128',
 'chr1_107530328_107530978',
 'chr1_107536128_107536778',
 'chr1_107682378_107682978',
 'chr1_107702828_107703528',
 'chr1_107738878_107739528',
 'chr1_107782278_107783128',
 'chr1_108045428_108045878',
 'chr1_108087478_108088028',
 'chr1_108124828_108125828',
 'chr1_108342078_108342628',
 'chr1_108590978_108591428',
 'chr1_108746428_108746728',
 'chr1_109148478_109149128',
 'chr1_109181128_109181778',
 'chr1_109392928_109393428',
 'chr1_109483778_109484278',
 'chr1_109548328_109548778',
 'chr1_109632428_109633278',
 'chr1_109869578_109870278',
 'chr1_109927878_109928428',
 'chr1_109960628_109960878',
 'chr1_109984528_109985078',
 'chr1_110157878_110158428',
 'chr1_110235678_110236528',
 'chr1_110338128_110338778',
 'chr1_110407428_110407978',
 'chr1_110424578_110425028',
 'chr1_110634628_110635078',
 'chr1_11071893_11072393',
 'chr1_110798628_110799478',
 'chr1_110856278_110856728',
 'chr1_111099178_111099578',
 'chr1_111358978_111359428',
 'chr1_111360228_111360678',
 'chr1_111401428_111401878',
 'chr1_111406028_111406728',
 'chr1_111420378_111420778',
 'chr1_111449128_111449578',
 'chr1_111508178_111508678',
 'chr1_11151993_11152693',
 'chr1_111592978_111593428',
 'chr1_111643028_111643578',
 'chr1_111655978_111656678',
 'chr1_111755228_111756128',
 'chr1_111841078_111841778',
 'chr1_111884978_111885478',
 'chr1_111948528_111949228',
 'chr1_112033528_112033878',
 'chr1_112054428_112054978',
 'chr1_112271928_112272278',
 'chr1_112449228_112450128',
 'chr1_112529478_112529728',
 'chr1_112530078_112530728',
 'chr1_112548378_112549078',
 'chr1_112594378_112595028',
 'chr1_112700228_112700528',
 'chr1_112890228_112890578',
 'chr1_112890928_112891678',
 'chr1_112905678_112906228',
 'chr1_112934628_112935028',
 'chr1_113021428_113022278',
 'chr1_113056828_113057478',
 'chr1_113072578_113073328',
 'chr1_113242378_113243028',
 'chr1_113355778_113356228',
 'chr1_113434428_113435028',
 'chr1_113515428_113515878',
 'chr1_113812078_113812778',
 'chr1_113904778_113905478',
 'chr1_114093678_114094578',
 'chr1_11421143_11421793',
 'chr1_11421993_11422543',
 'chr1_114434978_114435628',
 'chr1_114457278_114457878',
 'chr1_114511029_114511429',
 'chr1_114755529_114756029',
 'chr1_114757329_114757929',
 'chr1_11485243_11485843',
 'chr1_115075829_115076279',
 'chr1_115349529_115350279',
 'chr1_115402579_115403129',
 'chr1_115714679_115715329',
 'chr1_11569443_11570193',
 'chr1_115810829_115811629',
 'chr1_116123529_116124529',
 'chr1_116133579_116134629',
 'chr1_116202978_116203628',
 'chr1_116476128_116476928',
 'chr1_116485028_116485428',
 'chr1_116632428_116633028',
 'chr1_116988828_116989278',
 'chr1_117017728_117018178',
 'chr1_117026378_117026878',
 'chr1_117128628_117129128',
 'chr1_117179528_117179978',
 'chr1_11737093_11737793',
 'chr1_117562278_117563428',
 'chr1_117574278_117574978',
 'chr1_117591228_117591728',
 'chr1_118059327_118059927',
 'chr1_118111577_118111827',
 'chr1_118196477_118196927',
 'chr1_118660677_118661227',
 'chr1_11874143_11874443',
 'chr1_11907743_11908543',
 'chr1_119140077_119140927',
 'chr1_119187277_119187927',
 'chr1_119385627_119386077',
 'chr1_119472177_119472677',
 'chr1_119542327_119543027',
 'chr1_119618077_119618477',
 'chr1_119625977_119626777',
 'chr1_119631277_119631927',
 'chr1_119647927_119648677',
 'chr1_119697477_119697927',
 'chr1_119765227_119766877',
 'chr1_119768027_119768477',
 'chr1_119774077_119774727',
 'chr1_119779777_119780577',
 'chr1_11980093_11980593',
 'chr1_119867527_119868727',
 'chr1_121442742_121443642',
 'chr1_121546652_121548002',
 'chr1_12184043_12184643',
 'chr1_12188743_12189293',
 'chr1_12376195_12376695',
 'chr1_12463845_12464945',
 'chr1_12595787_12596237',
 'chr1_12597737_12598237',
 'chr1_12615846_12616346',
 'chr1_1375120_1375720',
 'chr1_1407120_1407520',
 'chr1_1433120_1433670',
 'chr1_13617055_13617505',
 'chr1_13619705_13620455',
 'chr1_13799505_13800005',
 'chr1_13859955_13860405',
 'chr1_13901155_13901555',
 'chr1_14135005_14135605',
 'chr1_14142255_14142705',
 'chr1_145891025_145891675',
 'chr1_147076402_147076852',
 'chr1_147106218_147106568',
 'chr1_147109668_147110368',
 'chr1_147214930_147215930',
 'chr1_147238051_147238551',
 'chr1_147242050_147243000',
 'chr1_147350749_147352104',
 'chr1_147515328_147515927',
 'chr1_147541023_147541680',
 'chr1_147626549_147627299',
 'chr1_147642051_147642650',
 'chr1_147665082_147665782',
 'chr1_14422004_14422454',
 'chr1_148263225_148263675',
 'chr1_148334626_148334876',
 'chr1_14486454_14486854',
 'chr1_14498654_14499404',
 'chr1_14648704_14649204',
 'chr1_14649954_14650504',
 'chr1_150010501_150011401',
 'chr1_150205914_150206712',
 'chr1_150233705_150234354',
 'chr1_150363474_150364174',
 'chr1_150515324_150515974',
 'chr1_150561074_150562424',
 'chr1_150579374_150579874',
 'chr1_14737954_14738854',
 'chr1_150697124_150697524',
 'chr1_151058724_151059074',
 'chr1_151281224_151282574',
 'chr1_151739824_151740424',
 'chr1_151836774_151837274',
 'chr1_151972824_151973474',
 'chr1_152193024_152193624',
 'chr1_152198874_152199474',
 'chr1_14958104_14958604',
 'chr1_153633524_153634474',
 'chr1_153649724_153650274',
 'chr1_153658474_153658924',
 'chr1_153783374_153783974',
 'chr1_154142074_154142924',
 'chr1_154155324_154156174',
 'chr1_154337374_154338024',
 'chr1_154405274_154405574',
 'chr1_154417974_154418874',
 'chr1_154427724_154428224',
 'chr1_154627874_154628274',
 'chr1_154936824_154937874',
 'chr1_155017124_155017824',
 'chr1_155022774_155023324',
 'chr1_155050874_155051474',
 'chr1_155105674_155106124',
 'chr1_1615420_1615870',
 'chr1_155127224_155127524',
 'chr1_155227359_155227709',
 'chr1_155244509_155245109',
 'chr1_155262159_155262659',
 'chr1_155688459_155689209',
 'chr1_156054409_156054909',
 'chr1_156060909_156061309',
 'chr1_156193759_156194259',
 'chr1_156510558_156511308',
 'chr1_156559608_156560258',
 'chr1_156728358_156728958',
 'chr1_156741008_156741558',
 'chr1_157132558_157133158',
 'chr1_157284060_157284860',
 'chr1_157419710_157420460',
 'chr1_158196410_158196960',
 'chr1_15526355_15527105',
 'chr1_158844360_158844760',
 'chr1_15559055_15559905',
 'chr1_1658789_1659289',
 'chr1_15602355_15602755',
 'chr1_15603455_15603855',
 'chr1_15628705_15629155',
 'chr1_15642205_15642705',
 'chr1_159817510_159818010',
 'chr1_159889210_159889560',
 'chr1_160055460_160055960',
 'chr1_160131810_160132560',
 'chr1_160157060_160157810',
 'chr1_160159710_160160360',
 'chr1_160201810_160202460',
 'chr1_160244160_160244560',
 'chr1_160888910_160889460',
 'chr1_160941010_160941460',
 'chr1_160949310_160949860',
 'chr1_161021110_161021610',
 'chr1_161165710_161166610',
 'chr1_161399310_161399810',
 'chr1_15820755_15821355',
 'chr1_15834205_15835255',
 'chr1_15835655_15836255',
 'chr1_161765710_161766610',
 'chr1_15886155_15886705',
 'chr1_162178960_162179610',
 'chr1_162189210_162189860',
 'chr1_162206960_162207910',
 'chr1_162285010_162285660',
 'chr1_162421210_162421710',
 'chr1_162561110_162561910',
 'chr1_162567410_162568060',
 'chr1_162605560_162605960',
 'chr1_162660460_162661160',
 'chr1_162873710_162874610',
 'chr1_162913310_162913760',
 'chr1_162930410_162931310',
 'chr1_163211610_163212060',
 'chr1_163290160_163290760',
 'chr1_163381760_163382260',
 'chr1_163585660_163586360',
 'chr1_163616710_163617510',
 'chr1_163635423_163635923',
 'chr1_164128263_164128813',
 'chr1_164601863_164602563',
 'chr1_164683263_164683663',
 'chr1_165069563_165070413',
 'chr1_16179105_16179655',
 'chr1_165092513_165093413',
 'chr1_1724161_1724661',
 'chr1_165615863_165616863',
 'chr1_165629913_165630363',
 'chr1_165630613_165631163',
 'chr1_16237005_16237405',
 'chr1_165698263_165698613',
 'chr1_16248305_16249305',
 'chr1_166609613_166610213',
 'chr1_16334455_16335155',
 'chr1_16349655_16350305',
 'chr1_167125363_167126063',
 'chr1_167162913_167163363',
 'chr1_167188913_167189713',
 'chr1_167191363_167191913',
 'chr1_167544363_167545013',
 'chr1_167617313_167617863',
 'chr1_167644963_167645563',
 'chr1_167714363_167714763',
 'chr1_167749713_167750313',
 'chr1_167796863_167797563',
 'chr1_167854162_167854762',
 'chr1_167876512_167876912',
 'chr1_167910962_167911962',
 'chr1_167935912_167936712',
 'chr1_168137412_168137812',
 'chr1_168178512_168179062',
 'chr1_16513405_16514555',
 'chr1_168491762_168492362',
 'chr1_168556612_168557012',
 'chr1_168560212_168560962',
 'chr1_168635162_168635862',
 'chr1_168639662_168640312',
 'chr1_168693062_168693912',
 'chr1_168752012_168752512',
 'chr1_168759012_168759612',
 'chr1_168863612_168864212',
 'chr1_168884612_168885062',
 'chr1_168906812_168907562',
 'chr1_168920162_168921162',
 'chr1_169161012_169161562',
 'chr1_169185462_169186112',
 'chr1_169250762_169251262',
 'chr1_169367662_169368312',
 'chr1_169443912_169444412',
 'chr1_169485562_169486562',
 'chr1_169508812_169509812',
 'chr1_169510562_169511262',
 'chr1_169514712_169515462',
 'chr1_169529212_169529812',
 'chr1_169548212_169548762',
 'chr1_169565712_169566112',
 'chr1_169568312_169569012',
 'chr1_169569912_169570512',
 'chr1_169572012_169572762',
 'chr1_169574262_169574962',
 'chr1_169685709_169686109',
 'chr1_169752909_169753509',
 'chr1_169849409_169849859',
 'chr1_169891159_169891909',
 'chr1_169893809_169894309',
 'chr1_169942159_169943059',
 'chr1_170074559_170074859',
 'chr1_170097359_170098159',
 'chr1_170225509_170226159',
 'chr1_170886509_170887009',
 'chr1_170934359_170934859',
 'chr1_171141611_171141961',
 'chr1_171142061_171142611',
 'chr1_171210211_171210861',
 'chr1_171219011_171219711',
 'chr1_171250811_171251461',
 'chr1_171343861_171344811',
 'chr1_171353261_171354011',
 'chr1_171418461_171419061',
 'chr1_171485261_171485661',
 'chr1_171566211_171566811',
 'chr1_171645710_171646310',
 'chr1_171663160_171664060',
 'chr1_171781110_171781760',
 'chr1_172398160_172398610',
 'chr1_172466460_172467010',
 'chr1_172469910_172470660',
 'chr1_172473860_172474210',
 'chr1_172532410_172533360',
 'chr1_172746160_172747110',
 'chr1_16948355_16949105',
 'chr1_172976310_172976960',
 'chr1_173122961_173123411',
 'chr1_173573511_173574061',
 'chr1_173867912_173869362',
 'chr1_174114062_174114612',
 'chr1_174426512_174426912',
 'chr1_174475262_174475862',
 'chr1_175072464_175073014',
 'chr1_175169214_175169764',
 'chr1_175232164_175233064',
 'chr1_175470964_175471614',
 'chr1_175590764_175591164',
 'chr1_176207214_176207464',
 'chr1_17297905_17298505',
 'chr1_176567164_176568014',
 'chr1_176593014_176594014',
 'chr1_176743964_176744514',
 'chr1_176761064_176761714',
 'chr1_176813264_176814114',
 'chr1_177444914_177445764',
 'chr1_177585365_177586065',
 'chr1_177701265_177702115',
 'chr1_177872215_177873315',
 'chr1_177898015_177898665',
 'chr1_177912865_177913915',
 'chr1_178147265_178147915',
 'chr1_178337065_178337865',
 'chr1_17531654_17532355',
 'chr1_178727165_178727815',
 'chr1_178931815_178932665',
 'chr1_178951515_178952015',
 'chr1_178953015_178953365',
 'chr1_179264465_179265165',
 'chr1_179279615_179279915',
 'chr1_179287815_179288465',
 'chr1_179293365_179293965',
 'chr1_179303065_179303715',
 'chr1_179350415_179350765',
 'chr1_179365715_179366015',
 'chr1_179532065_179532615',
 'chr1_179585815_179586915',
 'chr1_179717915_179718515',
 'chr1_179930365_179931415',
 'chr1_179935365_179935665',
 'chr1_179969865_179970415',
 'chr1_180073565_180074665',
 'chr1_180126565_180127165',
 'chr1_180157465_180158165',
 'chr1_180528414_180529464',
 'chr1_180560364_180561064',
 'chr1_180593364_180593814',
 'chr1_180630914_180631564',
 'chr1_180631614_180632164',
 'chr1_181250864_181251614',
 'chr1_181259014_181259664',
 'chr1_182029265_182029765',
 'chr1_182083665_182084315',
 'chr1_182144015_182144715',
 'chr1_182217815_182218465',
 'chr1_182227865_182228665',
 'chr1_182389465_182390065',
 'chr1_182391315_182392365',
 'chr1_17911756_17912306',
 'chr1_182702815_182703315',
 'chr1_182707015_182707615',
 'chr1_182969065_182969765',
 'chr1_183022265_183022765',
 'chr1_183052715_183053365',
 'chr1_183088815_183089615',
 'chr1_183228615_183229265',
 'chr1_183471815_183472515',
 'chr1_183635465_183635965',
 'chr1_183684865_183685315',
 'chr1_18041006_18041606',
 'chr1_183719315_183719715',
 'chr1_183952866_183953516',
 'chr1_184074916_184075616',
 'chr1_184078616_184079616',
 'chr1_184080366_184081116',
 'chr1_184191266_184191716',
 'chr1_184350816_184351566',
 'chr1_184453266_184454016',
 'chr1_184465866_184466266',
 'chr1_184482966_184483966',
 'chr1_184503766_184504616',
 'chr1_184541366_184542066',
 'chr1_184543266_184543716',
 'chr1_184590116_184590866',
 'chr1_184606716_184607316',
 'chr1_184612116_184612566',
 'chr1_184629666_184630416',
 'chr1_184632666_184633316',
 'chr1_184650416_184651066',
 'chr1_184705166_184705866',
 'chr1_184757666_184758516',
 'chr1_184790666_184791516',
 'chr1_184801416_184802016',
 'chr1_184802866_184803616',
 'chr1_18153206_18153756',
 'chr1_184864016_184864666',
 'chr1_184929718_184930918',
 'chr1_185057218_185057818',
 'chr1_18190256_18190956',
 'chr1_18201806_18202456',
 'chr1_185534568_185535568',
 'chr1_185555668_185556268',
 'chr1_185567018_185567318',
 'chr1_185696618_185697468',
 'chr1_185705618_185706418',
 'chr1_186492318_186493218',
 'chr1_186521418_186522418',
 'chr1_186566268_186567168',
 'chr1_186567968_186568868',
 'chr1_186997468_186998318',
 'chr1_187209568_187210018',
 'chr1_187306818_187307568',
 'chr1_187321768_187322468',
 'chr1_187358368_187358768',
 'chr1_187449518_187450018',
 'chr1_187465368_187465818',
 'chr1_187477068_187477968',
 'chr1_187626068_187626768',
 'chr1_187650118_187650568',
 'chr1_187692768_187693318',
 'chr1_18440356_18441106',
 'chr1_187753619_187754269',
 'chr1_187759819_187760719',
 'chr1_187771869_187772469',
 'chr1_187782019_187782569',
 'chr1_18464156_18465206',
 'chr1_188073369_188073819',
 'chr1_18480106_18480656',
 'chr1_188169619_188170869',
 'chr1_188432469_188432969',
 'chr1_188546619_188547269',
 'chr1_188548069_188548669',
 'chr1_188682319_188682869',
 'chr1_188779369_188779919',
 'chr1_190022070_190022720',
 'chr1_190451920_190452720',
 'chr1_190453470_190453970',
 'chr1_190478520_190479020',
 'chr1_190488020_190488570',
 'chr1_190587870_190588670',
 'chr1_191767420_191768120',
 'chr1_18902456_18903856',
 'chr1_192631620_192632170',
 'chr1_192690670_192691820',
 'chr1_192749470_192749870',
 'chr1_192808670_192809020',
 'chr1_192844120_192845020',
 'chr1_192854370_192854920',
 'chr1_192861420_192862570',
 'chr1_193108320_193109470',
 'chr1_193121520_193122270',
 'chr1_193269570_193270170',
 'chr1_193306420_193306970',
 'chr1_193310470_193311020',
 'chr1_19011056_19011456',
 'chr1_193494420_193495220',
 'chr1_193762020_193762620',
 'chr1_193854820_193855370',
 'chr1_19066156_19066806',
 'chr1_19074956_19075456',
 'chr1_19251456_19251906',
 'chr1_195935070_195935620',
 'chr1_19312006_19312456',
 'chr1_19354256_19355006',
 'chr1_197042870_197043420',
 'chr1_197383570_197384070',
 'chr1_19412506_19413106',
 'chr1_19424756_19425306',
 'chr1_19426956_19427906',
 'chr1_197620670_197621120',
 'chr1_19433156_19434056',
 'chr1_19436606_19437206',
 'chr1_19444306_19444806',
 'chr1_197783270_197784120',
 'chr1_19452156_19452656',
 'chr1_197865520_197866370',
 'chr1_19458856_19459506',
 'chr1_197902570_197903020',
 'chr1_19485306_19486156',
 'chr1_19504606_19505556',
 'chr1_19514306_19515106',
 'chr1_198576070_198576670',
 'chr1_198656421_198657121',
 'chr1_198657571_198658071',
 'chr1_19547706_19548306',
 'chr1_198837271_198838221',
 'chr1_19561206_19561606',
 'chr1_199065771_199066171',
 'chr1_19607156_19607806',
 'chr1_199581622_199582272',
 'chr1_199774722_199775222',
 'chr1_19703707_19704207',
 'chr1_200477622_200478272',
 'chr1_200669272_200670272',
 'chr1_19754307_19755007',
 'chr1_200992622_200993372',
 'chr1_19770357_19770957',
 'chr1_19776157_19776857',
 'chr1_201082222_201082822',
 'chr1_201170772_201171172',
 'chr1_201173672_201174172',
 'chr1_201266272_201267172',
 'chr1_201281122_201282772',
 'chr1_201309222_201310472',
 'chr1_19815107_19815657',
 'chr1_201460922_201461522',
 'chr1_201495772_201496372',
 'chr1_201565022_201565622',
 'chr1_201604672_201605422',
 'chr1_201650272_201650722',
 'chr1_2084961_2085561',
 'chr1_201696172_201696822',
 'chr1_201713372_201713872',
 'chr1_201779672_201780072',
 'chr1_202008122_202008522',
 'chr1_202010172_202010772',
 'chr1_19872207_19872707',
 'chr1_202018422_202019222',
 'chr1_202034722_202035522',
 'chr1_202046122_202046822',
 'chr1_202056872_202057372',
 'chr1_202462722_202463072',
 'chr1_202810522_202811072',
 'chr1_202860572_202861172',
 'chr1_202919572_202920072',
 'chr1_203162872_203163372',
 'chr1_203239222_203239822',
 'chr1_203274872_203275422',
 'chr1_203288472_203288972',
 'chr1_203305322_203305772',
 'chr1_203322072_203322622',
 'chr1_203397122_203397772',
 'chr1_203402722_203403322',
 'chr1_203410372_203410972',
 'chr1_203428972_203429722',
 'chr1_203434572_203435022',
 'chr1_203465022_203465722',
 'chr1_203538022_203538472',
 'chr1_20032057_20033207',
 'chr1_203721272_203721872',
 'chr1_203860322_203860822',
 'chr1_203861272_203861922',
 'chr1_203929772_203930272',
 'chr1_203976022_203976822',
 'chr1_204088672_204089572',
 'chr1_204126372_204126822',
 'chr1_20102857_20103257',
 'chr1_204378772_204379472',
 'chr1_204411622_204412172',
 'chr1_204506572_204507372',
 'chr1_204821422_204821972',
 'chr1_20172107_20172707',
 'chr1_205121922_205122522',
 'chr1_205319572_205319972',
 'chr1_205365972_205366422',
 'chr1_205369622_205370072',
 'chr1_205370822_205371222',
 'chr1_20212907_20213357',
 'chr1_205477772_205478522',
 'chr1_205543272_205543872',
 'chr1_205563722_205564372',
 'chr1_205610572_205611672',
 'chr1_205619322_205619922',
 'chr1_205631772_205632222',
 'chr1_205633072_205633722',
 'chr1_205702822_205703622',
 'chr1_205710022_205711022',
 'chr1_205748972_205749822',
 'chr1_205824922_205825572',
 'chr1_20269257_20269707',
 'chr1_206122080_206123180',
 'chr1_206112780_206113430',
 'chr1_20341107_20342207',
 'chr1_206540271_206540971',
 'chr1_206550372_206550922',
 'chr1_206586668_206587318',
 'chr1_206595251_206596101',
 'chr1_206612197_206612747',
 'chr1_20356657_20357357',
 'chr1_20359657_20360107',
 'chr1_206730805_206731255',
 'chr1_206998855_206999555',
 'chr1_207004105_207005405',
 'chr1_207307105_207307555',
 'chr1_207316155_207317055',
 'chr1_207322605_207323205',
 'chr1_207323355_207323855',
 'chr1_207750855_207752105',
 'chr1_207794355_207795255',
 'chr1_207811955_207812505',
 'chr1_207826255_207827055',
 'chr1_207848205_207848705',
 'chr1_207866755_207867305',
 'chr1_207950605_207951255',
 'chr1_207963355_207964255',
 'chr1_208036505_208037005',
 'chr1_208055505_208056155',
 'chr1_208298455_208299355',
 'chr1_20538557_20539257',
 'chr1_209371705_209372205',
 'chr1_209527355_209527805',
 'chr1_209652955_209653555',
 'chr1_209744955_209745505',
 'chr1_209787505_209788205',
 'chr1_209801955_209802605',
 'chr1_209823705_209824305',
 'chr1_209827705_209828155',
 'chr1_210384656_210385006',
 'chr1_210419256_210419906',
 'chr1_210523806_210524506',
 'chr1_210916058_210916458',
 'chr1_211179908_211180758',
 'chr1_211200208_211200808',
 'chr1_211222708_211223008',
 'chr1_211511858_211512408',
 'chr1_211602208_211602758',
 'chr1_211734758_211735258',
 'chr1_2189411_2190261',
 'chr1_211947558_211948158',
 'chr1_212004758_212005408',
 'chr1_212201758_212202158',
 'chr1_212228458_212229458',
 'chr1_212558708_212559358',
 'chr1_20961207_20961707',
 'chr1_212791658_212792058',
 'chr1_20983307_20983757',
 'chr1_213099608_213100458',
 'chr1_213659507_213660057',
 'chr1_213741307_213741957',
 'chr1_214228907_214229457',
 'chr1_214251257_214251757',
 'chr1_214439357_214440057',
 'chr1_214573357_214573957',
 'chr1_214583057_214583507',
 'chr1_214583757_214584507',
 'chr1_214820457_214820957',
 'chr1_215115457_215115807',
 'chr1_215590658_215591258',
 'chr1_21267807_21268407',
 'chr1_216327208_216327708',
 'chr1_21338057_21339157',
 'chr1_216528558_216529408',
 'chr1_216766858_216767358',
 'chr1_216816158_216816658',
 'chr1_216902458_216903358',
 'chr1_216960808_216961308',
 'chr1_217005258_217005808',
 'chr1_217029208_217029758',
 'chr1_217076458_217077058',
 'chr1_217078158_217078458',
 'chr1_217228558_217229158',
 'chr1_217348908_217349508',
 'chr1_217523208_217523658',
 'chr1_217525858_217526708',
 'chr1_217539408_217539958',
 'chr1_217574408_217575108',
 'chr1_217595708_217596058',
 'chr1_217630958_217631508',
 'chr1_218285058_218285458',
 'chr1_2255161_2256361',
 'chr1_21539907_21540407',
 'chr1_218537608_218538708',
 'chr1_218570458_218571008',
 'chr1_218571258_218572008',
 'chr1_218620908_218621458',
 'chr1_218624608_218625108',
 'chr1_218650358_218651258',
 'chr1_218817258_218817808',
 'chr1_218828058_218828608',
 'chr1_219126158_219126808',
 'chr1_219161058_219162008',
 'chr1_219177858_219178458',
 'chr1_219279208_219280008',
 'chr1_219310008_219310908',
 'chr1_21625407_21626057',
 'chr1_21633907_21635007',
 'chr1_219468408_219468958',
 'chr1_219506608_219507008',
 'chr1_219521208_219521908',
 'chr1_21676257_21676807',
 'chr1_219910508_219911158',
 'chr1_219958908_219959508',
 'chr1_219972808_219973108',
 'chr1_220089658_220090058',
 'chr1_21760957_21761507',
 'chr1_220734308_220735008',
 'chr1_220786208_220787158',
 'chr1_220812158_220812808',
 'chr1_220815358_220815808',
 'chr1_21782957_21783857',
 'chr1_221203858_221204658',
 'chr1_221307308_221307708',
 'chr1_221393758_221394708',
 'chr1_221742058_221742908',
 'chr1_221845808_221846558',
 'chr1_222006458_222007158',
 'chr1_222010108_222010808',
 'chr1_222464308_222465008',
 'chr1_222465508_222465908',
 'chr1_21944207_21944857',
 'chr1_222611158_222611658',
 'chr1_222622658_222623458',
 'chr1_21956607_21957757',
 'chr1_222784808_222785358',
 'chr1_222805208_222805658',
 'chr1_222829808_222830358',
 'chr1_222897608_222898558',
 'chr1_222946208_222947108',
 'chr1_222948158_222948758',
 'chr1_223007208_223007758',
 'chr1_223518458_223519158',
 'chr1_22052407_22052907',
 'chr1_223622998_223623548',
 'chr1_223734348_223735048',
 'chr1_223846048_223846448',
 'chr1_223886448_223887048',
 'chr1_224063698_224064148',
 'chr1_224113048_224113498',
 'chr1_224139098_224139698',
 'chr1_224142648_224143448',
 'chr1_224173398_224174048',
 'chr1_224199598_224200048',
 'chr1_224211098_224211448',
 'chr1_224356698_224357048',
 'chr1_224502898_224503998',
 'chr1_224929548_224929898',
 'chr1_22205007_22205657',
 'chr1_22257257_22258257',
 'chr1_22259807_22260307',
 'chr1_225694048_225694698',
 'chr1_225714748_225715148',
 'chr1_225744048_225744648',
 'chr1_225772248_225773448',
 'chr1_225777998_225778398',
 'chr1_225890900_225891650',
 'chr1_225999149_225999799',
 'chr1_226110149_226110649',
 'chr1_226132999_226133599',
 'chr1_226400749_226401299',
 'chr1_22342007_22342507',
 'chr1_226553499_226554149',
 'chr1_226602699_226603199',
 'chr1_226632399_226633049',
 'chr1_226676999_226677449',
 'chr1_226702699_226703849',
 'chr1_226814799_226815649',
 'chr1_226870449_226870949',
 'chr1_226895449_226896249',
 'chr1_226939749_226940349',
 'chr1_227001849_227002299',
 'chr1_227016749_227017649',
 'chr1_227066799_227067399',
 'chr1_227154499_227155399',
 'chr1_22412507_22413007',
 'chr1_22414057_22414757',
 'chr1_227282999_227283499',
 'chr1_227306049_227306499',
 'chr1_227344049_227344849',
 'chr1_227351349_227351999',
 'chr1_227372549_227373199',
 'chr1_227397799_227398149',
 'chr1_227399299_227399999',
 'chr1_227542499_227542999',
 'chr1_227549849_227550349',
 'chr1_227563399_227563999',
 'chr1_22451607_22452207',
 'chr1_227605449_227606649',
 'chr1_227735199_227735549',
 'chr1_227891549_227892199',
 'chr1_228090499_228091349',
 'chr1_228165449_228166399',
 'chr1_228867503_228868153',
 'chr1_228983553_228984103',
 'chr1_229058703_229059253',
 'chr1_229059603_229060253',
 'chr1_229070103_229070603',
 'chr1_229085153_229085853',
 'chr1_2361011_2361461',
 'chr1_229117553_229118353',
 'chr1_229171753_229172503',
 'chr1_229199303_229199553',
 'chr1_229207953_229209253',
 'chr1_229221103_229222253',
 'chr1_229271953_229272453',
 'chr1_229273553_229274353',
 'chr1_229319953_229320403',
 'chr1_229508153_229508653',
 'chr1_229536953_229537353',
 'chr1_229558703_229559353',
 'chr1_229843803_229845353',
 'chr1_230101403_230101953',
 'chr1_230104653_230105103',
 'chr1_230120303_230120753',
 'chr1_230185654_230186604',
 'chr1_230215604_230216004',
 'chr1_230282054_230282704',
 'chr1_22717457_22717907',
 'chr1_230307954_230308404',
 'chr1_230492554_230493254',
 'chr1_230498504_230499054',
 'chr1_22750307_22750907',
 'chr1_230680454_230681104',
 'chr1_230730954_230731504',
 'chr1_230752254_230752854',
 'chr1_230825204_230825704',
 'chr1_230849504_230849854',
 'chr1_230950304_230950904',
 'chr1_230978754_230979154',
 'chr1_22814607_22815157',
 'chr1_22826507_22827307',
 'chr1_231404204_231404654',
 'chr1_231417754_231418204',
 'chr1_231448954_231449554',
 'chr1_231528254_231528804',
 'chr1_231601804_231602754',
 'chr1_231684004_231685354',
 'chr1_231727954_231728504',
 'chr1_231729204_231729854',
 'chr1_231847904_231848504',
 'chr1_231919854_231920604',
 'chr1_2391461_2392011',
 'chr1_232260804_232261304',
 'chr1_232287804_232288354',
 'chr1_232306354_232306804',
 'chr1_232320154_232320804',
 'chr1_232322204_232323054',
 'chr1_232548304_232548754',
 'chr1_232664954_232665704',
 'chr1_232678304_232679054',
 'chr1_232704654_232705304',
 'chr1_232764004_232765404',
 'chr1_232780204_232780904',
 'chr1_232793904_232794454',
 'chr1_22967607_22968057',
 'chr1_233025104_233026154',
 'chr1_23003857_23004207',
 'chr1_233602104_233602654',
 'chr1_233704754_233705504',
 'chr1_233735904_233736304',
 'chr1_233800954_233801454',
 'chr1_233897104_233898154',
 'chr1_2410561_2411461',
 'chr1_234107404_234108204',
 'chr1_234371304_234371804',
 'chr1_234373204_234373754',
 'chr1_234403354_234403854',
 'chr1_234452304_234453204',
 'chr1_234458254_234458954',
 'chr1_234487354_234487804',
 'chr1_234499154_234499554',
 'chr1_234532404_234533104',
 'chr1_234544404_234545154',
 'chr1_234599504_234600554',
 'chr1_234610204_234610604',
 'chr1_234643154_234643654',
 'chr1_234717653_234718203',
 'chr1_234723403_234725053',
 'chr1_234875503_234876103',
 'chr1_234894153_234894853',
 'chr1_234915853_234916453',
 'chr1_234917953_234918703',
 'chr1_234925803_234926353',
 'chr1_234959653_234960103',
 'chr1_234960403_234961203',
 'chr1_234961603_234962553',
 'chr1_234973803_234974503',
 'chr1_234997053_234997853',
 'chr1_235006753_235007303',
 'chr1_235035153_235035603',
 'chr1_235079586_235080136',
 'chr1_235083685_235084185',
 'chr1_235128785_235129185',
 'chr1_235129685_235130235',
 'chr1_235237085_235237685',
 'chr1_235295785_235296585',
 'chr1_235328235_235328835',
 'chr1_235331235_235331785',
 'chr1_235408735_235409785',
 'chr1_235504350_235505200',
 'chr1_235517852_235518302',
 'chr1_235635900_235636350',
 'chr1_235714050_235714800',
 'chr1_236009800_236010400',
 'chr1_236112500_236112900',
 'chr1_236298150_236298600',
 'chr1_236308500_236309400',
 'chr1_236319450_236319950',
 'chr1_236320450_236321600',
 'chr1_236333000_236333750',
 'chr1_236389100_236389900',
 'chr1_236399450_236399950',
 'chr1_236404000_236404550',
 'chr1_236498650_236499350',
 'chr1_236604300_236604800',
 'chr1_2438011_2438411',
 'chr1_23368757_23369107',
 'chr1_237411750_237412150',
 'chr1_237756600_237757000',
 'chr1_239035100_239035700',
 'chr1_239056850_239057550',
 'chr1_239306350_239306950',
 'chr1_239442800_239443650',
 'chr1_239635100_239635750',
 'chr1_239719200_239719650',
 ...]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/lus/grand/projects/covid-ct/imlab/users/temi/projects/TFXcan/TFPred_pipeline/prediction_folder/enformer_predictions/geuvadis_AR/predictions_2023-01-27'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> check_queries(sample, queries, output_dir, logfile):</span>
<span id="cb36-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb36-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Check whether a given region, for an individual has been predicted and logged.</span></span>
<span id="cb36-4"></span>
<span id="cb36-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb36-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        sample: str </span></span>
<span id="cb36-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            The name/id of an individual</span></span>
<span id="cb36-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        queries: A batch</span></span>
<span id="cb36-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            A region in the genome in the form `chr_start_end`.</span></span>
<span id="cb36-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        output_dir: str (path)</span></span>
<span id="cb36-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            The folder where the predictions should have been logged. </span></span>
<span id="cb36-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        logfile: pd.DataFrame </span></span>
<span id="cb36-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            A dataframe of a log file or `None` if the log file does not exist. </span></span>
<span id="cb36-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb36-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns: dict</span></span>
<span id="cb36-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        'query': the query region if it has not been logged or predictions don't exist</span></span>
<span id="cb36-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        'logtype': whether it should be logged if it has not been logged</span></span>
<span id="cb36-18"></span>
<span id="cb36-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    If predictions exist and the query has been logged, this function returns None.</span></span>
<span id="cb36-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb36-21">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb36-22">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb36-23">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb36-24"></span>
<span id="cb36-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(logfile, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)):</span>
<span id="cb36-26">        output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'query'</span>:query, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logtype'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> query <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> queries]</span>
<span id="cb36-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(output)</span>
<span id="cb36-28"></span>
<span id="cb36-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(logfile, pd.DataFrame):<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># should have read it&gt;</span></span>
<span id="cb36-30"></span>
<span id="cb36-31">        id_logfile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> logfile.loc[logfile[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'individual'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> sample, : ]</span>
<span id="cb36-32"></span>
<span id="cb36-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check if the file is saved</span></span>
<span id="cb36-34">        queries_saved <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_predictions.h5'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> query <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> queries]</span>
<span id="cb36-35">        queries_saved <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([os.path.isfile(q) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> queries_saved])</span>
<span id="cb36-36"></span>
<span id="cb36-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check if the file is in the logfile</span></span>
<span id="cb36-38">        query_logged <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([(query <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> id_logfile.motif.values) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> query <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> queries])</span>
<span id="cb36-39"></span>
<span id="cb36-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb36-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> query_logged.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> queries_saved.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lengths of queries logged and saved conditions are not the same"</span></span>
<span id="cb36-42">        queries_condition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> queries_saved <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> query_logged</span>
<span id="cb36-43">        queries_condition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> queries_condition.tolist()</span>
<span id="cb36-44"></span>
<span id="cb36-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb36-46">        output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'query'</span>:queries[i], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logtype'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> qc <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'query'</span>:queries[i], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logtype'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, qc <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(queries_condition)]</span>
<span id="cb36-47"></span>
<span id="cb36-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(output)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">check_query(sample, queries, output_dir, logfile)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>[{'query': 'chr1_99543994_99544394', 'logtype': 'n'},
 {'query': 'chr1_9943142_9943692', 'logtype': 'n'},
 {'query': 'chr1_99598344_99598844', 'logtype': 'n'},
 {'query': 'chr1_99615044_99615644', 'logtype': 'n'},
 {'query': 'chr1_99766294_99766944', 'logtype': 'n'},
 {'query': 'chr1_99806744_99807394', 'logtype': 'n'},
 {'query': 'chr1_99836194_99836794', 'logtype': 'n'},
 {'query': 'chr1_100037994_100038294', 'logtype': 'n'},
 {'query': 'chr1_100132694_100133394', 'logtype': 'n'},
 {'query': 'chr1_100202594_100203294', 'logtype': 'n'},
 {'query': 'chr1_100239894_100240544', 'logtype': 'n'},
 {'query': 'chr1_100351494_100351894', 'logtype': 'n'},
 {'query': 'chr1_100352294_100352644', 'logtype': 'n'},
 {'query': 'chr1_100414694_100415194', 'logtype': 'n'},
 {'query': 'chr1_100419294_100419794', 'logtype': 'n'},
 {'query': 'chr1_100452544_100453344', 'logtype': 'n'},
 {'query': 'chr1_10032592_10033142', 'logtype': 'n'},
 {'query': 'chr1_1074020_1074370', 'logtype': 'n'},
 {'query': 'chr1_100874244_100874944', 'logtype': 'n'},
 {'query': 'chr1_100875044_100875644', 'logtype': 'n'},
 {'query': 'chr1_100916494_100917144', 'logtype': 'n'},
 {'query': 'chr1_100930944_100931244', 'logtype': 'n'},
 {'query': 'chr1_100946944_100947594', 'logtype': 'n'},
 {'query': 'chr1_101288494_101288994', 'logtype': 'n'},
 {'query': 'chr1_10210292_10210542', 'logtype': 'n'},
 {'query': 'chr1_10430293_10430793', 'logtype': 'n'},
 {'query': 'chr1_104630728_104631178', 'logtype': 'n'},
 {'query': 'chr1_104884128_104884728', 'logtype': 'n'},
 {'query': 'chr1_104953428_104954328', 'logtype': 'n'},
 {'query': 'chr1_105394878_105395428', 'logtype': 'n'},
 {'query': 'chr1_105395878_105396528', 'logtype': 'n'},
 {'query': 'chr1_105399778_105400578', 'logtype': 'n'},
 {'query': 'chr1_105533278_105533678', 'logtype': 'n'},
 {'query': 'chr1_105572678_105573328', 'logtype': 'n'},
 {'query': 'chr1_106134478_106135078', 'logtype': 'n'},
 {'query': 'chr1_106276328_106276928', 'logtype': 'n'},
 {'query': 'chr1_106480528_106481178', 'logtype': 'n'},
 {'query': 'chr1_106541428_106542078', 'logtype': 'n'},
 {'query': 'chr1_106607778_106608328', 'logtype': 'n'},
 {'query': 'chr1_106644128_106644778', 'logtype': 'n'},
 {'query': 'chr1_106746928_106747478', 'logtype': 'n'},
 {'query': 'chr1_10674893_10675543', 'logtype': 'n'},
 {'query': 'chr1_10697543_10698093', 'logtype': 'n'},
 {'query': 'chr1_107473878_107474528', 'logtype': 'n'},
 {'query': 'chr1_107502478_107503128', 'logtype': 'n'},
 {'query': 'chr1_107530328_107530978', 'logtype': 'n'},
 {'query': 'chr1_107536128_107536778', 'logtype': 'n'},
 {'query': 'chr1_107682378_107682978', 'logtype': 'n'},
 {'query': 'chr1_107702828_107703528', 'logtype': 'n'},
 {'query': 'chr1_107738878_107739528', 'logtype': 'n'},
 {'query': 'chr1_107782278_107783128', 'logtype': 'n'},
 {'query': 'chr1_108045428_108045878', 'logtype': 'n'},
 {'query': 'chr1_108087478_108088028', 'logtype': 'n'},
 {'query': 'chr1_108124828_108125828', 'logtype': 'n'},
 {'query': 'chr1_108342078_108342628', 'logtype': 'n'},
 {'query': 'chr1_108590978_108591428', 'logtype': 'n'},
 {'query': 'chr1_108746428_108746728', 'logtype': 'n'},
 {'query': 'chr1_109148478_109149128', 'logtype': 'n'},
 {'query': 'chr1_109181128_109181778', 'logtype': 'n'},
 {'query': 'chr1_109392928_109393428', 'logtype': 'n'},
 {'query': 'chr1_109483778_109484278', 'logtype': 'n'},
 {'query': 'chr1_109548328_109548778', 'logtype': 'n'},
 {'query': 'chr1_109632428_109633278', 'logtype': 'n'},
 {'query': 'chr1_109869578_109870278', 'logtype': 'n'},
 {'query': 'chr1_109927878_109928428', 'logtype': 'n'},
 {'query': 'chr1_109960628_109960878', 'logtype': 'n'},
 {'query': 'chr1_109984528_109985078', 'logtype': 'n'},
 {'query': 'chr1_110157878_110158428', 'logtype': 'n'},
 {'query': 'chr1_110235678_110236528', 'logtype': 'n'},
 {'query': 'chr1_110338128_110338778', 'logtype': 'n'},
 {'query': 'chr1_110407428_110407978', 'logtype': 'n'},
 {'query': 'chr1_110424578_110425028', 'logtype': 'n'},
 {'query': 'chr1_110634628_110635078', 'logtype': 'n'},
 {'query': 'chr1_11071893_11072393', 'logtype': 'n'},
 {'query': 'chr1_110798628_110799478', 'logtype': 'n'},
 {'query': 'chr1_110856278_110856728', 'logtype': 'n'},
 {'query': 'chr1_111099178_111099578', 'logtype': 'n'},
 {'query': 'chr1_111358978_111359428', 'logtype': 'n'},
 {'query': 'chr1_111360228_111360678', 'logtype': 'n'},
 {'query': 'chr1_111401428_111401878', 'logtype': 'n'},
 {'query': 'chr1_111406028_111406728', 'logtype': 'n'},
 {'query': 'chr1_111420378_111420778', 'logtype': 'n'},
 {'query': 'chr1_111449128_111449578', 'logtype': 'n'},
 {'query': 'chr1_111508178_111508678', 'logtype': 'n'},
 {'query': 'chr1_11151993_11152693', 'logtype': 'n'},
 {'query': 'chr1_111592978_111593428', 'logtype': 'n'},
 {'query': 'chr1_111643028_111643578', 'logtype': 'n'},
 {'query': 'chr1_111655978_111656678', 'logtype': 'n'},
 {'query': 'chr1_111755228_111756128', 'logtype': 'n'},
 {'query': 'chr1_111841078_111841778', 'logtype': 'n'},
 {'query': 'chr1_111884978_111885478', 'logtype': 'n'},
 {'query': 'chr1_111948528_111949228', 'logtype': 'n'},
 {'query': 'chr1_112033528_112033878', 'logtype': 'n'},
 {'query': 'chr1_112054428_112054978', 'logtype': 'n'},
 {'query': 'chr1_112271928_112272278', 'logtype': 'n'},
 {'query': 'chr1_112449228_112450128', 'logtype': 'n'},
 {'query': 'chr1_112529478_112529728', 'logtype': 'n'},
 {'query': 'chr1_112530078_112530728', 'logtype': 'n'},
 {'query': 'chr1_112548378_112549078', 'logtype': 'n'},
 {'query': 'chr1_112594378_112595028', 'logtype': 'n'},
 {'query': 'chr1_112700228_112700528', 'logtype': 'n'},
 {'query': 'chr1_112890228_112890578', 'logtype': 'n'},
 {'query': 'chr1_112890928_112891678', 'logtype': 'n'},
 {'query': 'chr1_112905678_112906228', 'logtype': 'n'},
 {'query': 'chr1_112934628_112935028', 'logtype': 'n'},
 {'query': 'chr1_113021428_113022278', 'logtype': 'n'},
 {'query': 'chr1_113056828_113057478', 'logtype': 'n'},
 {'query': 'chr1_113072578_113073328', 'logtype': 'n'},
 {'query': 'chr1_113242378_113243028', 'logtype': 'n'},
 {'query': 'chr1_113355778_113356228', 'logtype': 'n'},
 {'query': 'chr1_113434428_113435028', 'logtype': 'n'},
 {'query': 'chr1_113515428_113515878', 'logtype': 'n'},
 {'query': 'chr1_113812078_113812778', 'logtype': 'n'},
 {'query': 'chr1_113904778_113905478', 'logtype': 'n'},
 {'query': 'chr1_114093678_114094578', 'logtype': 'n'},
 {'query': 'chr1_11421143_11421793', 'logtype': 'n'},
 {'query': 'chr1_11421993_11422543', 'logtype': 'n'},
 {'query': 'chr1_114434978_114435628', 'logtype': 'n'},
 {'query': 'chr1_114457278_114457878', 'logtype': 'n'},
 {'query': 'chr1_114511029_114511429', 'logtype': 'n'},
 {'query': 'chr1_114755529_114756029', 'logtype': 'n'},
 {'query': 'chr1_114757329_114757929', 'logtype': 'n'},
 {'query': 'chr1_11485243_11485843', 'logtype': 'n'},
 {'query': 'chr1_115075829_115076279', 'logtype': 'n'},
 {'query': 'chr1_115349529_115350279', 'logtype': 'n'},
 {'query': 'chr1_115402579_115403129', 'logtype': 'n'},
 {'query': 'chr1_115714679_115715329', 'logtype': 'n'},
 {'query': 'chr1_11569443_11570193', 'logtype': 'n'},
 {'query': 'chr1_115810829_115811629', 'logtype': 'n'},
 {'query': 'chr1_116123529_116124529', 'logtype': 'n'},
 {'query': 'chr1_116133579_116134629', 'logtype': 'n'},
 {'query': 'chr1_116202978_116203628', 'logtype': 'n'},
 {'query': 'chr1_116476128_116476928', 'logtype': 'n'},
 {'query': 'chr1_116485028_116485428', 'logtype': 'n'},
 {'query': 'chr1_116632428_116633028', 'logtype': 'n'},
 {'query': 'chr1_116988828_116989278', 'logtype': 'n'},
 {'query': 'chr1_117017728_117018178', 'logtype': 'n'},
 {'query': 'chr1_117026378_117026878', 'logtype': 'n'},
 {'query': 'chr1_117128628_117129128', 'logtype': 'n'},
 {'query': 'chr1_117179528_117179978', 'logtype': 'n'},
 {'query': 'chr1_11737093_11737793', 'logtype': 'n'},
 {'query': 'chr1_117562278_117563428', 'logtype': 'n'},
 {'query': 'chr1_117574278_117574978', 'logtype': 'n'},
 {'query': 'chr1_117591228_117591728', 'logtype': 'n'},
 {'query': 'chr1_118059327_118059927', 'logtype': 'n'},
 {'query': 'chr1_118111577_118111827', 'logtype': 'n'},
 {'query': 'chr1_118196477_118196927', 'logtype': 'n'},
 {'query': 'chr1_118660677_118661227', 'logtype': 'n'},
 {'query': 'chr1_11874143_11874443', 'logtype': 'n'},
 {'query': 'chr1_11907743_11908543', 'logtype': 'n'},
 {'query': 'chr1_119140077_119140927', 'logtype': 'n'},
 {'query': 'chr1_119187277_119187927', 'logtype': 'n'},
 {'query': 'chr1_119385627_119386077', 'logtype': 'n'},
 {'query': 'chr1_119472177_119472677', 'logtype': 'n'},
 {'query': 'chr1_119542327_119543027', 'logtype': 'n'},
 {'query': 'chr1_119618077_119618477', 'logtype': 'n'},
 {'query': 'chr1_119625977_119626777', 'logtype': 'n'},
 {'query': 'chr1_119631277_119631927', 'logtype': 'n'},
 {'query': 'chr1_119647927_119648677', 'logtype': 'n'},
 {'query': 'chr1_119697477_119697927', 'logtype': 'n'},
 {'query': 'chr1_119765227_119766877', 'logtype': 'n'},
 {'query': 'chr1_119768027_119768477', 'logtype': 'n'},
 {'query': 'chr1_119774077_119774727', 'logtype': 'n'},
 {'query': 'chr1_119779777_119780577', 'logtype': 'n'},
 {'query': 'chr1_11980093_11980593', 'logtype': 'n'},
 {'query': 'chr1_119867527_119868727', 'logtype': 'n'},
 {'query': 'chr1_121442742_121443642', 'logtype': 'n'},
 {'query': 'chr1_121546652_121548002', 'logtype': 'n'},
 {'query': 'chr1_12184043_12184643', 'logtype': 'n'},
 {'query': 'chr1_12188743_12189293', 'logtype': 'n'},
 {'query': 'chr1_12376195_12376695', 'logtype': 'n'},
 {'query': 'chr1_12463845_12464945', 'logtype': 'n'},
 {'query': 'chr1_12595787_12596237', 'logtype': 'n'},
 {'query': 'chr1_12597737_12598237', 'logtype': 'n'},
 {'query': 'chr1_12615846_12616346', 'logtype': 'n'},
 {'query': 'chr1_1375120_1375720', 'logtype': 'n'},
 {'query': 'chr1_1407120_1407520', 'logtype': 'n'},
 {'query': 'chr1_1433120_1433670', 'logtype': 'n'},
 {'query': 'chr1_13617055_13617505', 'logtype': 'n'},
 {'query': 'chr1_13619705_13620455', 'logtype': 'n'},
 {'query': 'chr1_13799505_13800005', 'logtype': 'n'},
 {'query': 'chr1_13859955_13860405', 'logtype': 'n'},
 {'query': 'chr1_13901155_13901555', 'logtype': 'n'},
 {'query': 'chr1_14135005_14135605', 'logtype': 'n'},
 {'query': 'chr1_14142255_14142705', 'logtype': 'n'},
 {'query': 'chr1_145891025_145891675', 'logtype': 'n'},
 {'query': 'chr1_147076402_147076852', 'logtype': 'n'},
 {'query': 'chr1_147106218_147106568', 'logtype': 'n'},
 {'query': 'chr1_147109668_147110368', 'logtype': 'n'},
 {'query': 'chr1_147214930_147215930', 'logtype': 'n'},
 {'query': 'chr1_147238051_147238551', 'logtype': 'n'},
 {'query': 'chr1_147242050_147243000', 'logtype': 'n'},
 {'query': 'chr1_147350749_147352104', 'logtype': 'n'},
 {'query': 'chr1_147515328_147515927', 'logtype': 'n'},
 {'query': 'chr1_147541023_147541680', 'logtype': 'n'},
 {'query': 'chr1_147626549_147627299', 'logtype': 'n'},
 {'query': 'chr1_147642051_147642650', 'logtype': 'n'},
 {'query': 'chr1_147665082_147665782', 'logtype': 'n'},
 {'query': 'chr1_14422004_14422454', 'logtype': 'n'},
 {'query': 'chr1_148263225_148263675', 'logtype': 'n'},
 {'query': 'chr1_148334626_148334876', 'logtype': 'n'},
 {'query': 'chr1_14486454_14486854', 'logtype': 'n'},
 {'query': 'chr1_14498654_14499404', 'logtype': 'n'},
 {'query': 'chr1_14648704_14649204', 'logtype': 'n'},
 {'query': 'chr1_14649954_14650504', 'logtype': 'n'},
 {'query': 'chr1_150010501_150011401', 'logtype': 'n'},
 {'query': 'chr1_150205914_150206712', 'logtype': 'n'},
 {'query': 'chr1_150233705_150234354', 'logtype': 'n'},
 {'query': 'chr1_150363474_150364174', 'logtype': 'n'},
 {'query': 'chr1_150515324_150515974', 'logtype': 'n'},
 {'query': 'chr1_150561074_150562424', 'logtype': 'n'},
 {'query': 'chr1_150579374_150579874', 'logtype': 'n'},
 {'query': 'chr1_14737954_14738854', 'logtype': 'n'},
 {'query': 'chr1_150697124_150697524', 'logtype': 'n'},
 {'query': 'chr1_151058724_151059074', 'logtype': 'n'},
 {'query': 'chr1_151281224_151282574', 'logtype': 'n'},
 {'query': 'chr1_151739824_151740424', 'logtype': 'n'},
 {'query': 'chr1_151836774_151837274', 'logtype': 'n'},
 {'query': 'chr1_151972824_151973474', 'logtype': 'n'},
 {'query': 'chr1_152193024_152193624', 'logtype': 'n'},
 {'query': 'chr1_152198874_152199474', 'logtype': 'n'},
 {'query': 'chr1_14958104_14958604', 'logtype': 'n'},
 {'query': 'chr1_153633524_153634474', 'logtype': 'n'},
 {'query': 'chr1_153649724_153650274', 'logtype': 'n'},
 {'query': 'chr1_153658474_153658924', 'logtype': 'n'},
 {'query': 'chr1_153783374_153783974', 'logtype': 'n'},
 {'query': 'chr1_154142074_154142924', 'logtype': 'n'},
 {'query': 'chr1_154155324_154156174', 'logtype': 'n'},
 {'query': 'chr1_154337374_154338024', 'logtype': 'n'},
 {'query': 'chr1_154405274_154405574', 'logtype': 'n'},
 {'query': 'chr1_154417974_154418874', 'logtype': 'n'},
 {'query': 'chr1_154427724_154428224', 'logtype': 'n'},
 {'query': 'chr1_154627874_154628274', 'logtype': 'n'},
 {'query': 'chr1_154936824_154937874', 'logtype': 'n'},
 {'query': 'chr1_155017124_155017824', 'logtype': 'n'},
 {'query': 'chr1_155022774_155023324', 'logtype': 'n'},
 {'query': 'chr1_155050874_155051474', 'logtype': 'n'},
 {'query': 'chr1_155105674_155106124', 'logtype': 'n'},
 {'query': 'chr1_1615420_1615870', 'logtype': 'n'},
 {'query': 'chr1_155127224_155127524', 'logtype': 'n'},
 {'query': 'chr1_155227359_155227709', 'logtype': 'n'},
 {'query': 'chr1_155244509_155245109', 'logtype': 'n'},
 {'query': 'chr1_155262159_155262659', 'logtype': 'n'},
 {'query': 'chr1_155688459_155689209', 'logtype': 'n'},
 {'query': 'chr1_156054409_156054909', 'logtype': 'n'},
 {'query': 'chr1_156060909_156061309', 'logtype': 'n'},
 {'query': 'chr1_156193759_156194259', 'logtype': 'n'},
 {'query': 'chr1_156510558_156511308', 'logtype': 'n'},
 {'query': 'chr1_156559608_156560258', 'logtype': 'n'},
 {'query': 'chr1_156728358_156728958', 'logtype': 'n'},
 {'query': 'chr1_156741008_156741558', 'logtype': 'n'},
 {'query': 'chr1_157132558_157133158', 'logtype': 'n'},
 {'query': 'chr1_157284060_157284860', 'logtype': 'n'},
 {'query': 'chr1_157419710_157420460', 'logtype': 'n'},
 {'query': 'chr1_158196410_158196960', 'logtype': 'n'},
 {'query': 'chr1_15526355_15527105', 'logtype': 'n'},
 {'query': 'chr1_158844360_158844760', 'logtype': 'n'},
 {'query': 'chr1_15559055_15559905', 'logtype': 'n'},
 {'query': 'chr1_1658789_1659289', 'logtype': 'n'},
 {'query': 'chr1_15602355_15602755', 'logtype': 'n'},
 {'query': 'chr1_15603455_15603855', 'logtype': 'n'},
 {'query': 'chr1_15628705_15629155', 'logtype': 'n'},
 {'query': 'chr1_15642205_15642705', 'logtype': 'n'},
 {'query': 'chr1_159817510_159818010', 'logtype': 'n'},
 {'query': 'chr1_159889210_159889560', 'logtype': 'n'},
 {'query': 'chr1_160055460_160055960', 'logtype': 'n'},
 {'query': 'chr1_160131810_160132560', 'logtype': 'n'},
 {'query': 'chr1_160157060_160157810', 'logtype': 'n'},
 {'query': 'chr1_160159710_160160360', 'logtype': 'n'},
 {'query': 'chr1_160201810_160202460', 'logtype': 'n'},
 {'query': 'chr1_160244160_160244560', 'logtype': 'n'},
 {'query': 'chr1_160888910_160889460', 'logtype': 'n'},
 {'query': 'chr1_160941010_160941460', 'logtype': 'n'},
 {'query': 'chr1_160949310_160949860', 'logtype': 'n'},
 {'query': 'chr1_161021110_161021610', 'logtype': 'n'},
 {'query': 'chr1_161165710_161166610', 'logtype': 'n'},
 {'query': 'chr1_161399310_161399810', 'logtype': 'n'},
 {'query': 'chr1_15820755_15821355', 'logtype': 'n'},
 {'query': 'chr1_15834205_15835255', 'logtype': 'n'},
 {'query': 'chr1_15835655_15836255', 'logtype': 'n'},
 {'query': 'chr1_161765710_161766610', 'logtype': 'n'},
 {'query': 'chr1_15886155_15886705', 'logtype': 'n'},
 {'query': 'chr1_162178960_162179610', 'logtype': 'n'},
 {'query': 'chr1_162189210_162189860', 'logtype': 'n'},
 {'query': 'chr1_162206960_162207910', 'logtype': 'n'},
 {'query': 'chr1_162285010_162285660', 'logtype': 'n'},
 {'query': 'chr1_162421210_162421710', 'logtype': 'n'},
 {'query': 'chr1_162561110_162561910', 'logtype': 'n'},
 {'query': 'chr1_162567410_162568060', 'logtype': 'n'},
 {'query': 'chr1_162605560_162605960', 'logtype': 'n'},
 {'query': 'chr1_162660460_162661160', 'logtype': 'n'},
 {'query': 'chr1_162873710_162874610', 'logtype': 'n'},
 {'query': 'chr1_162913310_162913760', 'logtype': 'n'},
 {'query': 'chr1_162930410_162931310', 'logtype': 'n'},
 {'query': 'chr1_163211610_163212060', 'logtype': 'n'},
 {'query': 'chr1_163290160_163290760', 'logtype': 'n'},
 {'query': 'chr1_163381760_163382260', 'logtype': 'n'},
 {'query': 'chr1_163585660_163586360', 'logtype': 'n'},
 {'query': 'chr1_163616710_163617510', 'logtype': 'n'},
 {'query': 'chr1_163635423_163635923', 'logtype': 'n'},
 {'query': 'chr1_164128263_164128813', 'logtype': 'n'},
 {'query': 'chr1_164601863_164602563', 'logtype': 'n'},
 {'query': 'chr1_164683263_164683663', 'logtype': 'n'},
 {'query': 'chr1_165069563_165070413', 'logtype': 'n'},
 {'query': 'chr1_16179105_16179655', 'logtype': 'n'},
 {'query': 'chr1_165092513_165093413', 'logtype': 'n'},
 {'query': 'chr1_1724161_1724661', 'logtype': 'n'},
 {'query': 'chr1_165615863_165616863', 'logtype': 'n'},
 {'query': 'chr1_165629913_165630363', 'logtype': 'n'},
 {'query': 'chr1_165630613_165631163', 'logtype': 'n'},
 {'query': 'chr1_16237005_16237405', 'logtype': 'n'},
 {'query': 'chr1_165698263_165698613', 'logtype': 'n'},
 {'query': 'chr1_16248305_16249305', 'logtype': 'n'},
 {'query': 'chr1_166609613_166610213', 'logtype': 'n'},
 {'query': 'chr1_16334455_16335155', 'logtype': 'n'},
 {'query': 'chr1_16349655_16350305', 'logtype': 'n'},
 {'query': 'chr1_167125363_167126063', 'logtype': 'n'},
 {'query': 'chr1_167162913_167163363', 'logtype': 'n'},
 {'query': 'chr1_167188913_167189713', 'logtype': 'n'},
 {'query': 'chr1_167191363_167191913', 'logtype': 'n'},
 {'query': 'chr1_167544363_167545013', 'logtype': 'n'},
 {'query': 'chr1_167617313_167617863', 'logtype': 'n'},
 {'query': 'chr1_167644963_167645563', 'logtype': 'n'},
 {'query': 'chr1_167714363_167714763', 'logtype': 'n'},
 {'query': 'chr1_167749713_167750313', 'logtype': 'n'},
 {'query': 'chr1_167796863_167797563', 'logtype': 'n'},
 {'query': 'chr1_167854162_167854762', 'logtype': 'n'},
 {'query': 'chr1_167876512_167876912', 'logtype': 'n'},
 {'query': 'chr1_167910962_167911962', 'logtype': 'n'},
 {'query': 'chr1_167935912_167936712', 'logtype': 'n'},
 {'query': 'chr1_168137412_168137812', 'logtype': 'n'},
 {'query': 'chr1_168178512_168179062', 'logtype': 'n'},
 {'query': 'chr1_16513405_16514555', 'logtype': 'n'},
 {'query': 'chr1_168491762_168492362', 'logtype': 'n'},
 {'query': 'chr1_168556612_168557012', 'logtype': 'n'},
 {'query': 'chr1_168560212_168560962', 'logtype': 'n'},
 {'query': 'chr1_168635162_168635862', 'logtype': 'n'},
 {'query': 'chr1_168639662_168640312', 'logtype': 'n'},
 {'query': 'chr1_168693062_168693912', 'logtype': 'n'},
 {'query': 'chr1_168752012_168752512', 'logtype': 'n'},
 {'query': 'chr1_168759012_168759612', 'logtype': 'n'},
 {'query': 'chr1_168863612_168864212', 'logtype': 'n'},
 {'query': 'chr1_168884612_168885062', 'logtype': 'n'},
 {'query': 'chr1_168906812_168907562', 'logtype': 'n'},
 {'query': 'chr1_168920162_168921162', 'logtype': 'n'},
 {'query': 'chr1_169161012_169161562', 'logtype': 'n'},
 {'query': 'chr1_169185462_169186112', 'logtype': 'n'},
 {'query': 'chr1_169250762_169251262', 'logtype': 'n'},
 {'query': 'chr1_169367662_169368312', 'logtype': 'n'},
 {'query': 'chr1_169443912_169444412', 'logtype': 'n'},
 {'query': 'chr1_169485562_169486562', 'logtype': 'n'},
 {'query': 'chr1_169508812_169509812', 'logtype': 'n'},
 {'query': 'chr1_169510562_169511262', 'logtype': 'n'},
 {'query': 'chr1_169514712_169515462', 'logtype': 'n'},
 {'query': 'chr1_169529212_169529812', 'logtype': 'n'},
 {'query': 'chr1_169548212_169548762', 'logtype': 'n'},
 {'query': 'chr1_169565712_169566112', 'logtype': 'n'},
 {'query': 'chr1_169568312_169569012', 'logtype': 'n'},
 {'query': 'chr1_169569912_169570512', 'logtype': 'n'},
 {'query': 'chr1_169572012_169572762', 'logtype': 'n'},
 {'query': 'chr1_169574262_169574962', 'logtype': 'n'},
 {'query': 'chr1_169685709_169686109', 'logtype': 'n'},
 {'query': 'chr1_169752909_169753509', 'logtype': 'n'},
 {'query': 'chr1_169849409_169849859', 'logtype': 'n'},
 {'query': 'chr1_169891159_169891909', 'logtype': 'n'},
 {'query': 'chr1_169893809_169894309', 'logtype': 'n'},
 {'query': 'chr1_169942159_169943059', 'logtype': 'n'},
 {'query': 'chr1_170074559_170074859', 'logtype': 'n'},
 {'query': 'chr1_170097359_170098159', 'logtype': 'n'},
 {'query': 'chr1_170225509_170226159', 'logtype': 'n'},
 {'query': 'chr1_170886509_170887009', 'logtype': 'n'},
 {'query': 'chr1_170934359_170934859', 'logtype': 'n'},
 {'query': 'chr1_171141611_171141961', 'logtype': 'n'},
 {'query': 'chr1_171142061_171142611', 'logtype': 'n'},
 {'query': 'chr1_171210211_171210861', 'logtype': 'n'},
 {'query': 'chr1_171219011_171219711', 'logtype': 'n'},
 {'query': 'chr1_171250811_171251461', 'logtype': 'n'},
 {'query': 'chr1_171343861_171344811', 'logtype': 'n'},
 {'query': 'chr1_171353261_171354011', 'logtype': 'n'},
 {'query': 'chr1_171418461_171419061', 'logtype': 'n'},
 {'query': 'chr1_171485261_171485661', 'logtype': 'n'},
 {'query': 'chr1_171566211_171566811', 'logtype': 'n'},
 {'query': 'chr1_171645710_171646310', 'logtype': 'n'},
 {'query': 'chr1_171663160_171664060', 'logtype': 'n'},
 {'query': 'chr1_171781110_171781760', 'logtype': 'n'},
 {'query': 'chr1_172398160_172398610', 'logtype': 'n'},
 {'query': 'chr1_172466460_172467010', 'logtype': 'n'},
 {'query': 'chr1_172469910_172470660', 'logtype': 'n'},
 {'query': 'chr1_172473860_172474210', 'logtype': 'n'},
 {'query': 'chr1_172532410_172533360', 'logtype': 'n'},
 {'query': 'chr1_172746160_172747110', 'logtype': 'n'},
 {'query': 'chr1_16948355_16949105', 'logtype': 'n'},
 {'query': 'chr1_172976310_172976960', 'logtype': 'n'},
 {'query': 'chr1_173122961_173123411', 'logtype': 'n'},
 {'query': 'chr1_173573511_173574061', 'logtype': 'n'},
 {'query': 'chr1_173867912_173869362', 'logtype': 'n'},
 {'query': 'chr1_174114062_174114612', 'logtype': 'n'},
 {'query': 'chr1_174426512_174426912', 'logtype': 'n'},
 {'query': 'chr1_174475262_174475862', 'logtype': 'n'},
 {'query': 'chr1_175072464_175073014', 'logtype': 'n'},
 {'query': 'chr1_175169214_175169764', 'logtype': 'n'},
 {'query': 'chr1_175232164_175233064', 'logtype': 'n'},
 {'query': 'chr1_175470964_175471614', 'logtype': 'n'},
 {'query': 'chr1_175590764_175591164', 'logtype': 'n'},
 {'query': 'chr1_176207214_176207464', 'logtype': 'n'},
 {'query': 'chr1_17297905_17298505', 'logtype': 'n'},
 {'query': 'chr1_176567164_176568014', 'logtype': 'n'},
 {'query': 'chr1_176593014_176594014', 'logtype': 'n'},
 {'query': 'chr1_176743964_176744514', 'logtype': 'n'},
 {'query': 'chr1_176761064_176761714', 'logtype': 'n'},
 {'query': 'chr1_176813264_176814114', 'logtype': 'n'},
 {'query': 'chr1_177444914_177445764', 'logtype': 'n'},
 {'query': 'chr1_177585365_177586065', 'logtype': 'n'},
 {'query': 'chr1_177701265_177702115', 'logtype': 'n'},
 {'query': 'chr1_177872215_177873315', 'logtype': 'n'},
 {'query': 'chr1_177898015_177898665', 'logtype': 'n'},
 {'query': 'chr1_177912865_177913915', 'logtype': 'n'},
 {'query': 'chr1_178147265_178147915', 'logtype': 'n'},
 {'query': 'chr1_178337065_178337865', 'logtype': 'n'},
 {'query': 'chr1_17531654_17532355', 'logtype': 'n'},
 {'query': 'chr1_178727165_178727815', 'logtype': 'n'},
 {'query': 'chr1_178931815_178932665', 'logtype': 'n'},
 {'query': 'chr1_178951515_178952015', 'logtype': 'n'},
 {'query': 'chr1_178953015_178953365', 'logtype': 'n'},
 {'query': 'chr1_179264465_179265165', 'logtype': 'n'},
 {'query': 'chr1_179279615_179279915', 'logtype': 'n'},
 {'query': 'chr1_179287815_179288465', 'logtype': 'n'},
 {'query': 'chr1_179293365_179293965', 'logtype': 'n'},
 {'query': 'chr1_179303065_179303715', 'logtype': 'n'},
 {'query': 'chr1_179350415_179350765', 'logtype': 'n'},
 {'query': 'chr1_179365715_179366015', 'logtype': 'n'},
 {'query': 'chr1_179532065_179532615', 'logtype': 'n'},
 {'query': 'chr1_179585815_179586915', 'logtype': 'n'},
 {'query': 'chr1_179717915_179718515', 'logtype': 'n'},
 {'query': 'chr1_179930365_179931415', 'logtype': 'n'},
 {'query': 'chr1_179935365_179935665', 'logtype': 'n'},
 {'query': 'chr1_179969865_179970415', 'logtype': 'n'},
 {'query': 'chr1_180073565_180074665', 'logtype': 'n'},
 {'query': 'chr1_180126565_180127165', 'logtype': 'n'},
 {'query': 'chr1_180157465_180158165', 'logtype': 'n'},
 {'query': 'chr1_180528414_180529464', 'logtype': 'n'},
 {'query': 'chr1_180560364_180561064', 'logtype': 'n'},
 {'query': 'chr1_180593364_180593814', 'logtype': 'n'},
 {'query': 'chr1_180630914_180631564', 'logtype': 'n'},
 {'query': 'chr1_180631614_180632164', 'logtype': 'n'},
 {'query': 'chr1_181250864_181251614', 'logtype': 'n'},
 {'query': 'chr1_181259014_181259664', 'logtype': 'n'},
 {'query': 'chr1_182029265_182029765', 'logtype': 'n'},
 {'query': 'chr1_182083665_182084315', 'logtype': 'n'},
 {'query': 'chr1_182144015_182144715', 'logtype': 'n'},
 {'query': 'chr1_182217815_182218465', 'logtype': 'n'},
 {'query': 'chr1_182227865_182228665', 'logtype': 'n'},
 {'query': 'chr1_182389465_182390065', 'logtype': 'n'},
 {'query': 'chr1_182391315_182392365', 'logtype': 'n'},
 {'query': 'chr1_17911756_17912306', 'logtype': 'n'},
 {'query': 'chr1_182702815_182703315', 'logtype': 'n'},
 {'query': 'chr1_182707015_182707615', 'logtype': 'n'},
 {'query': 'chr1_182969065_182969765', 'logtype': 'n'},
 {'query': 'chr1_183022265_183022765', 'logtype': 'n'},
 {'query': 'chr1_183052715_183053365', 'logtype': 'n'},
 {'query': 'chr1_183088815_183089615', 'logtype': 'n'},
 {'query': 'chr1_183228615_183229265', 'logtype': 'n'},
 {'query': 'chr1_183471815_183472515', 'logtype': 'n'},
 {'query': 'chr1_183635465_183635965', 'logtype': 'n'},
 {'query': 'chr1_183684865_183685315', 'logtype': 'n'},
 {'query': 'chr1_18041006_18041606', 'logtype': 'n'},
 {'query': 'chr1_183719315_183719715', 'logtype': 'n'},
 {'query': 'chr1_183952866_183953516', 'logtype': 'n'},
 {'query': 'chr1_184074916_184075616', 'logtype': 'n'},
 {'query': 'chr1_184078616_184079616', 'logtype': 'n'},
 {'query': 'chr1_184080366_184081116', 'logtype': 'n'},
 {'query': 'chr1_184191266_184191716', 'logtype': 'n'},
 {'query': 'chr1_184350816_184351566', 'logtype': 'n'},
 {'query': 'chr1_184453266_184454016', 'logtype': 'n'},
 {'query': 'chr1_184465866_184466266', 'logtype': 'n'},
 {'query': 'chr1_184482966_184483966', 'logtype': 'n'},
 {'query': 'chr1_184503766_184504616', 'logtype': 'n'},
 {'query': 'chr1_184541366_184542066', 'logtype': 'n'},
 {'query': 'chr1_184543266_184543716', 'logtype': 'n'},
 {'query': 'chr1_184590116_184590866', 'logtype': 'n'},
 {'query': 'chr1_184606716_184607316', 'logtype': 'n'},
 {'query': 'chr1_184612116_184612566', 'logtype': 'n'},
 {'query': 'chr1_184629666_184630416', 'logtype': 'n'},
 {'query': 'chr1_184632666_184633316', 'logtype': 'n'},
 {'query': 'chr1_184650416_184651066', 'logtype': 'n'},
 {'query': 'chr1_184705166_184705866', 'logtype': 'n'},
 {'query': 'chr1_184757666_184758516', 'logtype': 'n'},
 {'query': 'chr1_184790666_184791516', 'logtype': 'n'},
 {'query': 'chr1_184801416_184802016', 'logtype': 'n'},
 {'query': 'chr1_184802866_184803616', 'logtype': 'n'},
 {'query': 'chr1_18153206_18153756', 'logtype': 'n'},
 {'query': 'chr1_184864016_184864666', 'logtype': 'n'},
 {'query': 'chr1_184929718_184930918', 'logtype': 'n'},
 {'query': 'chr1_185057218_185057818', 'logtype': 'n'},
 {'query': 'chr1_18190256_18190956', 'logtype': 'n'},
 {'query': 'chr1_18201806_18202456', 'logtype': 'n'},
 {'query': 'chr1_185534568_185535568', 'logtype': 'n'},
 {'query': 'chr1_185555668_185556268', 'logtype': 'n'},
 {'query': 'chr1_185567018_185567318', 'logtype': 'n'},
 {'query': 'chr1_185696618_185697468', 'logtype': 'n'},
 {'query': 'chr1_185705618_185706418', 'logtype': 'n'},
 {'query': 'chr1_186492318_186493218', 'logtype': 'n'},
 {'query': 'chr1_186521418_186522418', 'logtype': 'n'},
 {'query': 'chr1_186566268_186567168', 'logtype': 'n'},
 {'query': 'chr1_186567968_186568868', 'logtype': 'n'},
 {'query': 'chr1_186997468_186998318', 'logtype': 'n'},
 {'query': 'chr1_187209568_187210018', 'logtype': 'n'},
 {'query': 'chr1_187306818_187307568', 'logtype': 'n'},
 {'query': 'chr1_187321768_187322468', 'logtype': 'n'},
 {'query': 'chr1_187358368_187358768', 'logtype': 'n'},
 {'query': 'chr1_187449518_187450018', 'logtype': 'n'},
 {'query': 'chr1_187465368_187465818', 'logtype': 'n'},
 {'query': 'chr1_187477068_187477968', 'logtype': 'n'},
 {'query': 'chr1_187626068_187626768', 'logtype': 'n'},
 {'query': 'chr1_187650118_187650568', 'logtype': 'n'},
 {'query': 'chr1_187692768_187693318', 'logtype': 'n'},
 {'query': 'chr1_18440356_18441106', 'logtype': 'n'},
 {'query': 'chr1_187753619_187754269', 'logtype': 'n'},
 {'query': 'chr1_187759819_187760719', 'logtype': 'n'},
 {'query': 'chr1_187771869_187772469', 'logtype': 'n'},
 {'query': 'chr1_187782019_187782569', 'logtype': 'n'},
 {'query': 'chr1_18464156_18465206', 'logtype': 'n'},
 {'query': 'chr1_188073369_188073819', 'logtype': 'n'},
 {'query': 'chr1_18480106_18480656', 'logtype': 'n'},
 {'query': 'chr1_188169619_188170869', 'logtype': 'n'},
 {'query': 'chr1_188432469_188432969', 'logtype': 'n'},
 {'query': 'chr1_188546619_188547269', 'logtype': 'n'},
 {'query': 'chr1_188548069_188548669', 'logtype': 'n'},
 {'query': 'chr1_188682319_188682869', 'logtype': 'n'},
 {'query': 'chr1_188779369_188779919', 'logtype': 'n'},
 {'query': 'chr1_190022070_190022720', 'logtype': 'n'},
 {'query': 'chr1_190451920_190452720', 'logtype': 'n'},
 {'query': 'chr1_190453470_190453970', 'logtype': 'n'},
 {'query': 'chr1_190478520_190479020', 'logtype': 'n'},
 {'query': 'chr1_190488020_190488570', 'logtype': 'n'},
 {'query': 'chr1_190587870_190588670', 'logtype': 'n'},
 {'query': 'chr1_191767420_191768120', 'logtype': 'n'},
 {'query': 'chr1_18902456_18903856', 'logtype': 'n'},
 {'query': 'chr1_192631620_192632170', 'logtype': 'n'},
 {'query': 'chr1_192690670_192691820', 'logtype': 'n'},
 {'query': 'chr1_192749470_192749870', 'logtype': 'n'},
 {'query': 'chr1_192808670_192809020', 'logtype': 'n'},
 {'query': 'chr1_192844120_192845020', 'logtype': 'n'},
 {'query': 'chr1_192854370_192854920', 'logtype': 'n'},
 {'query': 'chr1_192861420_192862570', 'logtype': 'n'},
 {'query': 'chr1_193108320_193109470', 'logtype': 'n'},
 {'query': 'chr1_193121520_193122270', 'logtype': 'n'},
 {'query': 'chr1_193269570_193270170', 'logtype': 'n'},
 {'query': 'chr1_193306420_193306970', 'logtype': 'n'},
 {'query': 'chr1_193310470_193311020', 'logtype': 'n'},
 {'query': 'chr1_19011056_19011456', 'logtype': 'n'},
 {'query': 'chr1_193494420_193495220', 'logtype': 'n'},
 {'query': 'chr1_193762020_193762620', 'logtype': 'n'},
 {'query': 'chr1_193854820_193855370', 'logtype': 'n'},
 {'query': 'chr1_19066156_19066806', 'logtype': 'n'},
 {'query': 'chr1_19074956_19075456', 'logtype': 'n'},
 {'query': 'chr1_19251456_19251906', 'logtype': 'n'},
 {'query': 'chr1_195935070_195935620', 'logtype': 'n'},
 {'query': 'chr1_19312006_19312456', 'logtype': 'n'},
 {'query': 'chr1_19354256_19355006', 'logtype': 'n'},
 {'query': 'chr1_197042870_197043420', 'logtype': 'n'},
 {'query': 'chr1_197383570_197384070', 'logtype': 'n'},
 {'query': 'chr1_19412506_19413106', 'logtype': 'n'},
 {'query': 'chr1_19424756_19425306', 'logtype': 'n'},
 {'query': 'chr1_19426956_19427906', 'logtype': 'n'},
 {'query': 'chr1_197620670_197621120', 'logtype': 'n'},
 {'query': 'chr1_19433156_19434056', 'logtype': 'n'},
 {'query': 'chr1_19436606_19437206', 'logtype': 'n'},
 {'query': 'chr1_19444306_19444806', 'logtype': 'n'},
 {'query': 'chr1_197783270_197784120', 'logtype': 'n'},
 {'query': 'chr1_19452156_19452656', 'logtype': 'n'},
 {'query': 'chr1_197865520_197866370', 'logtype': 'n'},
 {'query': 'chr1_19458856_19459506', 'logtype': 'n'},
 {'query': 'chr1_197902570_197903020', 'logtype': 'n'},
 {'query': 'chr1_19485306_19486156', 'logtype': 'n'},
 {'query': 'chr1_19504606_19505556', 'logtype': 'n'},
 {'query': 'chr1_19514306_19515106', 'logtype': 'n'},
 {'query': 'chr1_198576070_198576670', 'logtype': 'n'},
 {'query': 'chr1_198656421_198657121', 'logtype': 'n'},
 {'query': 'chr1_198657571_198658071', 'logtype': 'n'},
 {'query': 'chr1_19547706_19548306', 'logtype': 'n'},
 {'query': 'chr1_198837271_198838221', 'logtype': 'n'},
 {'query': 'chr1_19561206_19561606', 'logtype': 'n'},
 {'query': 'chr1_199065771_199066171', 'logtype': 'n'},
 {'query': 'chr1_19607156_19607806', 'logtype': 'n'},
 {'query': 'chr1_199581622_199582272', 'logtype': 'n'},
 {'query': 'chr1_199774722_199775222', 'logtype': 'n'},
 {'query': 'chr1_19703707_19704207', 'logtype': 'n'},
 {'query': 'chr1_200477622_200478272', 'logtype': 'n'},
 {'query': 'chr1_200669272_200670272', 'logtype': 'n'},
 {'query': 'chr1_19754307_19755007', 'logtype': 'n'},
 {'query': 'chr1_200992622_200993372', 'logtype': 'n'},
 {'query': 'chr1_19770357_19770957', 'logtype': 'n'},
 {'query': 'chr1_19776157_19776857', 'logtype': 'n'},
 {'query': 'chr1_201082222_201082822', 'logtype': 'n'},
 {'query': 'chr1_201170772_201171172', 'logtype': 'n'},
 {'query': 'chr1_201173672_201174172', 'logtype': 'n'},
 {'query': 'chr1_201266272_201267172', 'logtype': 'n'},
 {'query': 'chr1_201281122_201282772', 'logtype': 'n'},
 {'query': 'chr1_201309222_201310472', 'logtype': 'n'},
 {'query': 'chr1_19815107_19815657', 'logtype': 'n'},
 {'query': 'chr1_201460922_201461522', 'logtype': 'n'},
 {'query': 'chr1_201495772_201496372', 'logtype': 'n'},
 {'query': 'chr1_201565022_201565622', 'logtype': 'n'},
 {'query': 'chr1_201604672_201605422', 'logtype': 'n'},
 {'query': 'chr1_201650272_201650722', 'logtype': 'n'},
 {'query': 'chr1_2084961_2085561', 'logtype': 'n'},
 {'query': 'chr1_201696172_201696822', 'logtype': 'n'},
 {'query': 'chr1_201713372_201713872', 'logtype': 'n'},
 {'query': 'chr1_201779672_201780072', 'logtype': 'n'},
 {'query': 'chr1_202008122_202008522', 'logtype': 'n'},
 {'query': 'chr1_202010172_202010772', 'logtype': 'n'},
 {'query': 'chr1_19872207_19872707', 'logtype': 'n'},
 {'query': 'chr1_202018422_202019222', 'logtype': 'n'},
 {'query': 'chr1_202034722_202035522', 'logtype': 'n'},
 {'query': 'chr1_202046122_202046822', 'logtype': 'n'},
 {'query': 'chr1_202056872_202057372', 'logtype': 'n'},
 {'query': 'chr1_202462722_202463072', 'logtype': 'n'},
 {'query': 'chr1_202810522_202811072', 'logtype': 'n'},
 {'query': 'chr1_202860572_202861172', 'logtype': 'n'},
 {'query': 'chr1_202919572_202920072', 'logtype': 'n'},
 {'query': 'chr1_203162872_203163372', 'logtype': 'n'},
 {'query': 'chr1_203239222_203239822', 'logtype': 'n'},
 {'query': 'chr1_203274872_203275422', 'logtype': 'n'},
 {'query': 'chr1_203288472_203288972', 'logtype': 'n'},
 {'query': 'chr1_203305322_203305772', 'logtype': 'n'},
 {'query': 'chr1_203322072_203322622', 'logtype': 'n'},
 {'query': 'chr1_203397122_203397772', 'logtype': 'n'},
 {'query': 'chr1_203402722_203403322', 'logtype': 'n'},
 {'query': 'chr1_203410372_203410972', 'logtype': 'n'},
 {'query': 'chr1_203428972_203429722', 'logtype': 'n'},
 {'query': 'chr1_203434572_203435022', 'logtype': 'n'},
 {'query': 'chr1_203465022_203465722', 'logtype': 'n'},
 {'query': 'chr1_203538022_203538472', 'logtype': 'n'},
 {'query': 'chr1_20032057_20033207', 'logtype': 'n'},
 {'query': 'chr1_203721272_203721872', 'logtype': 'n'},
 {'query': 'chr1_203860322_203860822', 'logtype': 'n'},
 {'query': 'chr1_203861272_203861922', 'logtype': 'n'},
 {'query': 'chr1_203929772_203930272', 'logtype': 'n'},
 {'query': 'chr1_203976022_203976822', 'logtype': 'n'},
 {'query': 'chr1_204088672_204089572', 'logtype': 'n'},
 {'query': 'chr1_204126372_204126822', 'logtype': 'n'},
 {'query': 'chr1_20102857_20103257', 'logtype': 'n'},
 {'query': 'chr1_204378772_204379472', 'logtype': 'n'},
 {'query': 'chr1_204411622_204412172', 'logtype': 'n'},
 {'query': 'chr1_204506572_204507372', 'logtype': 'n'},
 {'query': 'chr1_204821422_204821972', 'logtype': 'n'},
 {'query': 'chr1_20172107_20172707', 'logtype': 'n'},
 {'query': 'chr1_205121922_205122522', 'logtype': 'n'},
 {'query': 'chr1_205319572_205319972', 'logtype': 'n'},
 {'query': 'chr1_205365972_205366422', 'logtype': 'n'},
 {'query': 'chr1_205369622_205370072', 'logtype': 'n'},
 {'query': 'chr1_205370822_205371222', 'logtype': 'n'},
 {'query': 'chr1_20212907_20213357', 'logtype': 'n'},
 {'query': 'chr1_205477772_205478522', 'logtype': 'n'},
 {'query': 'chr1_205543272_205543872', 'logtype': 'n'},
 {'query': 'chr1_205563722_205564372', 'logtype': 'n'},
 {'query': 'chr1_205610572_205611672', 'logtype': 'n'},
 {'query': 'chr1_205619322_205619922', 'logtype': 'n'},
 {'query': 'chr1_205631772_205632222', 'logtype': 'n'},
 {'query': 'chr1_205633072_205633722', 'logtype': 'n'},
 {'query': 'chr1_205702822_205703622', 'logtype': 'n'},
 {'query': 'chr1_205710022_205711022', 'logtype': 'n'},
 {'query': 'chr1_205748972_205749822', 'logtype': 'n'},
 {'query': 'chr1_205824922_205825572', 'logtype': 'n'},
 {'query': 'chr1_20269257_20269707', 'logtype': 'n'},
 {'query': 'chr1_206122080_206123180', 'logtype': 'n'},
 {'query': 'chr1_206112780_206113430', 'logtype': 'n'},
 {'query': 'chr1_20341107_20342207', 'logtype': 'n'},
 {'query': 'chr1_206540271_206540971', 'logtype': 'n'},
 {'query': 'chr1_206550372_206550922', 'logtype': 'n'},
 {'query': 'chr1_206586668_206587318', 'logtype': 'n'},
 {'query': 'chr1_206595251_206596101', 'logtype': 'n'},
 {'query': 'chr1_206612197_206612747', 'logtype': 'n'},
 {'query': 'chr1_20356657_20357357', 'logtype': 'n'},
 {'query': 'chr1_20359657_20360107', 'logtype': 'n'},
 {'query': 'chr1_206730805_206731255', 'logtype': 'n'},
 {'query': 'chr1_206998855_206999555', 'logtype': 'n'},
 {'query': 'chr1_207004105_207005405', 'logtype': 'n'},
 {'query': 'chr1_207307105_207307555', 'logtype': 'n'},
 {'query': 'chr1_207316155_207317055', 'logtype': 'n'},
 {'query': 'chr1_207322605_207323205', 'logtype': 'n'},
 {'query': 'chr1_207323355_207323855', 'logtype': 'n'},
 {'query': 'chr1_207750855_207752105', 'logtype': 'n'},
 {'query': 'chr1_207794355_207795255', 'logtype': 'n'},
 {'query': 'chr1_207811955_207812505', 'logtype': 'n'},
 {'query': 'chr1_207826255_207827055', 'logtype': 'n'},
 {'query': 'chr1_207848205_207848705', 'logtype': 'n'},
 {'query': 'chr1_207866755_207867305', 'logtype': 'n'},
 {'query': 'chr1_207950605_207951255', 'logtype': 'n'},
 {'query': 'chr1_207963355_207964255', 'logtype': 'n'},
 {'query': 'chr1_208036505_208037005', 'logtype': 'n'},
 {'query': 'chr1_208055505_208056155', 'logtype': 'n'},
 {'query': 'chr1_208298455_208299355', 'logtype': 'n'},
 {'query': 'chr1_20538557_20539257', 'logtype': 'n'},
 {'query': 'chr1_209371705_209372205', 'logtype': 'n'},
 {'query': 'chr1_209527355_209527805', 'logtype': 'n'},
 {'query': 'chr1_209652955_209653555', 'logtype': 'n'},
 {'query': 'chr1_209744955_209745505', 'logtype': 'n'},
 {'query': 'chr1_209787505_209788205', 'logtype': 'n'},
 {'query': 'chr1_209801955_209802605', 'logtype': 'n'},
 {'query': 'chr1_209823705_209824305', 'logtype': 'n'},
 {'query': 'chr1_209827705_209828155', 'logtype': 'n'},
 {'query': 'chr1_210384656_210385006', 'logtype': 'n'},
 {'query': 'chr1_210419256_210419906', 'logtype': 'n'},
 {'query': 'chr1_210523806_210524506', 'logtype': 'n'},
 {'query': 'chr1_210916058_210916458', 'logtype': 'n'},
 {'query': 'chr1_211179908_211180758', 'logtype': 'n'},
 {'query': 'chr1_211200208_211200808', 'logtype': 'n'},
 {'query': 'chr1_211222708_211223008', 'logtype': 'n'},
 {'query': 'chr1_211511858_211512408', 'logtype': 'n'},
 {'query': 'chr1_211602208_211602758', 'logtype': 'n'},
 {'query': 'chr1_211734758_211735258', 'logtype': 'n'},
 {'query': 'chr1_2189411_2190261', 'logtype': 'n'},
 {'query': 'chr1_211947558_211948158', 'logtype': 'n'},
 {'query': 'chr1_212004758_212005408', 'logtype': 'n'},
 {'query': 'chr1_212201758_212202158', 'logtype': 'n'},
 {'query': 'chr1_212228458_212229458', 'logtype': 'n'},
 {'query': 'chr1_212558708_212559358', 'logtype': 'n'},
 {'query': 'chr1_20961207_20961707', 'logtype': 'n'},
 {'query': 'chr1_212791658_212792058', 'logtype': 'n'},
 {'query': 'chr1_20983307_20983757', 'logtype': 'n'},
 {'query': 'chr1_213099608_213100458', 'logtype': 'n'},
 {'query': 'chr1_213659507_213660057', 'logtype': 'n'},
 {'query': 'chr1_213741307_213741957', 'logtype': 'n'},
 {'query': 'chr1_214228907_214229457', 'logtype': 'n'},
 {'query': 'chr1_214251257_214251757', 'logtype': 'n'},
 {'query': 'chr1_214439357_214440057', 'logtype': 'n'},
 {'query': 'chr1_214573357_214573957', 'logtype': 'n'},
 {'query': 'chr1_214583057_214583507', 'logtype': 'n'},
 {'query': 'chr1_214583757_214584507', 'logtype': 'n'},
 {'query': 'chr1_214820457_214820957', 'logtype': 'n'},
 {'query': 'chr1_215115457_215115807', 'logtype': 'n'},
 {'query': 'chr1_215590658_215591258', 'logtype': 'n'},
 {'query': 'chr1_21267807_21268407', 'logtype': 'n'},
 {'query': 'chr1_216327208_216327708', 'logtype': 'n'},
 {'query': 'chr1_21338057_21339157', 'logtype': 'n'},
 {'query': 'chr1_216528558_216529408', 'logtype': 'n'},
 {'query': 'chr1_216766858_216767358', 'logtype': 'n'},
 {'query': 'chr1_216816158_216816658', 'logtype': 'n'},
 {'query': 'chr1_216902458_216903358', 'logtype': 'n'},
 {'query': 'chr1_216960808_216961308', 'logtype': 'n'},
 {'query': 'chr1_217005258_217005808', 'logtype': 'n'},
 {'query': 'chr1_217029208_217029758', 'logtype': 'n'},
 {'query': 'chr1_217076458_217077058', 'logtype': 'n'},
 {'query': 'chr1_217078158_217078458', 'logtype': 'n'},
 {'query': 'chr1_217228558_217229158', 'logtype': 'n'},
 {'query': 'chr1_217348908_217349508', 'logtype': 'n'},
 {'query': 'chr1_217523208_217523658', 'logtype': 'n'},
 {'query': 'chr1_217525858_217526708', 'logtype': 'n'},
 {'query': 'chr1_217539408_217539958', 'logtype': 'n'},
 {'query': 'chr1_217574408_217575108', 'logtype': 'n'},
 {'query': 'chr1_217595708_217596058', 'logtype': 'n'},
 {'query': 'chr1_217630958_217631508', 'logtype': 'n'},
 {'query': 'chr1_218285058_218285458', 'logtype': 'n'},
 {'query': 'chr1_2255161_2256361', 'logtype': 'n'},
 {'query': 'chr1_21539907_21540407', 'logtype': 'n'},
 {'query': 'chr1_218537608_218538708', 'logtype': 'n'},
 {'query': 'chr1_218570458_218571008', 'logtype': 'n'},
 {'query': 'chr1_218571258_218572008', 'logtype': 'n'},
 {'query': 'chr1_218620908_218621458', 'logtype': 'n'},
 {'query': 'chr1_218624608_218625108', 'logtype': 'n'},
 {'query': 'chr1_218650358_218651258', 'logtype': 'n'},
 {'query': 'chr1_218817258_218817808', 'logtype': 'n'},
 {'query': 'chr1_218828058_218828608', 'logtype': 'n'},
 {'query': 'chr1_219126158_219126808', 'logtype': 'n'},
 {'query': 'chr1_219161058_219162008', 'logtype': 'n'},
 {'query': 'chr1_219177858_219178458', 'logtype': 'n'},
 {'query': 'chr1_219279208_219280008', 'logtype': 'n'},
 {'query': 'chr1_219310008_219310908', 'logtype': 'n'},
 {'query': 'chr1_21625407_21626057', 'logtype': 'n'},
 {'query': 'chr1_21633907_21635007', 'logtype': 'n'},
 {'query': 'chr1_219468408_219468958', 'logtype': 'n'},
 {'query': 'chr1_219506608_219507008', 'logtype': 'n'},
 {'query': 'chr1_219521208_219521908', 'logtype': 'n'},
 {'query': 'chr1_21676257_21676807', 'logtype': 'n'},
 {'query': 'chr1_219910508_219911158', 'logtype': 'n'},
 {'query': 'chr1_219958908_219959508', 'logtype': 'n'},
 {'query': 'chr1_219972808_219973108', 'logtype': 'n'},
 {'query': 'chr1_220089658_220090058', 'logtype': 'n'},
 {'query': 'chr1_21760957_21761507', 'logtype': 'n'},
 {'query': 'chr1_220734308_220735008', 'logtype': 'n'},
 {'query': 'chr1_220786208_220787158', 'logtype': 'n'},
 {'query': 'chr1_220812158_220812808', 'logtype': 'n'},
 {'query': 'chr1_220815358_220815808', 'logtype': 'n'},
 {'query': 'chr1_21782957_21783857', 'logtype': 'n'},
 {'query': 'chr1_221203858_221204658', 'logtype': 'n'},
 {'query': 'chr1_221307308_221307708', 'logtype': 'n'},
 {'query': 'chr1_221393758_221394708', 'logtype': 'n'},
 {'query': 'chr1_221742058_221742908', 'logtype': 'n'},
 {'query': 'chr1_221845808_221846558', 'logtype': 'n'},
 {'query': 'chr1_222006458_222007158', 'logtype': 'n'},
 {'query': 'chr1_222010108_222010808', 'logtype': 'n'},
 {'query': 'chr1_222464308_222465008', 'logtype': 'n'},
 {'query': 'chr1_222465508_222465908', 'logtype': 'n'},
 {'query': 'chr1_21944207_21944857', 'logtype': 'n'},
 {'query': 'chr1_222611158_222611658', 'logtype': 'n'},
 {'query': 'chr1_222622658_222623458', 'logtype': 'n'},
 {'query': 'chr1_21956607_21957757', 'logtype': 'n'},
 {'query': 'chr1_222784808_222785358', 'logtype': 'n'},
 {'query': 'chr1_222805208_222805658', 'logtype': 'n'},
 {'query': 'chr1_222829808_222830358', 'logtype': 'n'},
 {'query': 'chr1_222897608_222898558', 'logtype': 'n'},
 {'query': 'chr1_222946208_222947108', 'logtype': 'n'},
 {'query': 'chr1_222948158_222948758', 'logtype': 'n'},
 {'query': 'chr1_223007208_223007758', 'logtype': 'n'},
 {'query': 'chr1_223518458_223519158', 'logtype': 'n'},
 {'query': 'chr1_22052407_22052907', 'logtype': 'n'},
 {'query': 'chr1_223622998_223623548', 'logtype': 'n'},
 {'query': 'chr1_223734348_223735048', 'logtype': 'n'},
 {'query': 'chr1_223846048_223846448', 'logtype': 'n'},
 {'query': 'chr1_223886448_223887048', 'logtype': 'n'},
 {'query': 'chr1_224063698_224064148', 'logtype': 'n'},
 {'query': 'chr1_224113048_224113498', 'logtype': 'n'},
 {'query': 'chr1_224139098_224139698', 'logtype': 'n'},
 {'query': 'chr1_224142648_224143448', 'logtype': 'n'},
 {'query': 'chr1_224173398_224174048', 'logtype': 'n'},
 {'query': 'chr1_224199598_224200048', 'logtype': 'n'},
 {'query': 'chr1_224211098_224211448', 'logtype': 'n'},
 {'query': 'chr1_224356698_224357048', 'logtype': 'n'},
 {'query': 'chr1_224502898_224503998', 'logtype': 'n'},
 {'query': 'chr1_224929548_224929898', 'logtype': 'n'},
 {'query': 'chr1_22205007_22205657', 'logtype': 'n'},
 {'query': 'chr1_22257257_22258257', 'logtype': 'n'},
 {'query': 'chr1_22259807_22260307', 'logtype': 'n'},
 {'query': 'chr1_225694048_225694698', 'logtype': 'n'},
 {'query': 'chr1_225714748_225715148', 'logtype': 'n'},
 {'query': 'chr1_225744048_225744648', 'logtype': 'n'},
 {'query': 'chr1_225772248_225773448', 'logtype': 'n'},
 {'query': 'chr1_225777998_225778398', 'logtype': 'n'},
 {'query': 'chr1_225890900_225891650', 'logtype': 'n'},
 {'query': 'chr1_225999149_225999799', 'logtype': 'n'},
 {'query': 'chr1_226110149_226110649', 'logtype': 'n'},
 {'query': 'chr1_226132999_226133599', 'logtype': 'n'},
 {'query': 'chr1_226400749_226401299', 'logtype': 'n'},
 {'query': 'chr1_22342007_22342507', 'logtype': 'n'},
 {'query': 'chr1_226553499_226554149', 'logtype': 'n'},
 {'query': 'chr1_226602699_226603199', 'logtype': 'n'},
 {'query': 'chr1_226632399_226633049', 'logtype': 'n'},
 {'query': 'chr1_226676999_226677449', 'logtype': 'n'},
 {'query': 'chr1_226702699_226703849', 'logtype': 'n'},
 {'query': 'chr1_226814799_226815649', 'logtype': 'n'},
 {'query': 'chr1_226870449_226870949', 'logtype': 'n'},
 {'query': 'chr1_226895449_226896249', 'logtype': 'n'},
 {'query': 'chr1_226939749_226940349', 'logtype': 'n'},
 {'query': 'chr1_227001849_227002299', 'logtype': 'n'},
 {'query': 'chr1_227016749_227017649', 'logtype': 'n'},
 {'query': 'chr1_227066799_227067399', 'logtype': 'n'},
 {'query': 'chr1_227154499_227155399', 'logtype': 'n'},
 {'query': 'chr1_22412507_22413007', 'logtype': 'n'},
 {'query': 'chr1_22414057_22414757', 'logtype': 'n'},
 {'query': 'chr1_227282999_227283499', 'logtype': 'n'},
 {'query': 'chr1_227306049_227306499', 'logtype': 'n'},
 {'query': 'chr1_227344049_227344849', 'logtype': 'n'},
 {'query': 'chr1_227351349_227351999', 'logtype': 'n'},
 {'query': 'chr1_227372549_227373199', 'logtype': 'n'},
 {'query': 'chr1_227397799_227398149', 'logtype': 'n'},
 {'query': 'chr1_227399299_227399999', 'logtype': 'n'},
 {'query': 'chr1_227542499_227542999', 'logtype': 'n'},
 {'query': 'chr1_227549849_227550349', 'logtype': 'n'},
 {'query': 'chr1_227563399_227563999', 'logtype': 'n'},
 {'query': 'chr1_22451607_22452207', 'logtype': 'n'},
 {'query': 'chr1_227605449_227606649', 'logtype': 'n'},
 {'query': 'chr1_227735199_227735549', 'logtype': 'n'},
 {'query': 'chr1_227891549_227892199', 'logtype': 'n'},
 {'query': 'chr1_228090499_228091349', 'logtype': 'n'},
 {'query': 'chr1_228165449_228166399', 'logtype': 'n'},
 {'query': 'chr1_228867503_228868153', 'logtype': 'n'},
 {'query': 'chr1_228983553_228984103', 'logtype': 'n'},
 {'query': 'chr1_229058703_229059253', 'logtype': 'n'},
 {'query': 'chr1_229059603_229060253', 'logtype': 'n'},
 {'query': 'chr1_229070103_229070603', 'logtype': 'n'},
 {'query': 'chr1_229085153_229085853', 'logtype': 'n'},
 {'query': 'chr1_2361011_2361461', 'logtype': 'n'},
 {'query': 'chr1_229117553_229118353', 'logtype': 'n'},
 {'query': 'chr1_229171753_229172503', 'logtype': 'n'},
 {'query': 'chr1_229199303_229199553', 'logtype': 'n'},
 {'query': 'chr1_229207953_229209253', 'logtype': 'n'},
 {'query': 'chr1_229221103_229222253', 'logtype': 'n'},
 {'query': 'chr1_229271953_229272453', 'logtype': 'n'},
 {'query': 'chr1_229273553_229274353', 'logtype': 'n'},
 {'query': 'chr1_229319953_229320403', 'logtype': 'n'},
 {'query': 'chr1_229508153_229508653', 'logtype': 'n'},
 {'query': 'chr1_229536953_229537353', 'logtype': 'n'},
 {'query': 'chr1_229558703_229559353', 'logtype': 'n'},
 {'query': 'chr1_229843803_229845353', 'logtype': 'n'},
 {'query': 'chr1_230101403_230101953', 'logtype': 'n'},
 {'query': 'chr1_230104653_230105103', 'logtype': 'n'},
 {'query': 'chr1_230120303_230120753', 'logtype': 'n'},
 {'query': 'chr1_230185654_230186604', 'logtype': 'n'},
 {'query': 'chr1_230215604_230216004', 'logtype': 'n'},
 {'query': 'chr1_230282054_230282704', 'logtype': 'n'},
 {'query': 'chr1_22717457_22717907', 'logtype': 'n'},
 {'query': 'chr1_230307954_230308404', 'logtype': 'n'},
 {'query': 'chr1_230492554_230493254', 'logtype': 'n'},
 {'query': 'chr1_230498504_230499054', 'logtype': 'n'},
 {'query': 'chr1_22750307_22750907', 'logtype': 'n'},
 {'query': 'chr1_230680454_230681104', 'logtype': 'n'},
 {'query': 'chr1_230730954_230731504', 'logtype': 'n'},
 {'query': 'chr1_230752254_230752854', 'logtype': 'n'},
 {'query': 'chr1_230825204_230825704', 'logtype': 'n'},
 {'query': 'chr1_230849504_230849854', 'logtype': 'n'},
 {'query': 'chr1_230950304_230950904', 'logtype': 'n'},
 {'query': 'chr1_230978754_230979154', 'logtype': 'n'},
 {'query': 'chr1_22814607_22815157', 'logtype': 'n'},
 {'query': 'chr1_22826507_22827307', 'logtype': 'n'},
 {'query': 'chr1_231404204_231404654', 'logtype': 'n'},
 {'query': 'chr1_231417754_231418204', 'logtype': 'n'},
 {'query': 'chr1_231448954_231449554', 'logtype': 'n'},
 {'query': 'chr1_231528254_231528804', 'logtype': 'n'},
 {'query': 'chr1_231601804_231602754', 'logtype': 'n'},
 {'query': 'chr1_231684004_231685354', 'logtype': 'n'},
 {'query': 'chr1_231727954_231728504', 'logtype': 'n'},
 {'query': 'chr1_231729204_231729854', 'logtype': 'n'},
 {'query': 'chr1_231847904_231848504', 'logtype': 'n'},
 {'query': 'chr1_231919854_231920604', 'logtype': 'n'},
 {'query': 'chr1_2391461_2392011', 'logtype': 'n'},
 {'query': 'chr1_232260804_232261304', 'logtype': 'n'},
 {'query': 'chr1_232287804_232288354', 'logtype': 'n'},
 {'query': 'chr1_232306354_232306804', 'logtype': 'n'},
 {'query': 'chr1_232320154_232320804', 'logtype': 'n'},
 {'query': 'chr1_232322204_232323054', 'logtype': 'n'},
 {'query': 'chr1_232548304_232548754', 'logtype': 'n'},
 {'query': 'chr1_232664954_232665704', 'logtype': 'n'},
 {'query': 'chr1_232678304_232679054', 'logtype': 'n'},
 {'query': 'chr1_232704654_232705304', 'logtype': 'n'},
 {'query': 'chr1_232764004_232765404', 'logtype': 'n'},
 {'query': 'chr1_232780204_232780904', 'logtype': 'n'},
 {'query': 'chr1_232793904_232794454', 'logtype': 'n'},
 {'query': 'chr1_22967607_22968057', 'logtype': 'n'},
 {'query': 'chr1_233025104_233026154', 'logtype': 'n'},
 {'query': 'chr1_23003857_23004207', 'logtype': 'n'},
 {'query': 'chr1_233602104_233602654', 'logtype': 'n'},
 {'query': 'chr1_233704754_233705504', 'logtype': 'n'},
 {'query': 'chr1_233735904_233736304', 'logtype': 'n'},
 {'query': 'chr1_233800954_233801454', 'logtype': 'n'},
 {'query': 'chr1_233897104_233898154', 'logtype': 'n'},
 {'query': 'chr1_2410561_2411461', 'logtype': 'n'},
 {'query': 'chr1_234107404_234108204', 'logtype': 'n'},
 {'query': 'chr1_234371304_234371804', 'logtype': 'n'},
 {'query': 'chr1_234373204_234373754', 'logtype': 'n'},
 {'query': 'chr1_234403354_234403854', 'logtype': 'n'},
 {'query': 'chr1_234452304_234453204', 'logtype': 'n'},
 {'query': 'chr1_234458254_234458954', 'logtype': 'n'},
 {'query': 'chr1_234487354_234487804', 'logtype': 'n'},
 {'query': 'chr1_234499154_234499554', 'logtype': 'n'},
 {'query': 'chr1_234532404_234533104', 'logtype': 'n'},
 {'query': 'chr1_234544404_234545154', 'logtype': 'n'},
 {'query': 'chr1_234599504_234600554', 'logtype': 'n'},
 {'query': 'chr1_234610204_234610604', 'logtype': 'n'},
 {'query': 'chr1_234643154_234643654', 'logtype': 'n'},
 {'query': 'chr1_234717653_234718203', 'logtype': 'n'},
 {'query': 'chr1_234723403_234725053', 'logtype': 'n'},
 {'query': 'chr1_234875503_234876103', 'logtype': 'n'},
 {'query': 'chr1_234894153_234894853', 'logtype': 'n'},
 {'query': 'chr1_234915853_234916453', 'logtype': 'n'},
 {'query': 'chr1_234917953_234918703', 'logtype': 'n'},
 {'query': 'chr1_234925803_234926353', 'logtype': 'n'},
 {'query': 'chr1_234959653_234960103', 'logtype': 'n'},
 {'query': 'chr1_234960403_234961203', 'logtype': 'n'},
 {'query': 'chr1_234961603_234962553', 'logtype': 'n'},
 {'query': 'chr1_234973803_234974503', 'logtype': 'n'},
 {'query': 'chr1_234997053_234997853', 'logtype': 'n'},
 {'query': 'chr1_235006753_235007303', 'logtype': 'n'},
 {'query': 'chr1_235035153_235035603', 'logtype': 'n'},
 {'query': 'chr1_235079586_235080136', 'logtype': 'n'},
 {'query': 'chr1_235083685_235084185', 'logtype': 'n'},
 {'query': 'chr1_235128785_235129185', 'logtype': 'n'},
 {'query': 'chr1_235129685_235130235', 'logtype': 'n'},
 {'query': 'chr1_235237085_235237685', 'logtype': 'n'},
 {'query': 'chr1_235295785_235296585', 'logtype': 'n'},
 {'query': 'chr1_235328235_235328835', 'logtype': 'n'},
 {'query': 'chr1_235331235_235331785', 'logtype': 'n'},
 {'query': 'chr1_235408735_235409785', 'logtype': 'n'},
 {'query': 'chr1_235504350_235505200', 'logtype': 'n'},
 {'query': 'chr1_235517852_235518302', 'logtype': 'n'},
 {'query': 'chr1_235635900_235636350', 'logtype': 'n'},
 {'query': 'chr1_235714050_235714800', 'logtype': 'n'},
 {'query': 'chr1_236009800_236010400', 'logtype': 'n'},
 {'query': 'chr1_236112500_236112900', 'logtype': 'n'},
 {'query': 'chr1_236298150_236298600', 'logtype': 'n'},
 {'query': 'chr1_236308500_236309400', 'logtype': 'n'},
 {'query': 'chr1_236319450_236319950', 'logtype': 'n'},
 {'query': 'chr1_236320450_236321600', 'logtype': 'n'},
 {'query': 'chr1_236333000_236333750', 'logtype': 'n'},
 {'query': 'chr1_236389100_236389900', 'logtype': 'n'},
 {'query': 'chr1_236399450_236399950', 'logtype': 'n'},
 {'query': 'chr1_236404000_236404550', 'logtype': 'n'},
 {'query': 'chr1_236498650_236499350', 'logtype': 'n'},
 {'query': 'chr1_236604300_236604800', 'logtype': 'n'},
 {'query': 'chr1_2438011_2438411', 'logtype': 'n'},
 {'query': 'chr1_23368757_23369107', 'logtype': 'n'},
 {'query': 'chr1_237411750_237412150', 'logtype': 'n'},
 {'query': 'chr1_237756600_237757000', 'logtype': 'n'},
 {'query': 'chr1_239035100_239035700', 'logtype': 'n'},
 {'query': 'chr1_239056850_239057550', 'logtype': 'n'},
 {'query': 'chr1_239306350_239306950', 'logtype': 'n'},
 {'query': 'chr1_239442800_239443650', 'logtype': 'n'},
 {'query': 'chr1_239635100_239635750', 'logtype': 'n'},
 {'query': 'chr1_239719200_239719650', 'logtype': 'n'},
 ...]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">os.path.isfile(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/chr10_98332743_98333443_predictions.h5'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>True</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1">np.array([<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>(3,)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_batch(lst, batch_n, len_lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb43-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb43-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Given a list, this function yields batches of an unspecified size but the number of batches is equal to `batch_n`</span></span>
<span id="cb43-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    E.g. generate_batch([0, 1, 2, 3, 4, 5, 6], batch_n=2) -&gt; (0, 1, 2, 3), (4, 5, 6)</span></span>
<span id="cb43-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb43-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb43-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        lst: list</span></span>
<span id="cb43-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        batch_n: int</span></span>
<span id="cb43-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            Number of batches to return</span></span>
<span id="cb43-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        len_lst: None or num (length of the input list)</span></span>
<span id="cb43-11"></span>
<span id="cb43-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Yields</span></span>
<span id="cb43-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        `batch_n` batches of the list</span></span>
<span id="cb43-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb43-15">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb43-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># how many per batch</span></span>
<span id="cb43-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> len_lst <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb43-18">        n_elems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.ceil(len_lst<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>batch_n)</span>
<span id="cb43-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb43-20">        n_elems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.ceil(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lst)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>batch_n)</span>
<span id="cb43-21">        </span>
<span id="cb43-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lst), n_elems):</span>
<span id="cb43-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> lst[i:(i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n_elems)]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="37">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>)]</span>
<span id="cb44-2">chromosomes.extend([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chrX'</span>])</span>
<span id="cb44-3">chromosomes</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="37">
<pre><code>['chr1',
 'chr2',
 'chr3',
 'chr4',
 'chr5',
 'chr6',
 'chr7',
 'chr8',
 'chr9',
 'chr10',
 'chr11',
 'chr12',
 'chr13',
 'chr14',
 'chr15',
 'chr16',
 'chr17',
 'chr18',
 'chr19',
 'chr20',
 'chr21',
 'chr22',
 'chrX']</code></pre>
</div>
</div>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">batch_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb46-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> chromosome <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chromosomes:</span>
<span id="cb46-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(chromosome)</span></span>
<span id="cb46-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(list_of_regions[0:5])</span></span>
<span id="cb46-5">    chr_list_of_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [r <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> queries <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> r.startswith(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_"</span>)]</span>
<span id="cb46-6">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(generate_batch(id_logfile.motif.tolist(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb46-7">    batch_list.append(a)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="48">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(a)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="48">
<pre><code>40</code></pre>
</div>
</div>
<div class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> a:</span>
<span id="cb49-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(i))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
467
441</code></pre>
</div>
</div>
<div class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(queries)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="50">
<pre><code>10000</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-locally/scripts/misc.html</guid>
  <pubDate>Thu, 03 Aug 2023 02:47:03 GMT</pubDate>
</item>
<item>
  <title>Check predictions for a single individual, region, and haplotype</title>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/comparing-enformer-predictions-in-overlapping-intervals/results.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Libraries</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_test/predictions_folder/reference_enformer_minimal_chr2_region/predictions_2023-07-20/enformer_predictions/reference_enformer_minimal/haplotype0/"</span></span>
<span id="cb2-2">interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr2_96267973_96382661"</span></span>
<span id="cb2-3">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_predictions.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb2-4">f[interval][()]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>array([[1.2541825e-01, 1.9915380e-01, 1.5378954e-01, ..., 8.7608267e-03,
        2.8164219e-02, 3.3774886e-02],
       [5.5592204e-03, 8.4977224e-03, 8.1731612e-03, ..., 1.4041504e-03,
        5.0366633e-03, 4.5777112e-03],
       [1.8070938e-02, 2.4811333e-02, 2.0492842e-02, ..., 1.0022735e-02,
        3.5357766e-02, 2.8489195e-02],
       ...,
       [4.7709393e-05, 6.7506859e-05, 5.9531834e-05, ..., 3.9953634e-04,
        1.4891241e-03, 1.1986542e-03],
       [4.6880776e-04, 6.4554013e-04, 5.7156256e-04, ..., 1.3358767e-04,
        4.6027626e-04, 2.6385681e-04],
       [7.9046481e-04, 1.1395547e-03, 9.8084495e-04, ..., 1.1925452e-03,
        3.0541462e-03, 2.2076559e-03]], dtype=float32)</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/comparing-enformer-predictions-in-overlapping-intervals/results.html</guid>
  <pubDate>Thu, 03 Aug 2023 02:47:03 GMT</pubDate>
</item>
<item>
  <title>Collect all intervals</title>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-on-all-regions-reference/reference_epigenome.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_intervals(chromosome, length):</span>
<span id="cb1-3">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-4">    increment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57344</span></span>
<span id="cb1-5">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114688</span></span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"metadata/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_intervals.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> length:</span>
<span id="cb1-8">            f.write(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb1-9">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> increment</span>
<span id="cb1-10">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> increment</span>
<span id="cb1-11">        f.write(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'"chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"'</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write_intervals(chromosome = 8, length = 145138636)</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write_intervals(chromosome = 9, length = 138394717)</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write_intervals(chromosome = 10, length = 133797422)</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write_intervals(chromosome = 11, length = 135086622)</span></span></code></pre></div>
</div>
<section id="concatenate-all-interval-predictions" class="level3">
<h3 class="anchored" data-anchor-id="concatenate-all-interval-predictions">Concatenate all interval predictions</h3>
<p>At this point, we have run Enformer on all the intervals in the <code>metadata</code> folder. With the exception of the first and last interval for each chromosome, we extract only the middle half of the bins, as each interval overlaps with the previous and next interval. We concatenate the middle bins to create a continuous epigenomic map along each chromosome.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for a given chromosome, we extract all enformer outputs</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb3-4">predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_test/predictions_folder/reference_enformer_all_regions/predictions_2023-07-21/enformer_predictions/reference_enformer/haplotype0/'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Libraries</span></span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> h5py</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"></span>
<span id="cb5-2">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/Github/deep-learning-in-genomics/posts/running-enformer-on-all-regions-reference'</span></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/metadata/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chromosome<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_intervals.txt'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-4">    intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read().replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>).splitlines()</span>
<span id="cb5-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(intervals)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['chr8_0_114688', 'chr8_57344_172032', 'chr8_114688_229376', 'chr8_172032_286720', 'chr8_229376_344064', 'chr8_286720_401408', 'chr8_344064_458752', 'chr8_401408_516096', 'chr8_458752_573440', 'chr8_516096_630784', 'chr8_573440_688128', 'chr8_630784_745472', 'chr8_688128_802816', 'chr8_745472_860160', 'chr8_802816_917504', 'chr8_860160_974848', 'chr8_917504_1032192', 'chr8_974848_1089536', 'chr8_1032192_1146880', 'chr8_1089536_1204224', 'chr8_1146880_1261568', 'chr8_1204224_1318912', 'chr8_1261568_1376256', 'chr8_1318912_1433600', 'chr8_1376256_1490944', 'chr8_1433600_1548288', 'chr8_1490944_1605632', 'chr8_1548288_1662976', 'chr8_1605632_1720320', 'chr8_1662976_1777664', 'chr8_1720320_1835008', 'chr8_1777664_1892352', 'chr8_1835008_1949696', 'chr8_1892352_2007040', 'chr8_1949696_2064384', 'chr8_2007040_2121728', 'chr8_2064384_2179072', 'chr8_2121728_2236416', 'chr8_2179072_2293760', 'chr8_2236416_2351104', 'chr8_2293760_2408448', 'chr8_2351104_2465792', 'chr8_2408448_2523136', 'chr8_2465792_2580480', 'chr8_2523136_2637824', 'chr8_2580480_2695168', 'chr8_2637824_2752512', 'chr8_2695168_2809856', 'chr8_2752512_2867200', 'chr8_2809856_2924544', 'chr8_2867200_2981888', 'chr8_2924544_3039232', 'chr8_2981888_3096576', 'chr8_3039232_3153920', 'chr8_3096576_3211264', 'chr8_3153920_3268608', 'chr8_3211264_3325952', 'chr8_3268608_3383296', 'chr8_3325952_3440640', 'chr8_3383296_3497984', 'chr8_3440640_3555328', 'chr8_3497984_3612672', 'chr8_3555328_3670016', 'chr8_3612672_3727360', 'chr8_3670016_3784704', 'chr8_3727360_3842048', 'chr8_3784704_3899392', 'chr8_3842048_3956736', 'chr8_3899392_4014080', 'chr8_3956736_4071424', 'chr8_4014080_4128768', 'chr8_4071424_4186112', 'chr8_4128768_4243456', 'chr8_4186112_4300800', 'chr8_4243456_4358144', 'chr8_4300800_4415488', 'chr8_4358144_4472832', 'chr8_4415488_4530176', 'chr8_4472832_4587520', 'chr8_4530176_4644864', 'chr8_4587520_4702208', 'chr8_4644864_4759552', 'chr8_4702208_4816896', 'chr8_4759552_4874240', 'chr8_4816896_4931584', 'chr8_4874240_4988928', 'chr8_4931584_5046272', 'chr8_4988928_5103616', 'chr8_5046272_5160960', 'chr8_5103616_5218304', 'chr8_5160960_5275648', 'chr8_5218304_5332992', 'chr8_5275648_5390336', 'chr8_5332992_5447680', 'chr8_5390336_5505024', 'chr8_5447680_5562368', 'chr8_5505024_5619712', 'chr8_5562368_5677056', 'chr8_5619712_5734400', 'chr8_5677056_5791744', 'chr8_5734400_5849088', 'chr8_5791744_5906432', 'chr8_5849088_5963776', 'chr8_5906432_6021120', 'chr8_5963776_6078464', 'chr8_6021120_6135808', 'chr8_6078464_6193152', 'chr8_6135808_6250496', 'chr8_6193152_6307840', 'chr8_6250496_6365184', 'chr8_6307840_6422528', 'chr8_6365184_6479872', 'chr8_6422528_6537216', 'chr8_6479872_6594560', 'chr8_6537216_6651904', 'chr8_6594560_6709248', 'chr8_6651904_6766592', 'chr8_6709248_6823936', 'chr8_6766592_6881280', 'chr8_6823936_6938624', 'chr8_6881280_6995968', 'chr8_6938624_7053312', 'chr8_6995968_7110656', 'chr8_7053312_7168000', 'chr8_7110656_7225344', 'chr8_7168000_7282688', 'chr8_7225344_7340032', 'chr8_7282688_7397376', 'chr8_7340032_7454720', 'chr8_7397376_7512064', 'chr8_7454720_7569408', 'chr8_7512064_7626752', 'chr8_7569408_7684096', 'chr8_7626752_7741440', 'chr8_7684096_7798784', 'chr8_7741440_7856128', 'chr8_7798784_7913472', 'chr8_7856128_7970816', 'chr8_7913472_8028160', 'chr8_7970816_8085504', 'chr8_8028160_8142848', 'chr8_8085504_8200192', 'chr8_8142848_8257536', 'chr8_8200192_8314880', 'chr8_8257536_8372224', 'chr8_8314880_8429568', 'chr8_8372224_8486912', 'chr8_8429568_8544256', 'chr8_8486912_8601600', 'chr8_8544256_8658944', 'chr8_8601600_8716288', 'chr8_8658944_8773632', 'chr8_8716288_8830976', 'chr8_8773632_8888320', 'chr8_8830976_8945664', 'chr8_8888320_9003008', 'chr8_8945664_9060352', 'chr8_9003008_9117696', 'chr8_9060352_9175040', 'chr8_9117696_9232384', 'chr8_9175040_9289728', 'chr8_9232384_9347072', 'chr8_9289728_9404416', 'chr8_9347072_9461760', 'chr8_9404416_9519104', 'chr8_9461760_9576448', 'chr8_9519104_9633792', 'chr8_9576448_9691136', 'chr8_9633792_9748480', 'chr8_9691136_9805824', 'chr8_9748480_9863168', 'chr8_9805824_9920512', 'chr8_9863168_9977856', 'chr8_9920512_10035200', 'chr8_9977856_10092544', 'chr8_10035200_10149888', 'chr8_10092544_10207232', 'chr8_10149888_10264576', 'chr8_10207232_10321920', 'chr8_10264576_10379264', 'chr8_10321920_10436608', 'chr8_10379264_10493952', 'chr8_10436608_10551296', 'chr8_10493952_10608640', 'chr8_10551296_10665984', 'chr8_10608640_10723328', 'chr8_10665984_10780672', 'chr8_10723328_10838016', 'chr8_10780672_10895360', 'chr8_10838016_10952704', 'chr8_10895360_11010048', 'chr8_10952704_11067392', 'chr8_11010048_11124736', 'chr8_11067392_11182080', 'chr8_11124736_11239424', 'chr8_11182080_11296768', 'chr8_11239424_11354112', 'chr8_11296768_11411456', 'chr8_11354112_11468800', 'chr8_11411456_11526144', 'chr8_11468800_11583488', 'chr8_11526144_11640832', 'chr8_11583488_11698176', 'chr8_11640832_11755520', 'chr8_11698176_11812864', 'chr8_11755520_11870208', 'chr8_11812864_11927552', 'chr8_11870208_11984896', 'chr8_11927552_12042240', 'chr8_11984896_12099584', 'chr8_12042240_12156928', 'chr8_12099584_12214272', 'chr8_12156928_12271616', 'chr8_12214272_12328960', 'chr8_12271616_12386304', 'chr8_12328960_12443648', 'chr8_12386304_12500992', 'chr8_12443648_12558336', 'chr8_12500992_12615680', 'chr8_12558336_12673024', 'chr8_12615680_12730368', 'chr8_12673024_12787712', 'chr8_12730368_12845056', 'chr8_12787712_12902400', 'chr8_12845056_12959744', 'chr8_12902400_13017088', 'chr8_12959744_13074432', 'chr8_13017088_13131776', 'chr8_13074432_13189120', 'chr8_13131776_13246464', 'chr8_13189120_13303808', 'chr8_13246464_13361152', 'chr8_13303808_13418496', 'chr8_13361152_13475840', 'chr8_13418496_13533184', 'chr8_13475840_13590528', 'chr8_13533184_13647872', 'chr8_13590528_13705216', 'chr8_13647872_13762560', 'chr8_13705216_13819904', 'chr8_13762560_13877248', 'chr8_13819904_13934592', 'chr8_13877248_13991936', 'chr8_13934592_14049280', 'chr8_13991936_14106624', 'chr8_14049280_14163968', 'chr8_14106624_14221312', 'chr8_14163968_14278656', 'chr8_14221312_14336000', 'chr8_14278656_14393344', 'chr8_14336000_14450688', 'chr8_14393344_14508032', 'chr8_14450688_14565376', 'chr8_14508032_14622720', 'chr8_14565376_14680064', 'chr8_14622720_14737408', 'chr8_14680064_14794752', 'chr8_14737408_14852096', 'chr8_14794752_14909440', 'chr8_14852096_14966784', 'chr8_14909440_15024128', 'chr8_14966784_15081472', 'chr8_15024128_15138816', 'chr8_15081472_15196160', 'chr8_15138816_15253504', 'chr8_15196160_15310848', 'chr8_15253504_15368192', 'chr8_15310848_15425536', 'chr8_15368192_15482880', 'chr8_15425536_15540224', 'chr8_15482880_15597568', 'chr8_15540224_15654912', 'chr8_15597568_15712256', 'chr8_15654912_15769600', 'chr8_15712256_15826944', 'chr8_15769600_15884288', 'chr8_15826944_15941632', 'chr8_15884288_15998976', 'chr8_15941632_16056320', 'chr8_15998976_16113664', 'chr8_16056320_16171008', 'chr8_16113664_16228352', 'chr8_16171008_16285696', 'chr8_16228352_16343040', 'chr8_16285696_16400384', 'chr8_16343040_16457728', 'chr8_16400384_16515072', 'chr8_16457728_16572416', 'chr8_16515072_16629760', 'chr8_16572416_16687104', 'chr8_16629760_16744448', 'chr8_16687104_16801792', 'chr8_16744448_16859136', 'chr8_16801792_16916480', 'chr8_16859136_16973824', 'chr8_16916480_17031168', 'chr8_16973824_17088512', 'chr8_17031168_17145856', 'chr8_17088512_17203200', 'chr8_17145856_17260544', 'chr8_17203200_17317888', 'chr8_17260544_17375232', 'chr8_17317888_17432576', 'chr8_17375232_17489920', 'chr8_17432576_17547264', 'chr8_17489920_17604608', 'chr8_17547264_17661952', 'chr8_17604608_17719296', 'chr8_17661952_17776640', 'chr8_17719296_17833984', 'chr8_17776640_17891328', 'chr8_17833984_17948672', 'chr8_17891328_18006016', 'chr8_17948672_18063360', 'chr8_18006016_18120704', 'chr8_18063360_18178048', 'chr8_18120704_18235392', 'chr8_18178048_18292736', 'chr8_18235392_18350080', 'chr8_18292736_18407424', 'chr8_18350080_18464768', 'chr8_18407424_18522112', 'chr8_18464768_18579456', 'chr8_18522112_18636800', 'chr8_18579456_18694144', 'chr8_18636800_18751488', 'chr8_18694144_18808832', 'chr8_18751488_18866176', 'chr8_18808832_18923520', 'chr8_18866176_18980864', 'chr8_18923520_19038208', 'chr8_18980864_19095552', 'chr8_19038208_19152896', 'chr8_19095552_19210240', 'chr8_19152896_19267584', 'chr8_19210240_19324928', 'chr8_19267584_19382272', 'chr8_19324928_19439616', 'chr8_19382272_19496960', 'chr8_19439616_19554304', 'chr8_19496960_19611648', 'chr8_19554304_19668992', 'chr8_19611648_19726336', 'chr8_19668992_19783680', 'chr8_19726336_19841024', 'chr8_19783680_19898368', 'chr8_19841024_19955712', 'chr8_19898368_20013056', 'chr8_19955712_20070400', 'chr8_20013056_20127744', 'chr8_20070400_20185088', 'chr8_20127744_20242432', 'chr8_20185088_20299776', 'chr8_20242432_20357120', 'chr8_20299776_20414464', 'chr8_20357120_20471808', 'chr8_20414464_20529152', 'chr8_20471808_20586496', 'chr8_20529152_20643840', 'chr8_20586496_20701184', 'chr8_20643840_20758528', 'chr8_20701184_20815872', 'chr8_20758528_20873216', 'chr8_20815872_20930560', 'chr8_20873216_20987904', 'chr8_20930560_21045248', 'chr8_20987904_21102592', 'chr8_21045248_21159936', 'chr8_21102592_21217280', 'chr8_21159936_21274624', 'chr8_21217280_21331968', 'chr8_21274624_21389312', 'chr8_21331968_21446656', 'chr8_21389312_21504000', 'chr8_21446656_21561344', 'chr8_21504000_21618688', 'chr8_21561344_21676032', 'chr8_21618688_21733376', 'chr8_21676032_21790720', 'chr8_21733376_21848064', 'chr8_21790720_21905408', 'chr8_21848064_21962752', 'chr8_21905408_22020096', 'chr8_21962752_22077440', 'chr8_22020096_22134784', 'chr8_22077440_22192128', 'chr8_22134784_22249472', 'chr8_22192128_22306816', 'chr8_22249472_22364160', 'chr8_22306816_22421504', 'chr8_22364160_22478848', 'chr8_22421504_22536192', 'chr8_22478848_22593536', 'chr8_22536192_22650880', 'chr8_22593536_22708224', 'chr8_22650880_22765568', 'chr8_22708224_22822912', 'chr8_22765568_22880256', 'chr8_22822912_22937600', 'chr8_22880256_22994944', 'chr8_22937600_23052288', 'chr8_22994944_23109632', 'chr8_23052288_23166976', 'chr8_23109632_23224320', 'chr8_23166976_23281664', 'chr8_23224320_23339008', 'chr8_23281664_23396352', 'chr8_23339008_23453696', 'chr8_23396352_23511040', 'chr8_23453696_23568384', 'chr8_23511040_23625728', 'chr8_23568384_23683072', 'chr8_23625728_23740416', 'chr8_23683072_23797760', 'chr8_23740416_23855104', 'chr8_23797760_23912448', 'chr8_23855104_23969792', 'chr8_23912448_24027136', 'chr8_23969792_24084480', 'chr8_24027136_24141824', 'chr8_24084480_24199168', 'chr8_24141824_24256512', 'chr8_24199168_24313856', 'chr8_24256512_24371200', 'chr8_24313856_24428544', 'chr8_24371200_24485888', 'chr8_24428544_24543232', 'chr8_24485888_24600576', 'chr8_24543232_24657920', 'chr8_24600576_24715264', 'chr8_24657920_24772608', 'chr8_24715264_24829952', 'chr8_24772608_24887296', 'chr8_24829952_24944640', 'chr8_24887296_25001984', 'chr8_24944640_25059328', 'chr8_25001984_25116672', 'chr8_25059328_25174016', 'chr8_25116672_25231360', 'chr8_25174016_25288704', 'chr8_25231360_25346048', 'chr8_25288704_25403392', 'chr8_25346048_25460736', 'chr8_25403392_25518080', 'chr8_25460736_25575424', 'chr8_25518080_25632768', 'chr8_25575424_25690112', 'chr8_25632768_25747456', 'chr8_25690112_25804800', 'chr8_25747456_25862144', 'chr8_25804800_25919488', 'chr8_25862144_25976832', 'chr8_25919488_26034176', 'chr8_25976832_26091520', 'chr8_26034176_26148864', 'chr8_26091520_26206208', 'chr8_26148864_26263552', 'chr8_26206208_26320896', 'chr8_26263552_26378240', 'chr8_26320896_26435584', 'chr8_26378240_26492928', 'chr8_26435584_26550272', 'chr8_26492928_26607616', 'chr8_26550272_26664960', 'chr8_26607616_26722304', 'chr8_26664960_26779648', 'chr8_26722304_26836992', 'chr8_26779648_26894336', 'chr8_26836992_26951680', 'chr8_26894336_27009024', 'chr8_26951680_27066368', 'chr8_27009024_27123712', 'chr8_27066368_27181056', 'chr8_27123712_27238400', 'chr8_27181056_27295744', 'chr8_27238400_27353088', 'chr8_27295744_27410432', 'chr8_27353088_27467776', 'chr8_27410432_27525120', 'chr8_27467776_27582464', 'chr8_27525120_27639808', 'chr8_27582464_27697152', 'chr8_27639808_27754496', 'chr8_27697152_27811840', 'chr8_27754496_27869184', 'chr8_27811840_27926528', 'chr8_27869184_27983872', 'chr8_27926528_28041216', 'chr8_27983872_28098560', 'chr8_28041216_28155904', 'chr8_28098560_28213248', 'chr8_28155904_28270592', 'chr8_28213248_28327936', 'chr8_28270592_28385280', 'chr8_28327936_28442624', 'chr8_28385280_28499968', 'chr8_28442624_28557312', 'chr8_28499968_28614656', 'chr8_28557312_28672000', 'chr8_28614656_28729344', 'chr8_28672000_28786688', 'chr8_28729344_28844032', 'chr8_28786688_28901376', 'chr8_28844032_28958720', 'chr8_28901376_29016064', 'chr8_28958720_29073408', 'chr8_29016064_29130752', 'chr8_29073408_29188096', 'chr8_29130752_29245440', 'chr8_29188096_29302784', 'chr8_29245440_29360128', 'chr8_29302784_29417472', 'chr8_29360128_29474816', 'chr8_29417472_29532160', 'chr8_29474816_29589504', 'chr8_29532160_29646848', 'chr8_29589504_29704192', 'chr8_29646848_29761536', 'chr8_29704192_29818880', 'chr8_29761536_29876224', 'chr8_29818880_29933568', 'chr8_29876224_29990912', 'chr8_29933568_30048256', 'chr8_29990912_30105600', 'chr8_30048256_30162944', 'chr8_30105600_30220288', 'chr8_30162944_30277632', 'chr8_30220288_30334976', 'chr8_30277632_30392320', 'chr8_30334976_30449664', 'chr8_30392320_30507008', 'chr8_30449664_30564352', 'chr8_30507008_30621696', 'chr8_30564352_30679040', 'chr8_30621696_30736384', 'chr8_30679040_30793728', 'chr8_30736384_30851072', 'chr8_30793728_30908416', 'chr8_30851072_30965760', 'chr8_30908416_31023104', 'chr8_30965760_31080448', 'chr8_31023104_31137792', 'chr8_31080448_31195136', 'chr8_31137792_31252480', 'chr8_31195136_31309824', 'chr8_31252480_31367168', 'chr8_31309824_31424512', 'chr8_31367168_31481856', 'chr8_31424512_31539200', 'chr8_31481856_31596544', 'chr8_31539200_31653888', 'chr8_31596544_31711232', 'chr8_31653888_31768576', 'chr8_31711232_31825920', 'chr8_31768576_31883264', 'chr8_31825920_31940608', 'chr8_31883264_31997952', 'chr8_31940608_32055296', 'chr8_31997952_32112640', 'chr8_32055296_32169984', 'chr8_32112640_32227328', 'chr8_32169984_32284672', 'chr8_32227328_32342016', 'chr8_32284672_32399360', 'chr8_32342016_32456704', 'chr8_32399360_32514048', 'chr8_32456704_32571392', 'chr8_32514048_32628736', 'chr8_32571392_32686080', 'chr8_32628736_32743424', 'chr8_32686080_32800768', 'chr8_32743424_32858112', 'chr8_32800768_32915456', 'chr8_32858112_32972800', 'chr8_32915456_33030144', 'chr8_32972800_33087488', 'chr8_33030144_33144832', 'chr8_33087488_33202176', 'chr8_33144832_33259520', 'chr8_33202176_33316864', 'chr8_33259520_33374208', 'chr8_33316864_33431552', 'chr8_33374208_33488896', 'chr8_33431552_33546240', 'chr8_33488896_33603584', 'chr8_33546240_33660928', 'chr8_33603584_33718272', 'chr8_33660928_33775616', 'chr8_33718272_33832960', 'chr8_33775616_33890304', 'chr8_33832960_33947648', 'chr8_33890304_34004992', 'chr8_33947648_34062336', 'chr8_34004992_34119680', 'chr8_34062336_34177024', 'chr8_34119680_34234368', 'chr8_34177024_34291712', 'chr8_34234368_34349056', 'chr8_34291712_34406400', 'chr8_34349056_34463744', 'chr8_34406400_34521088', 'chr8_34463744_34578432', 'chr8_34521088_34635776', 'chr8_34578432_34693120', 'chr8_34635776_34750464', 'chr8_34693120_34807808', 'chr8_34750464_34865152', 'chr8_34807808_34922496', 'chr8_34865152_34979840', 'chr8_34922496_35037184', 'chr8_34979840_35094528', 'chr8_35037184_35151872', 'chr8_35094528_35209216', 'chr8_35151872_35266560', 'chr8_35209216_35323904', 'chr8_35266560_35381248', 'chr8_35323904_35438592', 'chr8_35381248_35495936', 'chr8_35438592_35553280', 'chr8_35495936_35610624', 'chr8_35553280_35667968', 'chr8_35610624_35725312', 'chr8_35667968_35782656', 'chr8_35725312_35840000', 'chr8_35782656_35897344', 'chr8_35840000_35954688', 'chr8_35897344_36012032', 'chr8_35954688_36069376', 'chr8_36012032_36126720', 'chr8_36069376_36184064', 'chr8_36126720_36241408', 'chr8_36184064_36298752', 'chr8_36241408_36356096', 'chr8_36298752_36413440', 'chr8_36356096_36470784', 'chr8_36413440_36528128', 'chr8_36470784_36585472', 'chr8_36528128_36642816', 'chr8_36585472_36700160', 'chr8_36642816_36757504', 'chr8_36700160_36814848', 'chr8_36757504_36872192', 'chr8_36814848_36929536', 'chr8_36872192_36986880', 'chr8_36929536_37044224', 'chr8_36986880_37101568', 'chr8_37044224_37158912', 'chr8_37101568_37216256', 'chr8_37158912_37273600', 'chr8_37216256_37330944', 'chr8_37273600_37388288', 'chr8_37330944_37445632', 'chr8_37388288_37502976', 'chr8_37445632_37560320', 'chr8_37502976_37617664', 'chr8_37560320_37675008', 'chr8_37617664_37732352', 'chr8_37675008_37789696', 'chr8_37732352_37847040', 'chr8_37789696_37904384', 'chr8_37847040_37961728', 'chr8_37904384_38019072', 'chr8_37961728_38076416', 'chr8_38019072_38133760', 'chr8_38076416_38191104', 'chr8_38133760_38248448', 'chr8_38191104_38305792', 'chr8_38248448_38363136', 'chr8_38305792_38420480', 'chr8_38363136_38477824', 'chr8_38420480_38535168', 'chr8_38477824_38592512', 'chr8_38535168_38649856', 'chr8_38592512_38707200', 'chr8_38649856_38764544', 'chr8_38707200_38821888', 'chr8_38764544_38879232', 'chr8_38821888_38936576', 'chr8_38879232_38993920', 'chr8_38936576_39051264', 'chr8_38993920_39108608', 'chr8_39051264_39165952', 'chr8_39108608_39223296', 'chr8_39165952_39280640', 'chr8_39223296_39337984', 'chr8_39280640_39395328', 'chr8_39337984_39452672', 'chr8_39395328_39510016', 'chr8_39452672_39567360', 'chr8_39510016_39624704', 'chr8_39567360_39682048', 'chr8_39624704_39739392', 'chr8_39682048_39796736', 'chr8_39739392_39854080', 'chr8_39796736_39911424', 'chr8_39854080_39968768', 'chr8_39911424_40026112', 'chr8_39968768_40083456', 'chr8_40026112_40140800', 'chr8_40083456_40198144', 'chr8_40140800_40255488', 'chr8_40198144_40312832', 'chr8_40255488_40370176', 'chr8_40312832_40427520', 'chr8_40370176_40484864', 'chr8_40427520_40542208', 'chr8_40484864_40599552', 'chr8_40542208_40656896', 'chr8_40599552_40714240', 'chr8_40656896_40771584', 'chr8_40714240_40828928', 'chr8_40771584_40886272', 'chr8_40828928_40943616', 'chr8_40886272_41000960', 'chr8_40943616_41058304', 'chr8_41000960_41115648', 'chr8_41058304_41172992', 'chr8_41115648_41230336', 'chr8_41172992_41287680', 'chr8_41230336_41345024', 'chr8_41287680_41402368', 'chr8_41345024_41459712', 'chr8_41402368_41517056', 'chr8_41459712_41574400', 'chr8_41517056_41631744', 'chr8_41574400_41689088', 'chr8_41631744_41746432', 'chr8_41689088_41803776', 'chr8_41746432_41861120', 'chr8_41803776_41918464', 'chr8_41861120_41975808', 'chr8_41918464_42033152', 'chr8_41975808_42090496', 'chr8_42033152_42147840', 'chr8_42090496_42205184', 'chr8_42147840_42262528', 'chr8_42205184_42319872', 'chr8_42262528_42377216', 'chr8_42319872_42434560', 'chr8_42377216_42491904', 'chr8_42434560_42549248', 'chr8_42491904_42606592', 'chr8_42549248_42663936', 'chr8_42606592_42721280', 'chr8_42663936_42778624', 'chr8_42721280_42835968', 'chr8_42778624_42893312', 'chr8_42835968_42950656', 'chr8_42893312_43008000', 'chr8_42950656_43065344', 'chr8_43008000_43122688', 'chr8_43065344_43180032', 'chr8_43122688_43237376', 'chr8_43180032_43294720', 'chr8_43237376_43352064', 'chr8_43294720_43409408', 'chr8_43352064_43466752', 'chr8_43409408_43524096', 'chr8_43466752_43581440', 'chr8_43524096_43638784', 'chr8_43581440_43696128', 'chr8_43638784_43753472', 'chr8_43696128_43810816', 'chr8_43753472_43868160', 'chr8_43810816_43925504', 'chr8_43868160_43982848', 'chr8_43925504_44040192', 'chr8_43982848_44097536', 'chr8_44040192_44154880', 'chr8_44097536_44212224', 'chr8_44154880_44269568', 'chr8_44212224_44326912', 'chr8_44269568_44384256', 'chr8_44326912_44441600', 'chr8_44384256_44498944', 'chr8_44441600_44556288', 'chr8_44498944_44613632', 'chr8_44556288_44670976', 'chr8_44613632_44728320', 'chr8_44670976_44785664', 'chr8_44728320_44843008', 'chr8_44785664_44900352', 'chr8_44843008_44957696', 'chr8_44900352_45015040', 'chr8_44957696_45072384', 'chr8_45015040_45129728', 'chr8_45072384_45187072', 'chr8_45129728_45244416', 'chr8_45187072_45301760', 'chr8_45244416_45359104', 'chr8_45301760_45416448', 'chr8_45359104_45473792', 'chr8_45416448_45531136', 'chr8_45473792_45588480', 'chr8_45531136_45645824', 'chr8_45588480_45703168', 'chr8_45645824_45760512', 'chr8_45703168_45817856', 'chr8_45760512_45875200', 'chr8_45817856_45932544', 'chr8_45875200_45989888', 'chr8_45932544_46047232', 'chr8_45989888_46104576', 'chr8_46047232_46161920', 'chr8_46104576_46219264', 'chr8_46161920_46276608', 'chr8_46219264_46333952', 'chr8_46276608_46391296', 'chr8_46333952_46448640', 'chr8_46391296_46505984', 'chr8_46448640_46563328', 'chr8_46505984_46620672', 'chr8_46563328_46678016', 'chr8_46620672_46735360', 'chr8_46678016_46792704', 'chr8_46735360_46850048', 'chr8_46792704_46907392', 'chr8_46850048_46964736', 'chr8_46907392_47022080', 'chr8_46964736_47079424', 'chr8_47022080_47136768', 'chr8_47079424_47194112', 'chr8_47136768_47251456', 'chr8_47194112_47308800', 'chr8_47251456_47366144', 'chr8_47308800_47423488', 'chr8_47366144_47480832', 'chr8_47423488_47538176', 'chr8_47480832_47595520', 'chr8_47538176_47652864', 'chr8_47595520_47710208', 'chr8_47652864_47767552', 'chr8_47710208_47824896', 'chr8_47767552_47882240', 'chr8_47824896_47939584', 'chr8_47882240_47996928', 'chr8_47939584_48054272', 'chr8_47996928_48111616', 'chr8_48054272_48168960', 'chr8_48111616_48226304', 'chr8_48168960_48283648', 'chr8_48226304_48340992', 'chr8_48283648_48398336', 'chr8_48340992_48455680', 'chr8_48398336_48513024', 'chr8_48455680_48570368', 'chr8_48513024_48627712', 'chr8_48570368_48685056', 'chr8_48627712_48742400', 'chr8_48685056_48799744', 'chr8_48742400_48857088', 'chr8_48799744_48914432', 'chr8_48857088_48971776', 'chr8_48914432_49029120', 'chr8_48971776_49086464', 'chr8_49029120_49143808', 'chr8_49086464_49201152', 'chr8_49143808_49258496', 'chr8_49201152_49315840', 'chr8_49258496_49373184', 'chr8_49315840_49430528', 'chr8_49373184_49487872', 'chr8_49430528_49545216', 'chr8_49487872_49602560', 'chr8_49545216_49659904', 'chr8_49602560_49717248', 'chr8_49659904_49774592', 'chr8_49717248_49831936', 'chr8_49774592_49889280', 'chr8_49831936_49946624', 'chr8_49889280_50003968', 'chr8_49946624_50061312', 'chr8_50003968_50118656', 'chr8_50061312_50176000', 'chr8_50118656_50233344', 'chr8_50176000_50290688', 'chr8_50233344_50348032', 'chr8_50290688_50405376', 'chr8_50348032_50462720', 'chr8_50405376_50520064', 'chr8_50462720_50577408', 'chr8_50520064_50634752', 'chr8_50577408_50692096', 'chr8_50634752_50749440', 'chr8_50692096_50806784', 'chr8_50749440_50864128', 'chr8_50806784_50921472', 'chr8_50864128_50978816', 'chr8_50921472_51036160', 'chr8_50978816_51093504', 'chr8_51036160_51150848', 'chr8_51093504_51208192', 'chr8_51150848_51265536', 'chr8_51208192_51322880', 'chr8_51265536_51380224', 'chr8_51322880_51437568', 'chr8_51380224_51494912', 'chr8_51437568_51552256', 'chr8_51494912_51609600', 'chr8_51552256_51666944', 'chr8_51609600_51724288', 'chr8_51666944_51781632', 'chr8_51724288_51838976', 'chr8_51781632_51896320', 'chr8_51838976_51953664', 'chr8_51896320_52011008', 'chr8_51953664_52068352', 'chr8_52011008_52125696', 'chr8_52068352_52183040', 'chr8_52125696_52240384', 'chr8_52183040_52297728', 'chr8_52240384_52355072', 'chr8_52297728_52412416', 'chr8_52355072_52469760', 'chr8_52412416_52527104', 'chr8_52469760_52584448', 'chr8_52527104_52641792', 'chr8_52584448_52699136', 'chr8_52641792_52756480', 'chr8_52699136_52813824', 'chr8_52756480_52871168', 'chr8_52813824_52928512', 'chr8_52871168_52985856', 'chr8_52928512_53043200', 'chr8_52985856_53100544', 'chr8_53043200_53157888', 'chr8_53100544_53215232', 'chr8_53157888_53272576', 'chr8_53215232_53329920', 'chr8_53272576_53387264', 'chr8_53329920_53444608', 'chr8_53387264_53501952', 'chr8_53444608_53559296', 'chr8_53501952_53616640', 'chr8_53559296_53673984', 'chr8_53616640_53731328', 'chr8_53673984_53788672', 'chr8_53731328_53846016', 'chr8_53788672_53903360', 'chr8_53846016_53960704', 'chr8_53903360_54018048', 'chr8_53960704_54075392', 'chr8_54018048_54132736', 'chr8_54075392_54190080', 'chr8_54132736_54247424', 'chr8_54190080_54304768', 'chr8_54247424_54362112', 'chr8_54304768_54419456', 'chr8_54362112_54476800', 'chr8_54419456_54534144', 'chr8_54476800_54591488', 'chr8_54534144_54648832', 'chr8_54591488_54706176', 'chr8_54648832_54763520', 'chr8_54706176_54820864', 'chr8_54763520_54878208', 'chr8_54820864_54935552', 'chr8_54878208_54992896', 'chr8_54935552_55050240', 'chr8_54992896_55107584', 'chr8_55050240_55164928', 'chr8_55107584_55222272', 'chr8_55164928_55279616', 'chr8_55222272_55336960', 'chr8_55279616_55394304', 'chr8_55336960_55451648', 'chr8_55394304_55508992', 'chr8_55451648_55566336', 'chr8_55508992_55623680', 'chr8_55566336_55681024', 'chr8_55623680_55738368', 'chr8_55681024_55795712', 'chr8_55738368_55853056', 'chr8_55795712_55910400', 'chr8_55853056_55967744', 'chr8_55910400_56025088', 'chr8_55967744_56082432', 'chr8_56025088_56139776', 'chr8_56082432_56197120', 'chr8_56139776_56254464', 'chr8_56197120_56311808', 'chr8_56254464_56369152', 'chr8_56311808_56426496', 'chr8_56369152_56483840', 'chr8_56426496_56541184', 'chr8_56483840_56598528', 'chr8_56541184_56655872', 'chr8_56598528_56713216', 'chr8_56655872_56770560', 'chr8_56713216_56827904', 'chr8_56770560_56885248', 'chr8_56827904_56942592', 'chr8_56885248_56999936', 'chr8_56942592_57057280', 'chr8_56999936_57114624', 'chr8_57057280_57171968', 'chr8_57114624_57229312', 'chr8_57171968_57286656', 'chr8_57229312_57344000', 'chr8_57286656_57401344', 'chr8_57344000_57458688', 'chr8_57401344_57516032', 'chr8_57458688_57573376', 'chr8_57516032_57630720', 'chr8_57573376_57688064', 'chr8_57630720_57745408', 'chr8_57688064_57802752', 'chr8_57745408_57860096', 'chr8_57802752_57917440', 'chr8_57860096_57974784', 'chr8_57917440_58032128', 'chr8_57974784_58089472', 'chr8_58032128_58146816', 'chr8_58089472_58204160', 'chr8_58146816_58261504', 'chr8_58204160_58318848', 'chr8_58261504_58376192', 'chr8_58318848_58433536', 'chr8_58376192_58490880', 'chr8_58433536_58548224', 'chr8_58490880_58605568', 'chr8_58548224_58662912', 'chr8_58605568_58720256', 'chr8_58662912_58777600', 'chr8_58720256_58834944', 'chr8_58777600_58892288', 'chr8_58834944_58949632', 'chr8_58892288_59006976', 'chr8_58949632_59064320', 'chr8_59006976_59121664', 'chr8_59064320_59179008', 'chr8_59121664_59236352', 'chr8_59179008_59293696', 'chr8_59236352_59351040', 'chr8_59293696_59408384', 'chr8_59351040_59465728', 'chr8_59408384_59523072', 'chr8_59465728_59580416', 'chr8_59523072_59637760', 'chr8_59580416_59695104', 'chr8_59637760_59752448', 'chr8_59695104_59809792', 'chr8_59752448_59867136', 'chr8_59809792_59924480', 'chr8_59867136_59981824', 'chr8_59924480_60039168', 'chr8_59981824_60096512', 'chr8_60039168_60153856', 'chr8_60096512_60211200', 'chr8_60153856_60268544', 'chr8_60211200_60325888', 'chr8_60268544_60383232', 'chr8_60325888_60440576', 'chr8_60383232_60497920', 'chr8_60440576_60555264', 'chr8_60497920_60612608', 'chr8_60555264_60669952', 'chr8_60612608_60727296', 'chr8_60669952_60784640', 'chr8_60727296_60841984', 'chr8_60784640_60899328', 'chr8_60841984_60956672', 'chr8_60899328_61014016', 'chr8_60956672_61071360', 'chr8_61014016_61128704', 'chr8_61071360_61186048', 'chr8_61128704_61243392', 'chr8_61186048_61300736', 'chr8_61243392_61358080', 'chr8_61300736_61415424', 'chr8_61358080_61472768', 'chr8_61415424_61530112', 'chr8_61472768_61587456', 'chr8_61530112_61644800', 'chr8_61587456_61702144', 'chr8_61644800_61759488', 'chr8_61702144_61816832', 'chr8_61759488_61874176', 'chr8_61816832_61931520', 'chr8_61874176_61988864', 'chr8_61931520_62046208', 'chr8_61988864_62103552', 'chr8_62046208_62160896', 'chr8_62103552_62218240', 'chr8_62160896_62275584', 'chr8_62218240_62332928', 'chr8_62275584_62390272', 'chr8_62332928_62447616', 'chr8_62390272_62504960', 'chr8_62447616_62562304', 'chr8_62504960_62619648', 'chr8_62562304_62676992', 'chr8_62619648_62734336', 'chr8_62676992_62791680', 'chr8_62734336_62849024', 'chr8_62791680_62906368', 'chr8_62849024_62963712', 'chr8_62906368_63021056', 'chr8_62963712_63078400', 'chr8_63021056_63135744', 'chr8_63078400_63193088', 'chr8_63135744_63250432', 'chr8_63193088_63307776', 'chr8_63250432_63365120', 'chr8_63307776_63422464', 'chr8_63365120_63479808', 'chr8_63422464_63537152', 'chr8_63479808_63594496', 'chr8_63537152_63651840', 'chr8_63594496_63709184', 'chr8_63651840_63766528', 'chr8_63709184_63823872', 'chr8_63766528_63881216', 'chr8_63823872_63938560', 'chr8_63881216_63995904', 'chr8_63938560_64053248', 'chr8_63995904_64110592', 'chr8_64053248_64167936', 'chr8_64110592_64225280', 'chr8_64167936_64282624', 'chr8_64225280_64339968', 'chr8_64282624_64397312', 'chr8_64339968_64454656', 'chr8_64397312_64512000', 'chr8_64454656_64569344', 'chr8_64512000_64626688', 'chr8_64569344_64684032', 'chr8_64626688_64741376', 'chr8_64684032_64798720', 'chr8_64741376_64856064', 'chr8_64798720_64913408', 'chr8_64856064_64970752', 'chr8_64913408_65028096', 'chr8_64970752_65085440', 'chr8_65028096_65142784', 'chr8_65085440_65200128', 'chr8_65142784_65257472', 'chr8_65200128_65314816', 'chr8_65257472_65372160', 'chr8_65314816_65429504', 'chr8_65372160_65486848', 'chr8_65429504_65544192', 'chr8_65486848_65601536', 'chr8_65544192_65658880', 'chr8_65601536_65716224', 'chr8_65658880_65773568', 'chr8_65716224_65830912', 'chr8_65773568_65888256', 'chr8_65830912_65945600', 'chr8_65888256_66002944', 'chr8_65945600_66060288', 'chr8_66002944_66117632', 'chr8_66060288_66174976', 'chr8_66117632_66232320', 'chr8_66174976_66289664', 'chr8_66232320_66347008', 'chr8_66289664_66404352', 'chr8_66347008_66461696', 'chr8_66404352_66519040', 'chr8_66461696_66576384', 'chr8_66519040_66633728', 'chr8_66576384_66691072', 'chr8_66633728_66748416', 'chr8_66691072_66805760', 'chr8_66748416_66863104', 'chr8_66805760_66920448', 'chr8_66863104_66977792', 'chr8_66920448_67035136', 'chr8_66977792_67092480', 'chr8_67035136_67149824', 'chr8_67092480_67207168', 'chr8_67149824_67264512', 'chr8_67207168_67321856', 'chr8_67264512_67379200', 'chr8_67321856_67436544', 'chr8_67379200_67493888', 'chr8_67436544_67551232', 'chr8_67493888_67608576', 'chr8_67551232_67665920', 'chr8_67608576_67723264', 'chr8_67665920_67780608', 'chr8_67723264_67837952', 'chr8_67780608_67895296', 'chr8_67837952_67952640', 'chr8_67895296_68009984', 'chr8_67952640_68067328', 'chr8_68009984_68124672', 'chr8_68067328_68182016', 'chr8_68124672_68239360', 'chr8_68182016_68296704', 'chr8_68239360_68354048', 'chr8_68296704_68411392', 'chr8_68354048_68468736', 'chr8_68411392_68526080', 'chr8_68468736_68583424', 'chr8_68526080_68640768', 'chr8_68583424_68698112', 'chr8_68640768_68755456', 'chr8_68698112_68812800', 'chr8_68755456_68870144', 'chr8_68812800_68927488', 'chr8_68870144_68984832', 'chr8_68927488_69042176', 'chr8_68984832_69099520', 'chr8_69042176_69156864', 'chr8_69099520_69214208', 'chr8_69156864_69271552', 'chr8_69214208_69328896', 'chr8_69271552_69386240', 'chr8_69328896_69443584', 'chr8_69386240_69500928', 'chr8_69443584_69558272', 'chr8_69500928_69615616', 'chr8_69558272_69672960', 'chr8_69615616_69730304', 'chr8_69672960_69787648', 'chr8_69730304_69844992', 'chr8_69787648_69902336', 'chr8_69844992_69959680', 'chr8_69902336_70017024', 'chr8_69959680_70074368', 'chr8_70017024_70131712', 'chr8_70074368_70189056', 'chr8_70131712_70246400', 'chr8_70189056_70303744', 'chr8_70246400_70361088', 'chr8_70303744_70418432', 'chr8_70361088_70475776', 'chr8_70418432_70533120', 'chr8_70475776_70590464', 'chr8_70533120_70647808', 'chr8_70590464_70705152', 'chr8_70647808_70762496', 'chr8_70705152_70819840', 'chr8_70762496_70877184', 'chr8_70819840_70934528', 'chr8_70877184_70991872', 'chr8_70934528_71049216', 'chr8_70991872_71106560', 'chr8_71049216_71163904', 'chr8_71106560_71221248', 'chr8_71163904_71278592', 'chr8_71221248_71335936', 'chr8_71278592_71393280', 'chr8_71335936_71450624', 'chr8_71393280_71507968', 'chr8_71450624_71565312', 'chr8_71507968_71622656', 'chr8_71565312_71680000', 'chr8_71622656_71737344', 'chr8_71680000_71794688', 'chr8_71737344_71852032', 'chr8_71794688_71909376', 'chr8_71852032_71966720', 'chr8_71909376_72024064', 'chr8_71966720_72081408', 'chr8_72024064_72138752', 'chr8_72081408_72196096', 'chr8_72138752_72253440', 'chr8_72196096_72310784', 'chr8_72253440_72368128', 'chr8_72310784_72425472', 'chr8_72368128_72482816', 'chr8_72425472_72540160', 'chr8_72482816_72597504', 'chr8_72540160_72654848', 'chr8_72597504_72712192', 'chr8_72654848_72769536', 'chr8_72712192_72826880', 'chr8_72769536_72884224', 'chr8_72826880_72941568', 'chr8_72884224_72998912', 'chr8_72941568_73056256', 'chr8_72998912_73113600', 'chr8_73056256_73170944', 'chr8_73113600_73228288', 'chr8_73170944_73285632', 'chr8_73228288_73342976', 'chr8_73285632_73400320', 'chr8_73342976_73457664', 'chr8_73400320_73515008', 'chr8_73457664_73572352', 'chr8_73515008_73629696', 'chr8_73572352_73687040', 'chr8_73629696_73744384', 'chr8_73687040_73801728', 'chr8_73744384_73859072', 'chr8_73801728_73916416', 'chr8_73859072_73973760', 'chr8_73916416_74031104', 'chr8_73973760_74088448', 'chr8_74031104_74145792', 'chr8_74088448_74203136', 'chr8_74145792_74260480', 'chr8_74203136_74317824', 'chr8_74260480_74375168', 'chr8_74317824_74432512', 'chr8_74375168_74489856', 'chr8_74432512_74547200', 'chr8_74489856_74604544', 'chr8_74547200_74661888', 'chr8_74604544_74719232', 'chr8_74661888_74776576', 'chr8_74719232_74833920', 'chr8_74776576_74891264', 'chr8_74833920_74948608', 'chr8_74891264_75005952', 'chr8_74948608_75063296', 'chr8_75005952_75120640', 'chr8_75063296_75177984', 'chr8_75120640_75235328', 'chr8_75177984_75292672', 'chr8_75235328_75350016', 'chr8_75292672_75407360', 'chr8_75350016_75464704', 'chr8_75407360_75522048', 'chr8_75464704_75579392', 'chr8_75522048_75636736', 'chr8_75579392_75694080', 'chr8_75636736_75751424', 'chr8_75694080_75808768', 'chr8_75751424_75866112', 'chr8_75808768_75923456', 'chr8_75866112_75980800', 'chr8_75923456_76038144', 'chr8_75980800_76095488', 'chr8_76038144_76152832', 'chr8_76095488_76210176', 'chr8_76152832_76267520', 'chr8_76210176_76324864', 'chr8_76267520_76382208', 'chr8_76324864_76439552', 'chr8_76382208_76496896', 'chr8_76439552_76554240', 'chr8_76496896_76611584', 'chr8_76554240_76668928', 'chr8_76611584_76726272', 'chr8_76668928_76783616', 'chr8_76726272_76840960', 'chr8_76783616_76898304', 'chr8_76840960_76955648', 'chr8_76898304_77012992', 'chr8_76955648_77070336', 'chr8_77012992_77127680', 'chr8_77070336_77185024', 'chr8_77127680_77242368', 'chr8_77185024_77299712', 'chr8_77242368_77357056', 'chr8_77299712_77414400', 'chr8_77357056_77471744', 'chr8_77414400_77529088', 'chr8_77471744_77586432', 'chr8_77529088_77643776', 'chr8_77586432_77701120', 'chr8_77643776_77758464', 'chr8_77701120_77815808', 'chr8_77758464_77873152', 'chr8_77815808_77930496', 'chr8_77873152_77987840', 'chr8_77930496_78045184', 'chr8_77987840_78102528', 'chr8_78045184_78159872', 'chr8_78102528_78217216', 'chr8_78159872_78274560', 'chr8_78217216_78331904', 'chr8_78274560_78389248', 'chr8_78331904_78446592', 'chr8_78389248_78503936', 'chr8_78446592_78561280', 'chr8_78503936_78618624', 'chr8_78561280_78675968', 'chr8_78618624_78733312', 'chr8_78675968_78790656', 'chr8_78733312_78848000', 'chr8_78790656_78905344', 'chr8_78848000_78962688', 'chr8_78905344_79020032', 'chr8_78962688_79077376', 'chr8_79020032_79134720', 'chr8_79077376_79192064', 'chr8_79134720_79249408', 'chr8_79192064_79306752', 'chr8_79249408_79364096', 'chr8_79306752_79421440', 'chr8_79364096_79478784', 'chr8_79421440_79536128', 'chr8_79478784_79593472', 'chr8_79536128_79650816', 'chr8_79593472_79708160', 'chr8_79650816_79765504', 'chr8_79708160_79822848', 'chr8_79765504_79880192', 'chr8_79822848_79937536', 'chr8_79880192_79994880', 'chr8_79937536_80052224', 'chr8_79994880_80109568', 'chr8_80052224_80166912', 'chr8_80109568_80224256', 'chr8_80166912_80281600', 'chr8_80224256_80338944', 'chr8_80281600_80396288', 'chr8_80338944_80453632', 'chr8_80396288_80510976', 'chr8_80453632_80568320', 'chr8_80510976_80625664', 'chr8_80568320_80683008', 'chr8_80625664_80740352', 'chr8_80683008_80797696', 'chr8_80740352_80855040', 'chr8_80797696_80912384', 'chr8_80855040_80969728', 'chr8_80912384_81027072', 'chr8_80969728_81084416', 'chr8_81027072_81141760', 'chr8_81084416_81199104', 'chr8_81141760_81256448', 'chr8_81199104_81313792', 'chr8_81256448_81371136', 'chr8_81313792_81428480', 'chr8_81371136_81485824', 'chr8_81428480_81543168', 'chr8_81485824_81600512', 'chr8_81543168_81657856', 'chr8_81600512_81715200', 'chr8_81657856_81772544', 'chr8_81715200_81829888', 'chr8_81772544_81887232', 'chr8_81829888_81944576', 'chr8_81887232_82001920', 'chr8_81944576_82059264', 'chr8_82001920_82116608', 'chr8_82059264_82173952', 'chr8_82116608_82231296', 'chr8_82173952_82288640', 'chr8_82231296_82345984', 'chr8_82288640_82403328', 'chr8_82345984_82460672', 'chr8_82403328_82518016', 'chr8_82460672_82575360', 'chr8_82518016_82632704', 'chr8_82575360_82690048', 'chr8_82632704_82747392', 'chr8_82690048_82804736', 'chr8_82747392_82862080', 'chr8_82804736_82919424', 'chr8_82862080_82976768', 'chr8_82919424_83034112', 'chr8_82976768_83091456', 'chr8_83034112_83148800', 'chr8_83091456_83206144', 'chr8_83148800_83263488', 'chr8_83206144_83320832', 'chr8_83263488_83378176', 'chr8_83320832_83435520', 'chr8_83378176_83492864', 'chr8_83435520_83550208', 'chr8_83492864_83607552', 'chr8_83550208_83664896', 'chr8_83607552_83722240', 'chr8_83664896_83779584', 'chr8_83722240_83836928', 'chr8_83779584_83894272', 'chr8_83836928_83951616', 'chr8_83894272_84008960', 'chr8_83951616_84066304', 'chr8_84008960_84123648', 'chr8_84066304_84180992', 'chr8_84123648_84238336', 'chr8_84180992_84295680', 'chr8_84238336_84353024', 'chr8_84295680_84410368', 'chr8_84353024_84467712', 'chr8_84410368_84525056', 'chr8_84467712_84582400', 'chr8_84525056_84639744', 'chr8_84582400_84697088', 'chr8_84639744_84754432', 'chr8_84697088_84811776', 'chr8_84754432_84869120', 'chr8_84811776_84926464', 'chr8_84869120_84983808', 'chr8_84926464_85041152', 'chr8_84983808_85098496', 'chr8_85041152_85155840', 'chr8_85098496_85213184', 'chr8_85155840_85270528', 'chr8_85213184_85327872', 'chr8_85270528_85385216', 'chr8_85327872_85442560', 'chr8_85385216_85499904', 'chr8_85442560_85557248', 'chr8_85499904_85614592', 'chr8_85557248_85671936', 'chr8_85614592_85729280', 'chr8_85671936_85786624', 'chr8_85729280_85843968', 'chr8_85786624_85901312', 'chr8_85843968_85958656', 'chr8_85901312_86016000', 'chr8_85958656_86073344', 'chr8_86016000_86130688', 'chr8_86073344_86188032', 'chr8_86130688_86245376', 'chr8_86188032_86302720', 'chr8_86245376_86360064', 'chr8_86302720_86417408', 'chr8_86360064_86474752', 'chr8_86417408_86532096', 'chr8_86474752_86589440', 'chr8_86532096_86646784', 'chr8_86589440_86704128', 'chr8_86646784_86761472', 'chr8_86704128_86818816', 'chr8_86761472_86876160', 'chr8_86818816_86933504', 'chr8_86876160_86990848', 'chr8_86933504_87048192', 'chr8_86990848_87105536', 'chr8_87048192_87162880', 'chr8_87105536_87220224', 'chr8_87162880_87277568', 'chr8_87220224_87334912', 'chr8_87277568_87392256', 'chr8_87334912_87449600', 'chr8_87392256_87506944', 'chr8_87449600_87564288', 'chr8_87506944_87621632', 'chr8_87564288_87678976', 'chr8_87621632_87736320', 'chr8_87678976_87793664', 'chr8_87736320_87851008', 'chr8_87793664_87908352', 'chr8_87851008_87965696', 'chr8_87908352_88023040', 'chr8_87965696_88080384', 'chr8_88023040_88137728', 'chr8_88080384_88195072', 'chr8_88137728_88252416', 'chr8_88195072_88309760', 'chr8_88252416_88367104', 'chr8_88309760_88424448', 'chr8_88367104_88481792', 'chr8_88424448_88539136', 'chr8_88481792_88596480', 'chr8_88539136_88653824', 'chr8_88596480_88711168', 'chr8_88653824_88768512', 'chr8_88711168_88825856', 'chr8_88768512_88883200', 'chr8_88825856_88940544', 'chr8_88883200_88997888', 'chr8_88940544_89055232', 'chr8_88997888_89112576', 'chr8_89055232_89169920', 'chr8_89112576_89227264', 'chr8_89169920_89284608', 'chr8_89227264_89341952', 'chr8_89284608_89399296', 'chr8_89341952_89456640', 'chr8_89399296_89513984', 'chr8_89456640_89571328', 'chr8_89513984_89628672', 'chr8_89571328_89686016', 'chr8_89628672_89743360', 'chr8_89686016_89800704', 'chr8_89743360_89858048', 'chr8_89800704_89915392', 'chr8_89858048_89972736', 'chr8_89915392_90030080', 'chr8_89972736_90087424', 'chr8_90030080_90144768', 'chr8_90087424_90202112', 'chr8_90144768_90259456', 'chr8_90202112_90316800', 'chr8_90259456_90374144', 'chr8_90316800_90431488', 'chr8_90374144_90488832', 'chr8_90431488_90546176', 'chr8_90488832_90603520', 'chr8_90546176_90660864', 'chr8_90603520_90718208', 'chr8_90660864_90775552', 'chr8_90718208_90832896', 'chr8_90775552_90890240', 'chr8_90832896_90947584', 'chr8_90890240_91004928', 'chr8_90947584_91062272', 'chr8_91004928_91119616', 'chr8_91062272_91176960', 'chr8_91119616_91234304', 'chr8_91176960_91291648', 'chr8_91234304_91348992', 'chr8_91291648_91406336', 'chr8_91348992_91463680', 'chr8_91406336_91521024', 'chr8_91463680_91578368', 'chr8_91521024_91635712', 'chr8_91578368_91693056', 'chr8_91635712_91750400', 'chr8_91693056_91807744', 'chr8_91750400_91865088', 'chr8_91807744_91922432', 'chr8_91865088_91979776', 'chr8_91922432_92037120', 'chr8_91979776_92094464', 'chr8_92037120_92151808', 'chr8_92094464_92209152', 'chr8_92151808_92266496', 'chr8_92209152_92323840', 'chr8_92266496_92381184', 'chr8_92323840_92438528', 'chr8_92381184_92495872', 'chr8_92438528_92553216', 'chr8_92495872_92610560', 'chr8_92553216_92667904', 'chr8_92610560_92725248', 'chr8_92667904_92782592', 'chr8_92725248_92839936', 'chr8_92782592_92897280', 'chr8_92839936_92954624', 'chr8_92897280_93011968', 'chr8_92954624_93069312', 'chr8_93011968_93126656', 'chr8_93069312_93184000', 'chr8_93126656_93241344', 'chr8_93184000_93298688', 'chr8_93241344_93356032', 'chr8_93298688_93413376', 'chr8_93356032_93470720', 'chr8_93413376_93528064', 'chr8_93470720_93585408', 'chr8_93528064_93642752', 'chr8_93585408_93700096', 'chr8_93642752_93757440', 'chr8_93700096_93814784', 'chr8_93757440_93872128', 'chr8_93814784_93929472', 'chr8_93872128_93986816', 'chr8_93929472_94044160', 'chr8_93986816_94101504', 'chr8_94044160_94158848', 'chr8_94101504_94216192', 'chr8_94158848_94273536', 'chr8_94216192_94330880', 'chr8_94273536_94388224', 'chr8_94330880_94445568', 'chr8_94388224_94502912', 'chr8_94445568_94560256', 'chr8_94502912_94617600', 'chr8_94560256_94674944', 'chr8_94617600_94732288', 'chr8_94674944_94789632', 'chr8_94732288_94846976', 'chr8_94789632_94904320', 'chr8_94846976_94961664', 'chr8_94904320_95019008', 'chr8_94961664_95076352', 'chr8_95019008_95133696', 'chr8_95076352_95191040', 'chr8_95133696_95248384', 'chr8_95191040_95305728', 'chr8_95248384_95363072', 'chr8_95305728_95420416', 'chr8_95363072_95477760', 'chr8_95420416_95535104', 'chr8_95477760_95592448', 'chr8_95535104_95649792', 'chr8_95592448_95707136', 'chr8_95649792_95764480', 'chr8_95707136_95821824', 'chr8_95764480_95879168', 'chr8_95821824_95936512', 'chr8_95879168_95993856', 'chr8_95936512_96051200', 'chr8_95993856_96108544', 'chr8_96051200_96165888', 'chr8_96108544_96223232', 'chr8_96165888_96280576', 'chr8_96223232_96337920', 'chr8_96280576_96395264', 'chr8_96337920_96452608', 'chr8_96395264_96509952', 'chr8_96452608_96567296', 'chr8_96509952_96624640', 'chr8_96567296_96681984', 'chr8_96624640_96739328', 'chr8_96681984_96796672', 'chr8_96739328_96854016', 'chr8_96796672_96911360', 'chr8_96854016_96968704', 'chr8_96911360_97026048', 'chr8_96968704_97083392', 'chr8_97026048_97140736', 'chr8_97083392_97198080', 'chr8_97140736_97255424', 'chr8_97198080_97312768', 'chr8_97255424_97370112', 'chr8_97312768_97427456', 'chr8_97370112_97484800', 'chr8_97427456_97542144', 'chr8_97484800_97599488', 'chr8_97542144_97656832', 'chr8_97599488_97714176', 'chr8_97656832_97771520', 'chr8_97714176_97828864', 'chr8_97771520_97886208', 'chr8_97828864_97943552', 'chr8_97886208_98000896', 'chr8_97943552_98058240', 'chr8_98000896_98115584', 'chr8_98058240_98172928', 'chr8_98115584_98230272', 'chr8_98172928_98287616', 'chr8_98230272_98344960', 'chr8_98287616_98402304', 'chr8_98344960_98459648', 'chr8_98402304_98516992', 'chr8_98459648_98574336', 'chr8_98516992_98631680', 'chr8_98574336_98689024', 'chr8_98631680_98746368', 'chr8_98689024_98803712', 'chr8_98746368_98861056', 'chr8_98803712_98918400', 'chr8_98861056_98975744', 'chr8_98918400_99033088', 'chr8_98975744_99090432', 'chr8_99033088_99147776', 'chr8_99090432_99205120', 'chr8_99147776_99262464', 'chr8_99205120_99319808', 'chr8_99262464_99377152', 'chr8_99319808_99434496', 'chr8_99377152_99491840', 'chr8_99434496_99549184', 'chr8_99491840_99606528', 'chr8_99549184_99663872', 'chr8_99606528_99721216', 'chr8_99663872_99778560', 'chr8_99721216_99835904', 'chr8_99778560_99893248', 'chr8_99835904_99950592', 'chr8_99893248_100007936', 'chr8_99950592_100065280', 'chr8_100007936_100122624', 'chr8_100065280_100179968', 'chr8_100122624_100237312', 'chr8_100179968_100294656', 'chr8_100237312_100352000', 'chr8_100294656_100409344', 'chr8_100352000_100466688', 'chr8_100409344_100524032', 'chr8_100466688_100581376', 'chr8_100524032_100638720', 'chr8_100581376_100696064', 'chr8_100638720_100753408', 'chr8_100696064_100810752', 'chr8_100753408_100868096', 'chr8_100810752_100925440', 'chr8_100868096_100982784', 'chr8_100925440_101040128', 'chr8_100982784_101097472', 'chr8_101040128_101154816', 'chr8_101097472_101212160', 'chr8_101154816_101269504', 'chr8_101212160_101326848', 'chr8_101269504_101384192', 'chr8_101326848_101441536', 'chr8_101384192_101498880', 'chr8_101441536_101556224', 'chr8_101498880_101613568', 'chr8_101556224_101670912', 'chr8_101613568_101728256', 'chr8_101670912_101785600', 'chr8_101728256_101842944', 'chr8_101785600_101900288', 'chr8_101842944_101957632', 'chr8_101900288_102014976', 'chr8_101957632_102072320', 'chr8_102014976_102129664', 'chr8_102072320_102187008', 'chr8_102129664_102244352', 'chr8_102187008_102301696', 'chr8_102244352_102359040', 'chr8_102301696_102416384', 'chr8_102359040_102473728', 'chr8_102416384_102531072', 'chr8_102473728_102588416', 'chr8_102531072_102645760', 'chr8_102588416_102703104', 'chr8_102645760_102760448', 'chr8_102703104_102817792', 'chr8_102760448_102875136', 'chr8_102817792_102932480', 'chr8_102875136_102989824', 'chr8_102932480_103047168', 'chr8_102989824_103104512', 'chr8_103047168_103161856', 'chr8_103104512_103219200', 'chr8_103161856_103276544', 'chr8_103219200_103333888', 'chr8_103276544_103391232', 'chr8_103333888_103448576', 'chr8_103391232_103505920', 'chr8_103448576_103563264', 'chr8_103505920_103620608', 'chr8_103563264_103677952', 'chr8_103620608_103735296', 'chr8_103677952_103792640', 'chr8_103735296_103849984', 'chr8_103792640_103907328', 'chr8_103849984_103964672', 'chr8_103907328_104022016', 'chr8_103964672_104079360', 'chr8_104022016_104136704', 'chr8_104079360_104194048', 'chr8_104136704_104251392', 'chr8_104194048_104308736', 'chr8_104251392_104366080', 'chr8_104308736_104423424', 'chr8_104366080_104480768', 'chr8_104423424_104538112', 'chr8_104480768_104595456', 'chr8_104538112_104652800', 'chr8_104595456_104710144', 'chr8_104652800_104767488', 'chr8_104710144_104824832', 'chr8_104767488_104882176', 'chr8_104824832_104939520', 'chr8_104882176_104996864', 'chr8_104939520_105054208', 'chr8_104996864_105111552', 'chr8_105054208_105168896', 'chr8_105111552_105226240', 'chr8_105168896_105283584', 'chr8_105226240_105340928', 'chr8_105283584_105398272', 'chr8_105340928_105455616', 'chr8_105398272_105512960', 'chr8_105455616_105570304', 'chr8_105512960_105627648', 'chr8_105570304_105684992', 'chr8_105627648_105742336', 'chr8_105684992_105799680', 'chr8_105742336_105857024', 'chr8_105799680_105914368', 'chr8_105857024_105971712', 'chr8_105914368_106029056', 'chr8_105971712_106086400', 'chr8_106029056_106143744', 'chr8_106086400_106201088', 'chr8_106143744_106258432', 'chr8_106201088_106315776', 'chr8_106258432_106373120', 'chr8_106315776_106430464', 'chr8_106373120_106487808', 'chr8_106430464_106545152', 'chr8_106487808_106602496', 'chr8_106545152_106659840', 'chr8_106602496_106717184', 'chr8_106659840_106774528', 'chr8_106717184_106831872', 'chr8_106774528_106889216', 'chr8_106831872_106946560', 'chr8_106889216_107003904', 'chr8_106946560_107061248', 'chr8_107003904_107118592', 'chr8_107061248_107175936', 'chr8_107118592_107233280', 'chr8_107175936_107290624', 'chr8_107233280_107347968', 'chr8_107290624_107405312', 'chr8_107347968_107462656', 'chr8_107405312_107520000', 'chr8_107462656_107577344', 'chr8_107520000_107634688', 'chr8_107577344_107692032', 'chr8_107634688_107749376', 'chr8_107692032_107806720', 'chr8_107749376_107864064', 'chr8_107806720_107921408', 'chr8_107864064_107978752', 'chr8_107921408_108036096', 'chr8_107978752_108093440', 'chr8_108036096_108150784', 'chr8_108093440_108208128', 'chr8_108150784_108265472', 'chr8_108208128_108322816', 'chr8_108265472_108380160', 'chr8_108322816_108437504', 'chr8_108380160_108494848', 'chr8_108437504_108552192', 'chr8_108494848_108609536', 'chr8_108552192_108666880', 'chr8_108609536_108724224', 'chr8_108666880_108781568', 'chr8_108724224_108838912', 'chr8_108781568_108896256', 'chr8_108838912_108953600', 'chr8_108896256_109010944', 'chr8_108953600_109068288', 'chr8_109010944_109125632', 'chr8_109068288_109182976', 'chr8_109125632_109240320', 'chr8_109182976_109297664', 'chr8_109240320_109355008', 'chr8_109297664_109412352', 'chr8_109355008_109469696', 'chr8_109412352_109527040', 'chr8_109469696_109584384', 'chr8_109527040_109641728', 'chr8_109584384_109699072', 'chr8_109641728_109756416', 'chr8_109699072_109813760', 'chr8_109756416_109871104', 'chr8_109813760_109928448', 'chr8_109871104_109985792', 'chr8_109928448_110043136', 'chr8_109985792_110100480', 'chr8_110043136_110157824', 'chr8_110100480_110215168', 'chr8_110157824_110272512', 'chr8_110215168_110329856', 'chr8_110272512_110387200', 'chr8_110329856_110444544', 'chr8_110387200_110501888', 'chr8_110444544_110559232', 'chr8_110501888_110616576', 'chr8_110559232_110673920', 'chr8_110616576_110731264', 'chr8_110673920_110788608', 'chr8_110731264_110845952', 'chr8_110788608_110903296', 'chr8_110845952_110960640', 'chr8_110903296_111017984', 'chr8_110960640_111075328', 'chr8_111017984_111132672', 'chr8_111075328_111190016', 'chr8_111132672_111247360', 'chr8_111190016_111304704', 'chr8_111247360_111362048', 'chr8_111304704_111419392', 'chr8_111362048_111476736', 'chr8_111419392_111534080', 'chr8_111476736_111591424', 'chr8_111534080_111648768', 'chr8_111591424_111706112', 'chr8_111648768_111763456', 'chr8_111706112_111820800', 'chr8_111763456_111878144', 'chr8_111820800_111935488', 'chr8_111878144_111992832', 'chr8_111935488_112050176', 'chr8_111992832_112107520', 'chr8_112050176_112164864', 'chr8_112107520_112222208', 'chr8_112164864_112279552', 'chr8_112222208_112336896', 'chr8_112279552_112394240', 'chr8_112336896_112451584', 'chr8_112394240_112508928', 'chr8_112451584_112566272', 'chr8_112508928_112623616', 'chr8_112566272_112680960', 'chr8_112623616_112738304', 'chr8_112680960_112795648', 'chr8_112738304_112852992', 'chr8_112795648_112910336', 'chr8_112852992_112967680', 'chr8_112910336_113025024', 'chr8_112967680_113082368', 'chr8_113025024_113139712', 'chr8_113082368_113197056', 'chr8_113139712_113254400', 'chr8_113197056_113311744', 'chr8_113254400_113369088', 'chr8_113311744_113426432', 'chr8_113369088_113483776', 'chr8_113426432_113541120', 'chr8_113483776_113598464', 'chr8_113541120_113655808', 'chr8_113598464_113713152', 'chr8_113655808_113770496', 'chr8_113713152_113827840', 'chr8_113770496_113885184', 'chr8_113827840_113942528', 'chr8_113885184_113999872', 'chr8_113942528_114057216', 'chr8_113999872_114114560', 'chr8_114057216_114171904', 'chr8_114114560_114229248', 'chr8_114171904_114286592', 'chr8_114229248_114343936', 'chr8_114286592_114401280', 'chr8_114343936_114458624', 'chr8_114401280_114515968', 'chr8_114458624_114573312', 'chr8_114515968_114630656', 'chr8_114573312_114688000', 'chr8_114630656_114745344', 'chr8_114688000_114802688', 'chr8_114745344_114860032', 'chr8_114802688_114917376', 'chr8_114860032_114974720', 'chr8_114917376_115032064', 'chr8_114974720_115089408', 'chr8_115032064_115146752', 'chr8_115089408_115204096', 'chr8_115146752_115261440', 'chr8_115204096_115318784', 'chr8_115261440_115376128', 'chr8_115318784_115433472', 'chr8_115376128_115490816', 'chr8_115433472_115548160', 'chr8_115490816_115605504', 'chr8_115548160_115662848', 'chr8_115605504_115720192', 'chr8_115662848_115777536', 'chr8_115720192_115834880', 'chr8_115777536_115892224', 'chr8_115834880_115949568', 'chr8_115892224_116006912', 'chr8_115949568_116064256', 'chr8_116006912_116121600', 'chr8_116064256_116178944', 'chr8_116121600_116236288', 'chr8_116178944_116293632', 'chr8_116236288_116350976', 'chr8_116293632_116408320', 'chr8_116350976_116465664', 'chr8_116408320_116523008', 'chr8_116465664_116580352', 'chr8_116523008_116637696', 'chr8_116580352_116695040', 'chr8_116637696_116752384', 'chr8_116695040_116809728', 'chr8_116752384_116867072', 'chr8_116809728_116924416', 'chr8_116867072_116981760', 'chr8_116924416_117039104', 'chr8_116981760_117096448', 'chr8_117039104_117153792', 'chr8_117096448_117211136', 'chr8_117153792_117268480', 'chr8_117211136_117325824', 'chr8_117268480_117383168', 'chr8_117325824_117440512', 'chr8_117383168_117497856', 'chr8_117440512_117555200', 'chr8_117497856_117612544', 'chr8_117555200_117669888', 'chr8_117612544_117727232', 'chr8_117669888_117784576', 'chr8_117727232_117841920', 'chr8_117784576_117899264', 'chr8_117841920_117956608', 'chr8_117899264_118013952', 'chr8_117956608_118071296', 'chr8_118013952_118128640', 'chr8_118071296_118185984', 'chr8_118128640_118243328', 'chr8_118185984_118300672', 'chr8_118243328_118358016', 'chr8_118300672_118415360', 'chr8_118358016_118472704', 'chr8_118415360_118530048', 'chr8_118472704_118587392', 'chr8_118530048_118644736', 'chr8_118587392_118702080', 'chr8_118644736_118759424', 'chr8_118702080_118816768', 'chr8_118759424_118874112', 'chr8_118816768_118931456', 'chr8_118874112_118988800', 'chr8_118931456_119046144', 'chr8_118988800_119103488', 'chr8_119046144_119160832', 'chr8_119103488_119218176', 'chr8_119160832_119275520', 'chr8_119218176_119332864', 'chr8_119275520_119390208', 'chr8_119332864_119447552', 'chr8_119390208_119504896', 'chr8_119447552_119562240', 'chr8_119504896_119619584', 'chr8_119562240_119676928', 'chr8_119619584_119734272', 'chr8_119676928_119791616', 'chr8_119734272_119848960', 'chr8_119791616_119906304', 'chr8_119848960_119963648', 'chr8_119906304_120020992', 'chr8_119963648_120078336', 'chr8_120020992_120135680', 'chr8_120078336_120193024', 'chr8_120135680_120250368', 'chr8_120193024_120307712', 'chr8_120250368_120365056', 'chr8_120307712_120422400', 'chr8_120365056_120479744', 'chr8_120422400_120537088', 'chr8_120479744_120594432', 'chr8_120537088_120651776', 'chr8_120594432_120709120', 'chr8_120651776_120766464', 'chr8_120709120_120823808', 'chr8_120766464_120881152', 'chr8_120823808_120938496', 'chr8_120881152_120995840', 'chr8_120938496_121053184', 'chr8_120995840_121110528', 'chr8_121053184_121167872', 'chr8_121110528_121225216', 'chr8_121167872_121282560', 'chr8_121225216_121339904', 'chr8_121282560_121397248', 'chr8_121339904_121454592', 'chr8_121397248_121511936', 'chr8_121454592_121569280', 'chr8_121511936_121626624', 'chr8_121569280_121683968', 'chr8_121626624_121741312', 'chr8_121683968_121798656', 'chr8_121741312_121856000', 'chr8_121798656_121913344', 'chr8_121856000_121970688', 'chr8_121913344_122028032', 'chr8_121970688_122085376', 'chr8_122028032_122142720', 'chr8_122085376_122200064', 'chr8_122142720_122257408', 'chr8_122200064_122314752', 'chr8_122257408_122372096', 'chr8_122314752_122429440', 'chr8_122372096_122486784', 'chr8_122429440_122544128', 'chr8_122486784_122601472', 'chr8_122544128_122658816', 'chr8_122601472_122716160', 'chr8_122658816_122773504', 'chr8_122716160_122830848', 'chr8_122773504_122888192', 'chr8_122830848_122945536', 'chr8_122888192_123002880', 'chr8_122945536_123060224', 'chr8_123002880_123117568', 'chr8_123060224_123174912', 'chr8_123117568_123232256', 'chr8_123174912_123289600', 'chr8_123232256_123346944', 'chr8_123289600_123404288', 'chr8_123346944_123461632', 'chr8_123404288_123518976', 'chr8_123461632_123576320', 'chr8_123518976_123633664', 'chr8_123576320_123691008', 'chr8_123633664_123748352', 'chr8_123691008_123805696', 'chr8_123748352_123863040', 'chr8_123805696_123920384', 'chr8_123863040_123977728', 'chr8_123920384_124035072', 'chr8_123977728_124092416', 'chr8_124035072_124149760', 'chr8_124092416_124207104', 'chr8_124149760_124264448', 'chr8_124207104_124321792', 'chr8_124264448_124379136', 'chr8_124321792_124436480', 'chr8_124379136_124493824', 'chr8_124436480_124551168', 'chr8_124493824_124608512', 'chr8_124551168_124665856', 'chr8_124608512_124723200', 'chr8_124665856_124780544', 'chr8_124723200_124837888', 'chr8_124780544_124895232', 'chr8_124837888_124952576', 'chr8_124895232_125009920', 'chr8_124952576_125067264', 'chr8_125009920_125124608', 'chr8_125067264_125181952', 'chr8_125124608_125239296', 'chr8_125181952_125296640', 'chr8_125239296_125353984', 'chr8_125296640_125411328', 'chr8_125353984_125468672', 'chr8_125411328_125526016', 'chr8_125468672_125583360', 'chr8_125526016_125640704', 'chr8_125583360_125698048', 'chr8_125640704_125755392', 'chr8_125698048_125812736', 'chr8_125755392_125870080', 'chr8_125812736_125927424', 'chr8_125870080_125984768', 'chr8_125927424_126042112', 'chr8_125984768_126099456', 'chr8_126042112_126156800', 'chr8_126099456_126214144', 'chr8_126156800_126271488', 'chr8_126214144_126328832', 'chr8_126271488_126386176', 'chr8_126328832_126443520', 'chr8_126386176_126500864', 'chr8_126443520_126558208', 'chr8_126500864_126615552', 'chr8_126558208_126672896', 'chr8_126615552_126730240', 'chr8_126672896_126787584', 'chr8_126730240_126844928', 'chr8_126787584_126902272', 'chr8_126844928_126959616', 'chr8_126902272_127016960', 'chr8_126959616_127074304', 'chr8_127016960_127131648', 'chr8_127074304_127188992', 'chr8_127131648_127246336', 'chr8_127188992_127303680', 'chr8_127246336_127361024', 'chr8_127303680_127418368', 'chr8_127361024_127475712', 'chr8_127418368_127533056', 'chr8_127475712_127590400', 'chr8_127533056_127647744', 'chr8_127590400_127705088', 'chr8_127647744_127762432', 'chr8_127705088_127819776', 'chr8_127762432_127877120', 'chr8_127819776_127934464', 'chr8_127877120_127991808', 'chr8_127934464_128049152', 'chr8_127991808_128106496', 'chr8_128049152_128163840', 'chr8_128106496_128221184', 'chr8_128163840_128278528', 'chr8_128221184_128335872', 'chr8_128278528_128393216', 'chr8_128335872_128450560', 'chr8_128393216_128507904', 'chr8_128450560_128565248', 'chr8_128507904_128622592', 'chr8_128565248_128679936', 'chr8_128622592_128737280', 'chr8_128679936_128794624', 'chr8_128737280_128851968', 'chr8_128794624_128909312', 'chr8_128851968_128966656', 'chr8_128909312_129024000', 'chr8_128966656_129081344', 'chr8_129024000_129138688', 'chr8_129081344_129196032', 'chr8_129138688_129253376', 'chr8_129196032_129310720', 'chr8_129253376_129368064', 'chr8_129310720_129425408', 'chr8_129368064_129482752', 'chr8_129425408_129540096', 'chr8_129482752_129597440', 'chr8_129540096_129654784', 'chr8_129597440_129712128', 'chr8_129654784_129769472', 'chr8_129712128_129826816', 'chr8_129769472_129884160', 'chr8_129826816_129941504', 'chr8_129884160_129998848', 'chr8_129941504_130056192', 'chr8_129998848_130113536', 'chr8_130056192_130170880', 'chr8_130113536_130228224', 'chr8_130170880_130285568', 'chr8_130228224_130342912', 'chr8_130285568_130400256', 'chr8_130342912_130457600', 'chr8_130400256_130514944', 'chr8_130457600_130572288', 'chr8_130514944_130629632', 'chr8_130572288_130686976', 'chr8_130629632_130744320', 'chr8_130686976_130801664', 'chr8_130744320_130859008', 'chr8_130801664_130916352', 'chr8_130859008_130973696', 'chr8_130916352_131031040', 'chr8_130973696_131088384', 'chr8_131031040_131145728', 'chr8_131088384_131203072', 'chr8_131145728_131260416', 'chr8_131203072_131317760', 'chr8_131260416_131375104', 'chr8_131317760_131432448', 'chr8_131375104_131489792', 'chr8_131432448_131547136', 'chr8_131489792_131604480', 'chr8_131547136_131661824', 'chr8_131604480_131719168', 'chr8_131661824_131776512', 'chr8_131719168_131833856', 'chr8_131776512_131891200', 'chr8_131833856_131948544', 'chr8_131891200_132005888', 'chr8_131948544_132063232', 'chr8_132005888_132120576', 'chr8_132063232_132177920', 'chr8_132120576_132235264', 'chr8_132177920_132292608', 'chr8_132235264_132349952', 'chr8_132292608_132407296', 'chr8_132349952_132464640', 'chr8_132407296_132521984', 'chr8_132464640_132579328', 'chr8_132521984_132636672', 'chr8_132579328_132694016', 'chr8_132636672_132751360', 'chr8_132694016_132808704', 'chr8_132751360_132866048', 'chr8_132808704_132923392', 'chr8_132866048_132980736', 'chr8_132923392_133038080', 'chr8_132980736_133095424', 'chr8_133038080_133152768', 'chr8_133095424_133210112', 'chr8_133152768_133267456', 'chr8_133210112_133324800', 'chr8_133267456_133382144', 'chr8_133324800_133439488', 'chr8_133382144_133496832', 'chr8_133439488_133554176', 'chr8_133496832_133611520', 'chr8_133554176_133668864', 'chr8_133611520_133726208', 'chr8_133668864_133783552', 'chr8_133726208_133840896', 'chr8_133783552_133898240', 'chr8_133840896_133955584', 'chr8_133898240_134012928', 'chr8_133955584_134070272', 'chr8_134012928_134127616', 'chr8_134070272_134184960', 'chr8_134127616_134242304', 'chr8_134184960_134299648', 'chr8_134242304_134356992', 'chr8_134299648_134414336', 'chr8_134356992_134471680', 'chr8_134414336_134529024', 'chr8_134471680_134586368', 'chr8_134529024_134643712', 'chr8_134586368_134701056', 'chr8_134643712_134758400', 'chr8_134701056_134815744', 'chr8_134758400_134873088', 'chr8_134815744_134930432', 'chr8_134873088_134987776', 'chr8_134930432_135045120', 'chr8_134987776_135102464', 'chr8_135045120_135159808', 'chr8_135102464_135217152', 'chr8_135159808_135274496', 'chr8_135217152_135331840', 'chr8_135274496_135389184', 'chr8_135331840_135446528', 'chr8_135389184_135503872', 'chr8_135446528_135561216', 'chr8_135503872_135618560', 'chr8_135561216_135675904', 'chr8_135618560_135733248', 'chr8_135675904_135790592', 'chr8_135733248_135847936', 'chr8_135790592_135905280', 'chr8_135847936_135962624', 'chr8_135905280_136019968', 'chr8_135962624_136077312', 'chr8_136019968_136134656', 'chr8_136077312_136192000', 'chr8_136134656_136249344', 'chr8_136192000_136306688', 'chr8_136249344_136364032', 'chr8_136306688_136421376', 'chr8_136364032_136478720', 'chr8_136421376_136536064', 'chr8_136478720_136593408', 'chr8_136536064_136650752', 'chr8_136593408_136708096', 'chr8_136650752_136765440', 'chr8_136708096_136822784', 'chr8_136765440_136880128', 'chr8_136822784_136937472', 'chr8_136880128_136994816', 'chr8_136937472_137052160', 'chr8_136994816_137109504', 'chr8_137052160_137166848', 'chr8_137109504_137224192', 'chr8_137166848_137281536', 'chr8_137224192_137338880', 'chr8_137281536_137396224', 'chr8_137338880_137453568', 'chr8_137396224_137510912', 'chr8_137453568_137568256', 'chr8_137510912_137625600', 'chr8_137568256_137682944', 'chr8_137625600_137740288', 'chr8_137682944_137797632', 'chr8_137740288_137854976', 'chr8_137797632_137912320', 'chr8_137854976_137969664', 'chr8_137912320_138027008', 'chr8_137969664_138084352', 'chr8_138027008_138141696', 'chr8_138084352_138199040', 'chr8_138141696_138256384', 'chr8_138199040_138313728', 'chr8_138256384_138371072', 'chr8_138313728_138428416', 'chr8_138371072_138485760', 'chr8_138428416_138543104', 'chr8_138485760_138600448', 'chr8_138543104_138657792', 'chr8_138600448_138715136', 'chr8_138657792_138772480', 'chr8_138715136_138829824', 'chr8_138772480_138887168', 'chr8_138829824_138944512', 'chr8_138887168_139001856', 'chr8_138944512_139059200', 'chr8_139001856_139116544', 'chr8_139059200_139173888', 'chr8_139116544_139231232', 'chr8_139173888_139288576', 'chr8_139231232_139345920', 'chr8_139288576_139403264', 'chr8_139345920_139460608', 'chr8_139403264_139517952', 'chr8_139460608_139575296', 'chr8_139517952_139632640', 'chr8_139575296_139689984', 'chr8_139632640_139747328', 'chr8_139689984_139804672', 'chr8_139747328_139862016', 'chr8_139804672_139919360', 'chr8_139862016_139976704', 'chr8_139919360_140034048', 'chr8_139976704_140091392', 'chr8_140034048_140148736', 'chr8_140091392_140206080', 'chr8_140148736_140263424', 'chr8_140206080_140320768', 'chr8_140263424_140378112', 'chr8_140320768_140435456', 'chr8_140378112_140492800', 'chr8_140435456_140550144', 'chr8_140492800_140607488', 'chr8_140550144_140664832', 'chr8_140607488_140722176', 'chr8_140664832_140779520', 'chr8_140722176_140836864', 'chr8_140779520_140894208', 'chr8_140836864_140951552', 'chr8_140894208_141008896', 'chr8_140951552_141066240', 'chr8_141008896_141123584', 'chr8_141066240_141180928', 'chr8_141123584_141238272', 'chr8_141180928_141295616', 'chr8_141238272_141352960', 'chr8_141295616_141410304', 'chr8_141352960_141467648', 'chr8_141410304_141524992', 'chr8_141467648_141582336', 'chr8_141524992_141639680', 'chr8_141582336_141697024', 'chr8_141639680_141754368', 'chr8_141697024_141811712', 'chr8_141754368_141869056', 'chr8_141811712_141926400', 'chr8_141869056_141983744', 'chr8_141926400_142041088', 'chr8_141983744_142098432', 'chr8_142041088_142155776', 'chr8_142098432_142213120', 'chr8_142155776_142270464', 'chr8_142213120_142327808', 'chr8_142270464_142385152', 'chr8_142327808_142442496', 'chr8_142385152_142499840', 'chr8_142442496_142557184', 'chr8_142499840_142614528', 'chr8_142557184_142671872', 'chr8_142614528_142729216', 'chr8_142671872_142786560', 'chr8_142729216_142843904', 'chr8_142786560_142901248', 'chr8_142843904_142958592', 'chr8_142901248_143015936', 'chr8_142958592_143073280', 'chr8_143015936_143130624', 'chr8_143073280_143187968', 'chr8_143130624_143245312', 'chr8_143187968_143302656', 'chr8_143245312_143360000', 'chr8_143302656_143417344', 'chr8_143360000_143474688', 'chr8_143417344_143532032', 'chr8_143474688_143589376', 'chr8_143532032_143646720', 'chr8_143589376_143704064', 'chr8_143646720_143761408', 'chr8_143704064_143818752', 'chr8_143761408_143876096', 'chr8_143818752_143933440', 'chr8_143876096_143990784', 'chr8_143933440_144048128', 'chr8_143990784_144105472', 'chr8_144048128_144162816', 'chr8_144105472_144220160', 'chr8_144162816_144277504', 'chr8_144220160_144334848', 'chr8_144277504_144392192', 'chr8_144334848_144449536', 'chr8_144392192_144506880', 'chr8_144449536_144564224', 'chr8_144506880_144621568', 'chr8_144564224_144678912', 'chr8_144621568_144736256', 'chr8_144678912_144793600', 'chr8_144736256_144850944', 'chr8_144793600_144908288', 'chr8_144850944_144965632', 'chr8_144908288_145022976', 'chr8_144965632_145080320', 'chr8_145022976_145137664', 'chr8_145080320_145195008']</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(intervals))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2531</code></pre>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize with first interval</span></span>
<span id="cb9-2">interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> intervals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb9-3">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_predictions.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb9-4">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [f[interval][()][<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>), :]]</span>
<span id="cb9-5"></span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> intervals:</span>
<span id="cb9-8">    f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h5py.File(predictions_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_predictions.h5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb9-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">slice</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f[interval][()][<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">672</span>), :]</span>
<span id="cb9-10">    predictions.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">slice</span>)</span>
<span id="cb9-11"></span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>FileNotFoundError: [Errno 2] Unable to open file (unable to open file: name = '/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_test/predictions_folder/reference_enformer_all_regions/predictions_2023-07-21/enformer_predictions/reference_enformer/haplotype0/chr8_145080320_145195008_predictions.h5', errno = 2, error message = 'No such file or directory', flags = 0, o_flags = 0)</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/running-enformer-on-all-regions-reference/reference_epigenome.html</guid>
  <pubDate>Thu, 03 Aug 2023 02:47:03 GMT</pubDate>
</item>
<item>
  <title>GENETIC MEDICINE DEEP LEARNING HACKATHON 2022</title>
  <link>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/hackathon-enformer-usage/Hackathon_enformer_usage_participant.html</link>
  <description><![CDATA[ 




<section id="enformer-usage-notebook---participant" class="level3">
<h3 class="anchored" data-anchor-id="enformer-usage-notebook---participant">ENFORMER USAGE NOTEBOOK - PARTICIPANT</h3>
<p><strong>Authors</strong>: Saideep Gona, Temidayo Adeluwa</p>
<p><strong>Acknowledgement</strong>: - Boxiang Liu - Festus Nyasimi (for providing us with Predixcan predictions)</p>
<p><strong>Date</strong>: Saturday April 2, 2022</p>
<p>Copyright 2021 DeepMind Technologies Limited</p>
<p>Licensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p>
<pre><code> https://www.apache.org/licenses/LICENSE-2.0</code></pre>
<p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>
</section>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this notebook, we explore how Enformer can be used to predict the expression of protein-coding genes. We utilized some code from the <a href="https://colab.research.google.com/github/deepmind/deepmind_research/blob/master/enformer/enformer-usage.ipynb">original Enformer usage colab notebook</a>. Here, we showcase how the Enformer model can be used to predict gene expression on a GEUVADIS/1000 genomes dataset, and compare the predictions with true expression.</p>
<p><strong>“Effective gene expression prediction from sequence by integrating long-range interactions”</strong></p>
<p>Žiga Avsec, Vikram Agarwal, Daniel Visentin, Joseph R. Ledsam, Agnieszka Grabska-Barwinska, Kyle R. Taylor, Yannis Assael, John Jumper, Pushmeet Kohli, David R. Kelley</p>
<section id="steps" class="level3">
<h3 class="anchored" data-anchor-id="steps">Steps</h3>
<p>This notebook demonstrates how to - Prepare inputs for Enformer to make predictions - Make predictions with Enformer and produce figures - Compare predictions with true expression</p>
</section>
</section>
<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<p>Google Colab gives us some GPU access. This limited GPU is available to anyone with a Google account, who has signed up to use Colaboratory. We will begin by changing the runtime type to GPU. Follow the instruction below by clicking on “Runtime -&gt; Change runtime type -&gt; GPU” in the menu bar below the title of this notebook.</p>
<p><strong>Start the colab kernel with GPU</strong>: Runtime -&gt; Change runtime type -&gt; GPU</p>
<p>Below, we import tensorflow as tf, and check that the runtime has been changed to GPU.</p>
<p>kipoiseq is a package that helps us to extract sequences from fasta files given some intervals. We will install the package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make sure the GPU is enabled </span></span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Start the colab kernel with GPU: Runtime -&gt; Change runtime type -&gt; GPU'</span></span>
<span id="cb2-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Num GPUs Available: "</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tf.config.list_physical_devices(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GPU'</span>)))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You can ignore the pyYAML error</span></span>
<span id="cb3-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>echo $SHELL</span>
<span id="cb3-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>echo $PATH</span></code></pre></div>
</div>
<p>Biopython is a python package that helps us do many bioinfomatic analysis in python</p>
<div class="cell" data-outputid="ed234327-29b9-4d20-c68b-f4a290baad9b">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!pip install Biopython</span></span></code></pre></div>
</div>
<section id="setting-up-our-environments" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-our-environments">Setting up our environments</h3>
<p>We need to have some packages imported to help us do cool stuff.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow_hub <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> hub <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for interacting with saved models and tensorflow hub</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gzip <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating compressed files</span></span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kipoiseq <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating fasta files</span></span>
<span id="cb5-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kipoiseq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Interval <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># same as above, really</span></span>
<span id="cb5-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyfaidx <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to index our reference genome file</span></span>
<span id="cb5-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for manipulating dataframes</span></span>
<span id="cb5-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for numerical computations</span></span>
<span id="cb5-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for plotting</span></span>
<span id="cb5-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for plotting</span></span>
<span id="cb5-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for plotting</span></span>
<span id="cb5-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pickle <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for saving large objects</span></span>
<span id="cb5-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># functions for interacting with the operating system</span></span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb5-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'retina'</span></span></code></pre></div>
</div>
<p><strong>Optional</strong></p>
<p>You may want to store your results. Google Drive gives about 15gb worth of storage space, used for all your files and emails.</p>
<p>Here, you can mount your Google Drive using the next line of code. You will need to provide permission access.</p>
<p>The line after that will automatically create a folder called “Enformer_Hackathon_2022” in your Google Drive.</p>
<div class="cell" data-outputid="4e8c150c-36e1-4ae0-be1f-9acac53236a0">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#from google.colab import drive</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#drive.mount('/content/drive')</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!mkdir -p "/content/drive/MyDrive/Enformer_Hackathon_2022/results/"</span></span></code></pre></div>
</div>
<p>Next,</p>
<p>We want to define some paths to save downloaded files for the duration of this notebook. These will be wiped off by Google as soon as we are done.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">transform_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://dm-enformer/models/enformer.finetuned.SAD.robustscaler-PCA500-robustscaler.transform.pkl'</span></span>
<span id="cb8-2">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://tfhub.dev/deepmind/enformer/1'</span></span>
<span id="cb8-3">fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/genome.fa'</span></span></code></pre></div>
</div>
<p>We may inspect the tracks used to train the model. The CAGE prediction corresponding to B lymphoblastoid cell line is index 5110. We use B lymphoblastoid cell line predictions here because that is the cell line used to generate GEUVADIS gene expression data. You can copy the https link, paste in another tab in your browser and look through the large txt file for other tracks.</p>
<div class="cell" data-outputid="1c912c07-7a2e-46c4-fa8d-33ba698f030d">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download targets from Basenji2 dataset</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cite: Kelley et al Cross-species regulatory sequence activity prediction. PLoS Comput. Biol. 16, e1008050 (2020).</span></span>
<span id="cb9-3">targets_txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/calico/basenji/master/manuscripts/cross2020/targets_human.txt'</span></span>
<span id="cb9-4">df_targets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(targets_txt, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb9-5">df_targets[df_targets.index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>]</span></code></pre></div>
</div>
</section>
<section id="download-files" class="level3">
<h3 class="anchored" data-anchor-id="download-files">Download files</h3>
<p>We need to download some files. Give it a moment. We will download the following files: - The reference genome fasta file (we will also index this file in the process) - A text file for the transcription start sites for each chromosome - Per chromosome files that has annotation for the genes - A compressed file that contains the variant bed files for the genes and their locations.</p>
<p>Credit to Genome Reference Consortium: https://www.ncbi.nlm.nih.gov/grc</p>
<p>Schneider et al 2017 http://dx.doi.org/10.1101/gr.213611.116: Evaluation of GRCh38 and de novo haploid genome assemblies demonstrates the enduring quality of the reference assembly</p>
<p>Make a data directory, and download the necessary bed files and chromosome annotation files</p>
<p><strong>NB:</strong> You may decide to download these files into your “/content/drive/MyDrive/Enformer_Hackathon_2022/” directory. <strong>You don’t need to do this</strong>. But if you want permanent access to the files we use in this notebook, you can change the path from “/home/s1mi/enformer_tutorial/” to “/content/drive/MyDrive/Enformer_Hackathon_2022/”, and modify what you need accordingly.</p>
<p>The next line of code will download the reference genome fasta file and index this file.</p>
<div class="cell" data-outputid="09b1c79a-2b86-4555-f16b-36313b4d5dd9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reference genome and indexed</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!wget -O - https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz | gunzip -c &gt; {fasta_file}</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#pyfaidx.Faidx(fasta_file)</span></span></code></pre></div>
</div>
<p>The next lines of code will download the variation bed files, and we have created links to help us download the variation bed files for each chromosome, for each gene.</p>
<div class="cell" data-outputid="9de5f0ba-973b-441a-a498-618066bdd40f">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">chrom_bed_downloads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://uchicago.box.com/shared/static/du77wf31li38tciv8imivwu57svae03p.csv"</span>)</span>
<span id="cb11-2">chrom_bed_downloads.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chrom_bed_downloads[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chroms"</span>]</span>
<span id="cb11-3"></span>
<span id="cb11-4">chrom_bed_downloads.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<p>We will define a function to help us download bed variation files for a given gene or list of genes</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> download_chrom_beds(chromosome, genes, downloads_table<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chrom_bed_downloads):</span>
<span id="cb12-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Downloads bed/variation files for a chromosome and list of genes</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb12-5"></span>
<span id="cb12-6">  link <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> downloads_table.loc[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(chromosome), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"link"</span>]</span>
<span id="cb12-7">  chr_which <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> chromosome</span>
<span id="cb12-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> genes:</span>
<span id="cb12-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.exists(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/individual_beds/chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.bed'</span>): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if the file is in the folder, no need to download again</span></span>
<span id="cb12-10">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb12-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>curl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>L {link} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>chr_{chromosome}_bed.tar.gz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> cd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> tar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>zxf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>chr_{chromosome}_bed.tar.gz .<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>individual_beds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>{chr_which}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>{chr_which}_{gene}.bed</span>
<span id="cb12-12"></span>
<span id="cb12-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove the download tar.gz file</span></span>
<span id="cb12-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>chr_{chromosome}_bed.tar.gz</span></code></pre></div>
</div>
<p>We don’t need this function yet. But we can test out how it works.</p>
<p>Assuming we want to download the variation files for ‘ERAP1’, which is located on chromosome 5…</p>
<p>This will download the bed file into /home/s1mi/enformer_tutorial/individual_beds/chr5/</p>
<div class="cell" data-outputid="fbd87143-2693-44b9-941b-b39d856d99f0">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">download_chrom_beds(chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>, genes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>])</span></code></pre></div>
</div>
<p>And when you need the file, you can read it in like…</p>
<div class="cell" data-outputid="b098aa73-1e39-4410-e165-e28f689c42c5">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">erap1_variations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/individual_beds/chr5/chr5_ERAP1.bed'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb14-2">erap1_variations.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<p>You can pass in a list of genes as long as they are all located on that chromosome.</p>
<p>In the next block of code, we download the TSS for each chromosome and the genes in that chromosome, as wells as the per chromosome gene annotations. We need this information to estimate predictions.</p>
<div class="cell" data-outputid="bd64a030-c1c7-4377-f7d9-91834054774b">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!curl -L https://uchicago.box.com/shared/static/perc3uabzzd267cbp8zc0inwgrmur7pu.gz --output /home/s1mi/enformer_tutorial/chr_tss.tar.xz &amp;&amp; cd /home/s1mi/enformer_tutorial/ &amp;&amp; tar -zxf /home/s1mi/enformer_tutorial/chr_tss.tar.xz</span></span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!mkdir -p /home/s1mi/enformer_tutorial/gene_chroms #creates a folder to hold our files</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!curl -L https://uchicago.box.com/shared/static/e2kiwrjlgqqio0pc37a2iz7l5bqbv57u.gz --output /home/s1mi/enformer_tutorial/gene_chroms/gene_chroms.tar.gz &amp;&amp; cd /home/s1mi/enformer_tutorial/gene_chroms/ &amp;&amp; tar -zxf /home/s1mi/enformer_tutorial/gene_chroms/gene_chroms.tar.gz</span></span></code></pre></div>
</div>
</section>
<section id="how-do-we-want-to-go-about-using-enformer-given-all-these-files-we-just-downloaded" class="level3">
<h3 class="anchored" data-anchor-id="how-do-we-want-to-go-about-using-enformer-given-all-these-files-we-just-downloaded">How do we want to go about using Enformer given all these files we just downloaded?</h3>
<p>As we know, enformer’s input is a single strand genome sequence. Yet, we are interested in predicting on population level data which includes individual-specific variation. To get around this limitation, we will treat each individual as the sum of their haplotypes. Using the phased variant data around each gene (stored in the variant bed files) to modify the reference sequence, we can create two distinct haplotype sequences for each individual. The sum of both of Enformer’s haplotype predictions serves as an individual-specific, additive estimate which we can correlate with true predictions. Together, the files we downloaded give us all the information we need to build these haplotype sequences.</p>
<p>Althought enformer predicts a wide array of functional output, we will focus here on gene expression in lymphoblastoid cells allowing for correlation against ground truth Geuvadis gene expression data.</p>
<p>There are many functions that we have defined in the next code block. You can explore them later, but for now, simply run the block by clicking on the play button.</p>
</section>
<section id="code" class="level3">
<h3 class="anchored" data-anchor-id="code">Code</h3>
<p>Next, we have some functions that will help us along the way. Classes and methods defined in this code block can be found in the <a href="https://colab.research.google.com/github/deepmind/deepmind_research/blob/master/enformer/enformer-usage.ipynb">original Enformer usage colab notebook</a>.</p>
<div class="cell" data-outputid="e6a400e0-0c95-486c-fa53-a59c20ffd1f1">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `Enformer`, `EnformerScoreVariantsNormalized`, `EnformerScoreVariantsPCANormalized`,</span></span>
<span id="cb16-2">SEQUENCE_LENGTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">393216</span></span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enformer:</span>
<span id="cb16-5"></span>
<span id="cb16-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url):</span>
<span id="cb16-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hub.load(tfhub_url).model</span>
<span id="cb16-8"></span>
<span id="cb16-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb16-10">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb16-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {k: v.numpy() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> predictions.items()}</span>
<span id="cb16-12"></span>
<span id="cb16-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb16-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> contribution_input_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_sequence,</span>
<span id="cb16-15">                              target_mask, output_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb16-16">    input_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_sequence[tf.newaxis]</span>
<span id="cb16-17"></span>
<span id="cb16-18">    target_mask_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(target_mask)</span>
<span id="cb16-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb16-20">      tape.watch(input_sequence)</span>
<span id="cb16-21">      prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.reduce_sum(</span>
<span id="cb16-22">          target_mask[tf.newaxis] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb16-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(input_sequence)[output_head]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_mask_mass</span>
<span id="cb16-24"></span>
<span id="cb16-25">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(prediction, input_sequence) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_sequence</span>
<span id="cb16-26">    input_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.squeeze(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> tf.reduce_sum(input_grad, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb16-28"></span>
<span id="cb16-29"></span>
<span id="cb16-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsRaw:</span>
<span id="cb16-31"></span>
<span id="cb16-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb16-33">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(tfhub_url)</span>
<span id="cb16-34">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> organism</span>
<span id="cb16-35"></span>
<span id="cb16-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb16-37">    ref_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ref'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb16-38">    alt_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alt'</span>])[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._organism]</span>
<span id="cb16-39"></span>
<span id="cb16-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> alt_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ref_prediction.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb16-41"></span>
<span id="cb16-42"></span>
<span id="cb16-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsNormalized:</span>
<span id="cb16-44"></span>
<span id="cb16-45">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb16-46">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>):</span>
<span id="cb16-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> organism <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transforms only compatible with organism=human'</span></span>
<span id="cb16-48">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb16-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb16-50">      transform_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb16-51">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_pipeline.steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># StandardScaler.</span></span>
<span id="cb16-52"></span>
<span id="cb16-53">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb16-54">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb16-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)</span>
<span id="cb16-56"></span>
<span id="cb16-57"></span>
<span id="cb16-58"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnformerScoreVariantsPCANormalized:</span>
<span id="cb16-59"></span>
<span id="cb16-60">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tfhub_url, transform_pkl_path,</span>
<span id="cb16-61">               organism<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>, num_top_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>):</span>
<span id="cb16-62">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnformerScoreVariantsRaw(tfhub_url, organism)</span>
<span id="cb16-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.io.gfile.GFile(transform_pkl_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb16-64">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(f)</span>
<span id="cb16-65">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_top_features</span>
<span id="cb16-66"></span>
<span id="cb16-67">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> predict_on_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, inputs):</span>
<span id="cb16-68">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._model.predict_on_batch(inputs)</span>
<span id="cb16-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._transform.transform(scores)[:, :<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._num_top_features]</span>
<span id="cb16-70"></span>
<span id="cb16-71"></span>
<span id="cb16-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(avsec): Add feature description: Either PCX, or full names.</span></span>
<span id="cb16-73"></span>
<span id="cb16-74"></span>
<span id="cb16-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `variant_centered_sequences`</span></span>
<span id="cb16-76"></span>
<span id="cb16-77"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> FastaStringExtractor:</span>
<span id="cb16-78"></span>
<span id="cb16-79">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, fasta_file):</span>
<span id="cb16-80">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pyfaidx.Fasta(fasta_file)</span>
<span id="cb16-81">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.items()}</span>
<span id="cb16-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import pd.Interval as Interval</span></span>
<span id="cb16-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, interval: Interval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb16-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truncate interval if it extends beyond the chromosome lengths.</span></span>
<span id="cb16-85">        chromosome_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._chromosome_sizes[interval.chrom]</span>
<span id="cb16-86">        trimmed_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interval(interval.chrom,</span>
<span id="cb16-87">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb16-88">                                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(interval.end, chromosome_length),</span>
<span id="cb16-89">                                    )</span>
<span id="cb16-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyfaidx wants a 1-based interval</span></span>
<span id="cb16-91">        sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.get_seq(trimmed_interval.chrom,</span>
<span id="cb16-92">                                          trimmed_interval.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb16-93">                                          trimmed_interval.stop).seq).upper()</span>
<span id="cb16-94">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill truncated values with N's.</span></span>
<span id="cb16-95">        pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>interval.start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-96">        pad_downstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(interval.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chromosome_length, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pad_upstream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pad_downstream</span>
<span id="cb16-98"></span>
<span id="cb16-99">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb16-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fasta.close()</span>
<span id="cb16-101"></span>
<span id="cb16-102"></span>
<span id="cb16-103"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> one_hot_encode(sequence):</span>
<span id="cb16-104">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> kipoiseq.transforms.functional.one_hot_dna(sequence).astype(np.float32)</span>
<span id="cb16-105"></span>
<span id="cb16-106"></span>
<span id="cb16-107"></span>
<span id="cb16-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @title `plot_tracks`</span></span>
<span id="cb16-109"></span>
<span id="cb16-110"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_tracks(tracks, interval, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>):</span>
<span id="cb16-111">  fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks)), sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb16-112">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax, (title, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, tracks.items()):</span>
<span id="cb16-113">    ax.fill_between(np.linspace(interval.start, interval.end, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(y)), y)</span>
<span id="cb16-114">    ax.set_title(title)</span>
<span id="cb16-115">    sns.despine(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb16-116">  ax.set_xlabel(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(interval))</span>
<span id="cb16-117">  plt.tight_layout()</span></code></pre></div>
</div>
<p>Here, we define some utility functions for ourselves, to help us make predictions and analyse our predictions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Bio</span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Bio.Seq <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Seq</span>
<span id="cb17-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_rev_complement(dna_string):</span>
<span id="cb17-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(Seq(dna_string).reverse_complement()))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> prepare_for_quantify_prediction_per_TSS(predictions, gene, tss_df):</span>
<span id="cb18-2"></span>
<span id="cb18-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-4"></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters:</span></span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          predicitions (A numpy array): All predictions from the track</span></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          gene (a gene name, character): a gene</span></span>
<span id="cb18-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          tss_df: a list of dataframe of genes and their transcription start sites</span></span>
<span id="cb18-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns:</span></span>
<span id="cb18-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          A dictionary of cage experiment predictions and a list of transcription start sites</span></span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb18-13"></span>
<span id="cb18-14">  output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tdf <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tss_df:</span>
<span id="cb18-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tdf.genes.values:</span>
<span id="cb18-17">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb18-18">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tdf[tdf.genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gene].txStart_Sites.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>).values</span>
<span id="cb18-19">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_tss_list]</span>
<span id="cb18-20">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(item) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> nestedlist <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_tss_list <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> nestedlist]</span>
<span id="cb18-21">    gene_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(gene_tss_list))</span>
<span id="cb18-22">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cage_predictions'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a numpy array</span></span>
<span id="cb18-23">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_TSS'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_tss_list <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a list</span></span>
<span id="cb18-24"></span>
<span id="cb18-25"></span>
<span id="cb18-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(output) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a dictionary</span></span>
<span id="cb18-27"></span>
<span id="cb18-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> quantify_prediction_per_TSS(low_range, TSS, cage_predictions):</span>
<span id="cb18-29"></span>
<span id="cb18-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters:</span></span>
<span id="cb18-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          low_range (int): The lower interval</span></span>
<span id="cb18-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          TSS (list of integers): A list of TSS for a gene</span></span>
<span id="cb18-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          cage_predictions: A 1D numpy array or a vector of predictions from enformer corresponding to track 5110 or CAGE predictions</span></span>
<span id="cb18-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns:</span></span>
<span id="cb18-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          A dictionary of gene expression predictions for each TSS for a gene</span></span>
<span id="cb18-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb18-38">  tss_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-39">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tss <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> TSS:</span>
<span id="cb18-40">    bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">768</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)</span>
<span id="cb18-41">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb18-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> tss:</span>
<span id="cb18-43">      bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bin_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb18-44">      count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb18-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(cage_predictions)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb18-46">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb18-47">    cage_preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cage_predictions[count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-48">    tss_predictions[tss] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cage_preds</span>
<span id="cb18-49"></span>
<span id="cb18-50">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(tss_predictions)</span>
<span id="cb18-51"></span>
<span id="cb18-52"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> collect_intervals(chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"22"</span>], gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb18-53"></span>
<span id="cb18-54">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters :</span></span>
<span id="cb18-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      chromosomes : a list of chromosome numbers; each element should be a string format</span></span>
<span id="cb18-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      gene_list : a list of genes; the genes should be located on those chromosomes</span></span>
<span id="cb18-58"></span>
<span id="cb18-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns :</span></span>
<span id="cb18-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      A dictionary of genes (from gene_list) and their intervals within their respective chromosomes</span></span>
<span id="cb18-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb18-62"></span>
<span id="cb18-63">  gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Collect intervals for our genes of interest</span></span>
<span id="cb18-64"></span>
<span id="cb18-65">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> chrom <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chromosomes:</span>
<span id="cb18-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/gene_chroms/gene_"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> chrom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> chrom_genes:</span>
<span id="cb18-67">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> chrom_genes:</span>
<span id="cb18-68">        split_line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> line.strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-69">        gene_intervals[split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb18-70">                                          split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb18-71">                                          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]),</span>
<span id="cb18-72">                                          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(split_line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb18-73">                                        ]</span>
<span id="cb18-74"></span>
<span id="cb18-75">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if the user has supplied a list of genes they are interested in</span></span>
<span id="cb18-76">    use_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>((k, gene_intervals[k]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_list <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_intervals)</span>
<span id="cb18-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(use_genes)</span>
<span id="cb18-78">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(gene_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)):</span>
<span id="cb18-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(gene_intervals)</span>
<span id="cb18-80"></span>
<span id="cb18-81"></span>
<span id="cb18-82"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> run_predictions(gene_intervals, tss_dataframe, individuals_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb18-83">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters :</span></span>
<span id="cb18-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    gene_intervals : the results from calling `collect_intervals`</span></span>
<span id="cb18-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tss_dataframe : a list of the TSSs dataframes i.e. the TSS for the genes in the chromosomes</span></span>
<span id="cb18-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    individuals_list : a list of individuals on which we want to make predictions; defaults to None</span></span>
<span id="cb18-88"></span>
<span id="cb18-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns :</span></span>
<span id="cb18-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A list of predictions; the first element is the predictions around the TSS for each gene. The second is the prediction across CAGE tracks</span></span>
<span id="cb18-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb18-92"></span>
<span id="cb18-93">  gene_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-94">  gene_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-95"></span>
<span id="cb18-96">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_intervals.keys():</span>
<span id="cb18-97">    gene_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb18-98">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb18-99">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb18-100">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># creates an interval to select the right sequences</span></span>
<span id="cb18-101">    target_fa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta_extractor.extract(target_interval.resize(SEQUENCE_LENGTH))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extracts the fasta sequences, and resizes such that it is compatible with the sequence_length</span></span>
<span id="cb18-102">    window_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_interval.resize(SEQUENCE_LENGTH) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we also need information about the start and end locations after resizing</span></span>
<span id="cb18-103">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb18-104">      cur_gene_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".bed"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read in the appropriate bed file for the gene</span></span>
<span id="cb18-105">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb18-106">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb18-107">    individual_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-108">    individual_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-109"></span>
<span id="cb18-110">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(np.empty([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))):</span>
<span id="cb18-111">      use_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individuals_list</span>
<span id="cb18-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(individuals_list, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)):</span>
<span id="cb18-113">      use_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cur_gene_vars.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]</span>
<span id="cb18-114"></span>
<span id="cb18-115">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> use_individuals:</span>
<span id="cb18-116">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Currently on gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, and predicting on individual </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">...'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(gene, individual))</span>
<span id="cb18-117">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># two haplotypes per individual</span></span>
<span id="cb18-118">      haplo_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(target_fa[:])</span>
<span id="cb18-119">      haplo_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(target_fa[:])</span>
<span id="cb18-120"></span>
<span id="cb18-121">      ref_mismatch_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb18-122">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i,row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> cur_gene_vars.iterrows():</span>
<span id="cb18-123"></span>
<span id="cb18-124">        geno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[individual].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>)</span>
<span id="cb18-125">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(haplo_2):</span>
<span id="cb18-126">          <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb18-127">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb18-128">          <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb18-129">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> geno[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>:</span>
<span id="cb18-130">          haplo_1[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ALT"</span>]</span>
<span id="cb18-131">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> geno[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>:</span>
<span id="cb18-132">          haplo_2[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POS"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window_coords.start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ALT"</span>]</span>
<span id="cb18-133"></span>
<span id="cb18-134">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict on the individual's two haplotypes</span></span>
<span id="cb18-135">      prediction_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo_1))[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb18-136">      prediction_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_on_batch(one_hot_encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(haplo_2))[np.newaxis])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'human'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb18-137"></span>
<span id="cb18-138">      temp_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [prediction_1[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>], prediction_2[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5110</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CAGE predictions we are interested in</span></span>
<span id="cb18-139">      individual_prediction[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_predictions</span>
<span id="cb18-140"></span>
<span id="cb18-141">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate TSS CAGE expression which correspond to column 5110 of the predictions above</span></span>
<span id="cb18-142">      temp_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb18-143"></span>
<span id="cb18-144">      pred_prepared_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_for_quantify_prediction_per_TSS(predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_1, gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene, tss_df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tss_dataframe)</span>
<span id="cb18-145">      tss_predictions_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quantify_prediction_per_TSS(low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> window_coords.start, TSS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_TSS'</span>], cage_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cage_predictions'</span>])</span>
<span id="cb18-146"></span>
<span id="cb18-147">      pred_prepared_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_for_quantify_prediction_per_TSS(predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prediction_2, gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene, tss_df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tss_dataframe)</span>
<span id="cb18-148">      tss_predictions_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quantify_prediction_per_TSS(low_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> window_coords.start, TSS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_TSS'</span>], cage_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_prepared_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cage_predictions'</span>])</span>
<span id="cb18-149"></span>
<span id="cb18-150">      temp_list.append(tss_predictions_1)</span>
<span id="cb18-151">      temp_list.append(tss_predictions_2) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># results here are a dictionary for each TSS for each haplotype</span></span>
<span id="cb18-152"></span>
<span id="cb18-153">      individual_results[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_list <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save for the individual</span></span>
<span id="cb18-154"></span>
<span id="cb18-155">    gene_output[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individual_results</span>
<span id="cb18-156">    gene_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> individual_prediction</span>
<span id="cb18-157"></span>
<span id="cb18-158">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>([gene_output, gene_predictions])</span>
<span id="cb18-159"></span>
<span id="cb18-160"></span>
<span id="cb18-161"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> collect_target_intervals(gene_intervals):</span>
<span id="cb18-162"></span>
<span id="cb18-163">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns a dictionary of Interval objects (from kipoiseq) for each gene corresponding to the locations of the gene</span></span>
<span id="cb18-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb18-166"></span>
<span id="cb18-167">  target_intervals_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-168"></span>
<span id="cb18-169">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> gene_intervals.keys():</span>
<span id="cb18-170">    gene_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb18-171">    target_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kipoiseq.Interval(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chr"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb18-172">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb18-173">                                        gene_interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb18-174">    target_intervals_dict[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_interval</span>
<span id="cb18-175"></span>
<span id="cb18-176">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(target_intervals_dict)</span>
<span id="cb18-177"></span>
<span id="cb18-178"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> prepare_for_plot_tracks(gene, individual, all_predictions, chromosome<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'22'</span>]):</span>
<span id="cb18-179"></span>
<span id="cb18-180">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  This returns a dictionary of gene tracks and gene intervals, prepared for the function plot_tracks.</span></span>
<span id="cb18-182"></span>
<span id="cb18-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Parameters:</span></span>
<span id="cb18-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - gene</span></span>
<span id="cb18-185"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - individual</span></span>
<span id="cb18-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - all_predictions</span></span>
<span id="cb18-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb18-188"></span>
<span id="cb18-189">  haplo_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_predictions[gene][individual]</span>
<span id="cb18-190">  gene_tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | haplotype 1'</span>: np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]),</span>
<span id="cb18-191">                gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' | haplotype 2'</span>: np.log10(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])}</span>
<span id="cb18-192"></span>
<span id="cb18-193">  gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chromosome, gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[gene])</span>
<span id="cb18-194">  gene_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_target_intervals(gene_intervals)</span>
<span id="cb18-195"></span>
<span id="cb18-196">  output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb18-197">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_tracks'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_tracks</span>
<span id="cb18-198">  output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_intervals'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_intervals[gene]</span>
<span id="cb18-199"></span>
<span id="cb18-200">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(output)</span>
<span id="cb18-201"></span>
<span id="cb18-202"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> check_individuals(path_to_bed_file, list_of_individuals):</span>
<span id="cb18-203"></span>
<span id="cb18-204">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb18-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Checks if an individual is missing in bed variation files.</span></span>
<span id="cb18-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  These individuals should be removed prior to training</span></span>
<span id="cb18-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb18-208"></span>
<span id="cb18-209">  myfile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(path_to_bed_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb18-210">  myline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> myfile.readline()</span>
<span id="cb18-211">  bed_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> myline.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]</span>
<span id="cb18-212">  myfile.close()</span>
<span id="cb18-213"></span>
<span id="cb18-214">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(list_of_individuals).issubset(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(bed_names)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb18-215">    missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(list_of_individuals).difference(bed_names))</span>
<span id="cb18-216">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'This (or these) individual(s) is/are not present: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(missing))</span>
<span id="cb18-217">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb18-218">    missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb18-219">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All individuals are present in the bed file.'</span>)</span>
<span id="cb18-220"></span>
<span id="cb18-221">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(missing)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_predixcan_vs_geuvadis(interested_gene, interested_individuals, geuvadis_expression, predixcan_expression):</span>
<span id="cb19-2"></span>
<span id="cb19-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Show a plot and return correlation coefficient</span></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb19-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from predixcan expression</span></span>
<span id="cb19-7">  df_predixcan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predixcan_expression[predixcan_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> interested_gene].loc[:,interested_individuals]</span>
<span id="cb19-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from enformer</span></span>
<span id="cb19-9">  df_geuvadis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_expression[geuvadis_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> interested_gene].loc[:,interested_individuals]</span>
<span id="cb19-10"></span>
<span id="cb19-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># concatenate both</span></span>
<span id="cb19-12">  df_all <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([df_predixcan, df_geuvadis], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb19-13">  df_all.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predixcan'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GEUVADIS'</span>]</span>
<span id="cb19-14"></span>
<span id="cb19-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plotting</span></span>
<span id="cb19-16">  sns.regplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predixcan vs. GEUVADIS predictions on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals for gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_all.columns), interested_gene))</span>
<span id="cb19-17"></span>
<span id="cb19-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># correlation coefficient</span></span>
<span id="cb19-19">  corr_coef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb19-20"></span>
<span id="cb19-21">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>([df_all, corr_coef])</span>
<span id="cb19-22"></span>
<span id="cb19-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_enformer_vs_predixcan(prediction_results, interested_gene, interested_individuals, predixcan_expression, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>):</span>
<span id="cb19-24"></span>
<span id="cb19-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb19-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Show a plot and return correlation coefficient</span></span>
<span id="cb19-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb19-28"></span>
<span id="cb19-29">  enformer_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb19-30"></span>
<span id="cb19-31">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene, individuals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> prediction_results[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].items():</span>
<span id="cb19-32">    temp_individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb19-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual, haplo_predictions <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals.items():</span>
<span id="cb19-34">      temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb19-35">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])):</span>
<span id="cb19-36">        temp.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].values())[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].values())[i])</span>
<span id="cb19-37">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> how <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>:</span>
<span id="cb19-38">        temp_individual[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(temp)</span>
<span id="cb19-39">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> how <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max'</span>:</span>
<span id="cb19-40">        temp_individual[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(temp)</span>
<span id="cb19-41">    enformer_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_individual</span>
<span id="cb19-42"></span>
<span id="cb19-43">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from predixcan expression</span></span>
<span id="cb19-44">  df_predixcan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predixcan_expression[predixcan_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> interested_gene].loc[:,interested_individuals]</span>
<span id="cb19-45">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from enformer</span></span>
<span id="cb19-46">  df_enformer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(enformer_predictions[interested_gene], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).loc[:, df_predixcan.columns]</span>
<span id="cb19-47"></span>
<span id="cb19-48">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># concatenate both</span></span>
<span id="cb19-49">  df_all <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([df_enformer, df_predixcan], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb19-50">  df_all.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformer'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predixcan'</span>]</span>
<span id="cb19-51"></span>
<span id="cb19-52">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plotting</span></span>
<span id="cb19-53">  sns.regplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predixcan vs. Enformer predictions on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals for gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_all.columns), interested_gene))</span>
<span id="cb19-54"></span>
<span id="cb19-55">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># correlation coefficient</span></span>
<span id="cb19-56">  corr_coef_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb19-57"></span>
<span id="cb19-58">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>([df_all, corr_coef_predix])</span>
<span id="cb19-59"></span>
<span id="cb19-60"></span>
<span id="cb19-61"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_enformer_vs_geuvadis(prediction_results, interested_gene, interested_individuals, geuvadis_expression, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>):</span>
<span id="cb19-62"></span>
<span id="cb19-63">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb19-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Show a plot and return correlation coefficient</span></span>
<span id="cb19-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb19-66"></span>
<span id="cb19-67">  enformer_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb19-68"></span>
<span id="cb19-69">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene, individuals <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> prediction_results[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].items():</span>
<span id="cb19-70">    temp_individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb19-71">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> individual, haplo_predictions <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> individuals.items():</span>
<span id="cb19-72">      temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb19-73">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])):</span>
<span id="cb19-74">        temp.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].values())[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(haplo_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].values())[i])</span>
<span id="cb19-75">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> how <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>:</span>
<span id="cb19-76">        temp_individual[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(temp)</span>
<span id="cb19-77">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> how <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max'</span>:</span>
<span id="cb19-78">        temp_individual[individual] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(temp)</span>
<span id="cb19-79">    enformer_predictions[gene] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_individual</span>
<span id="cb19-80"></span>
<span id="cb19-81">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from geuvadis expression</span></span>
<span id="cb19-82">  df_geuvadis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_expression[geuvadis_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> interested_gene].loc[:,interested_individuals]</span>
<span id="cb19-83">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#df_enformer = np.transpose(pd.DataFrame(enformer_predictions)).loc[:, df_geuvadis.columns]</span></span>
<span id="cb19-84">  df_enformer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(enformer_predictions[interested_gene], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).loc[:, df_geuvadis.columns]</span>
<span id="cb19-85"></span>
<span id="cb19-86">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># concatenate both</span></span>
<span id="cb19-87">  df_all <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([df_enformer, df_geuvadis], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb19-88">  df_all.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformer'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GEUVADIS'</span>]</span>
<span id="cb19-89"></span>
<span id="cb19-90">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plotting</span></span>
<span id="cb19-91">  sns.regplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Enformer vs. Geuvadis predictions on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> individuals for gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_all.columns), interested_gene))</span>
<span id="cb19-92"></span>
<span id="cb19-93">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># correlation coefficient</span></span>
<span id="cb19-94">  corr_coef_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_all.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb19-95"></span>
<span id="cb19-96">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>([df_all, corr_coef_geu])</span></code></pre></div>
</div>
</section>
</section>
<section id="make-predictions-on-the-geuvadis-dataset." class="level2">
<h2 class="anchored" data-anchor-id="make-predictions-on-the-geuvadis-dataset.">Make predictions on the GEUVADIS dataset.</h2>
<p>Here, we will begin to make predictions. Excited?!</p>
<p>We still need the model itself. The model has been graciously hosted on <a href="https://tfhub.dev/deepmind/enformer/1">Tensorflow Hub</a>, which hosts many other models too. You can click on the link and explore. When you click the link, you can see that the model is about 892 Mb large. Quite big. We will use the url to the model to download and use it here.</p>
<p>Earlier, we defined an Enformer class (see the codes section). We will load the model into this class. The model has been trained and the weights are freely available. All we need to do is to load this model and use it. Neat.</p>
<p>We also defined a class FastaStringExtractor, that can help us extract raw sequences from fasta files given the intervals we want. We will make use of this class too.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Enformer(model_path) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># here we load the model architecture.</span></span>
<span id="cb20-2"></span>
<span id="cb20-3">fasta_extractor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaStringExtractor(fasta_file) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we define a class called fasta_extractor to help us extra raw sequence data</span></span></code></pre></div>
</div>
<section id="exercise-1" class="level3">
<h3 class="anchored" data-anchor-id="exercise-1"><strong>EXERCISE 1:</strong></h3>
<p>For evaluation, we need to <strong>sum the predictions around each unique TSS for a given gene</strong>. We will be using this a lot so it is important that we define what it means. Essentially, for a gene with one TSS, we take the sum of predicitions of the 128 bp output bin containing the TSS and its two immediate neighboring bins. We do this for each haplotype and each TSS to give TSS-level predictions.</p>
<p>To get individual-level estimates for a whole gene, we sum each haplotype TSS estimate to summarize TSS-level predictions per individual, and then take either the sum or max of TSS-level predictions to summarize at the gene level.</p>
<p>There are many genes and many individuals in our datasets. To make illustration simpler, we will use four genes, <em>ERAP1</em>, <em>ERAP2</em>, <em>NUDT2</em>, and <em>PEX6</em>, located on chromosome 5, 5, 9, and 6 respectively. We will use predictions for 10 randomly selected individuals located in the bed files.</p>
<div class="cell" data-outputid="2791e673-9da7-4b9d-8531-7c794185fca7">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">download_chrom_beds(chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>])</span>
<span id="cb21-2">download_chrom_beds(chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>, genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NUDT2'</span>])</span>
<span id="cb21-3">download_chrom_beds(chromosome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PEX6'</span>])</span></code></pre></div>
</div>
<p>Here, we read into a dataframe the TSS (transcription start sites) per gene for the chromosomes we are interested in. The dataframe has three columns. The first contains the genes, and the second contains the TSS(s) for that gene, and the third contains the strand information. We are interested in genes located on chromosomes 5, 6 and 9.</p>
<div class="cell" data-outputid="d8a76934-e1f0-40ba-8c1c-48f60601cd1a">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">chr5_tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/tss_by_chr/chr5_tss_by_gene.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb22-2">chr6_tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/tss_by_chr/chr6_tss_by_gene.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb22-3">chr9_tss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/tss_by_chr/chr9_tss_by_gene.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb22-4"></span>
<span id="cb22-5">chr9_tss.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</div>
<section id="preparing-inputs-for-enformer" class="level4">
<h4 class="anchored" data-anchor-id="preparing-inputs-for-enformer">Preparing inputs for Enformer</h4>
<p>Now that we have downloaded the genetic information that we need, we want to prepare the inputs for Enformer.</p>
<p>We need the following - The genes we want to predict for - The genomic interval for these genes - Information about the transcription start sites for these genes - The individuals we want to predict for</p>
<p>We have a utility function that helps to define the intervals of a gene, and resize this interval to make it acceptable for Enformer. Enformer needs a specific, defined sequence length. We use the <strong>collect_intervals</strong> function. The result is a dictionary that contains chromosome and interval information for each gene.</p>
<p>For example, let’s explore ERAP1…</p>
<div class="cell" data-outputid="512f71af-1df8-42d8-8c16-317a030f1bda">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">ERAP1_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>], gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>])</span>
<span id="cb23-2">ERAP1_target_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_target_intervals(ERAP1_intervals)</span>
<span id="cb23-3">ERAP1_intervals, ERAP1_target_intervals</span></code></pre></div>
</div>
<p><strong>ERAP1_target_intervals</strong> is an Interval object created using the kipoiseq package we installed earlier. It is used during predictions, and we don’t need to know the methods of this object for the purpose of the next questions.</p>
<p>However, we have similar information in <strong>ERAP1_intervals</strong>, which is a python dictionary of lists. For the questions below, we will use the <strong>ERAP1_intervals</strong> object.</p>
</section>
<section id="question-1a" class="level4">
<h4 class="anchored" data-anchor-id="question-1a"><strong><em>Question 1a</em></strong></h4>
<p>What is the size of this interval? <em>Hint</em>: Look at the <strong>ERAP1_intervals</strong>, and remember that Python is 0-based indexed. You need to access the <strong>key</strong> of this dictionary, which is the gene name, and for the value, which is a list, you can access the first element using 0, the second element using 1, and so on.</p>
<div class="cell" data-outputid="e5072587-661b-4a61-84f7-911e106c9bc4">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">ERAP1_intervals[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ERAP1_intervals[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># your answers go in the ...</span></span></code></pre></div>
</div>
</section>
<section id="note" class="level4">
<h4 class="anchored" data-anchor-id="note"><strong><em>Note</em></strong></h4>
<p>You can roughly confirm this interval by going to the UCSC genome browser or Ensemble genome browser. We have provided a link for UCSC genome browser’s interval length <a href="https://genome.ucsc.edu/cgi-bin/hgTracks?db=hg19&amp;lastVirtModeType=default&amp;lastVirtModeExtraState=&amp;virtModeType=default&amp;virtMode=0&amp;nonVirtPosition=&amp;position=chr5%3A96096517%2D96143648&amp;hgsid=1316458921_99pz1X7GNzmiEg0WV1q2UmDp9nSB">for ERAP1 here</a>. Click on this link, the answer is right at the top of the browser.</p>
<p>Enformer takes in a defined sequence length. When we provide a gene and collect its intervals, we need to resize this interval to be acceptable for Enformer. Here, we will use the Intervals object define earlier, <strong>ERAP1_target_intervals</strong>.</p>
<div class="cell" data-outputid="3c37002b-46af-42fe-e540-be19b23afee3">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">ERAP1_target_interval_resized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ERAP1_target_intervals[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>].resize(SEQUENCE_LENGTH)</span>
<span id="cb25-2">ERAP1_target_interval_resized</span></code></pre></div>
</div>
</section>
<section id="question-1b" class="level4">
<h4 class="anchored" data-anchor-id="question-1b"><strong><em>Question 1b</em></strong></h4>
<p>What is the length of this interval? Simply run the next line of code.</p>
<div class="cell" data-outputid="c0a53c51-4692-4a47-ca57-237d27497a95">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">ERAP1_target_interval_resized.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ERAP1_target_interval_resized.start</span></code></pre></div>
</div>
<p>Essentially, we resized the length of the gene and pad it with the native sequences to the left and to the right, such that the length of the input sequence is 393216, and we can imagine our gene right at the center of this wider interval. This is the same interval length used to train ENCODE data to build Enformer. Since this value is pre-define, we really cannot change it. This is information that Enformer uses to make very good predictions. Below, we confirm that this is true.</p>
<div class="cell" data-outputid="db229dc2-931e-4e86-8005-87d09104762d">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">(ERAP1_target_interval_resized.end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ERAP1_target_interval_resized.start) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> SEQUENCE_LENGTH</span></code></pre></div>
</div>
</section>
<section id="making-predictions-with-enformer" class="level4">
<h4 class="anchored" data-anchor-id="making-predictions-with-enformer">Making predictions with Enformer</h4>
<p>We will select 10 individuals (we have provided 10 randomly sample individuals for ease), and use four genes, <em>ERAP1</em>, <em>ERAP2</em>, <em>NUDT2</em>, and <em>PEX6</em>, located on chromosome 5, 5, 9, and 6 respectively</p>
<p>We will collect the intervals that correspond to these genes, collect the sequences for that interval from the reference fasta file, loop through each individual’s variations in the bed files we provided, switch around the variations for each haplotype and predict expression.</p>
<p>Eventually, for each individual, we should have predictions corresponding to each haplotype. We expect that since the haplotypes are different, the predictions should vary too.</p>
<p>Additionally, we need the TSS for these genes. Remember that we read in the dataframe earlier.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">exercise_1_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NUDT2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PEX6'</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># our gene of interest</span></span>
<span id="cb28-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#exercise_1_gene = ['NUDT2', 'ERAP2'] # our gene of interest</span></span>
<span id="cb28-3"></span>
<span id="cb28-4">exercise_1_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA11992'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA19235'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA20770'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HG00232'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HG00342'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA20502'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA19189'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HG00108'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HG00380'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA12872'</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># individuals we are interested in</span></span>
<span id="cb28-5"></span>
<span id="cb28-6">exercise_1_chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'6'</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the gene is on chromosome 5</span></span>
<span id="cb28-7"></span>
<span id="cb28-8">exercise_1_tss_dfs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [chr5_tss, chr9_tss, chr6_tss] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we use the TSS information</span></span></code></pre></div>
</div>
</section>
<section id="question-2" class="level4">
<h4 class="anchored" data-anchor-id="question-2"><strong><em>QUESTION 2</em></strong></h4>
<p>What is the id of the 8th individual? Hint: Python used 0-based indexing</p>
<div class="cell" data-outputid="82dff590-70e8-4b4d-915e-1c01ba9eb60c">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The 8th individual is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(exercise_1_individuals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>])) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># your code goes into the ellipsis</span></span></code></pre></div>
</div>
<p>It is possible to have individuals not present in our variation bed files for some reasons. So, we will do some sanity checks.</p>
<p>Using the <strong>check_individuals</strong> functions, we will check if all these individuals are present in the bed file for that gene.</p>
<div class="cell" data-outputid="23d7a637-f302-4080-c820-9570566d6967">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">missing_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_individuals(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr9/chr9_NUDT2.bed"</span>, list_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exercise_1_individuals)</span>
<span id="cb30-2">missing_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_individuals(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr5/chr5_ERAP2.bed"</span>, list_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exercise_1_individuals)</span>
<span id="cb30-3">missing_3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_individuals(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr5/chr5_ERAP1.bed"</span>, list_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exercise_1_individuals)</span>
<span id="cb30-4">missing_4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_individuals(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/individual_beds/chr6/chr6_PEX6.bed"</span>, list_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exercise_1_individuals)</span>
<span id="cb30-5">missing_1, missing_2, missing_3, missing_4</span></code></pre></div>
</div>
<p>It looks like all the individuals are present. Very nice! We are good to go.</p>
<p>To make predictions, we first collect the intervals for the genes we want to predict for.</p>
<div class="cell" data-outputid="47f26096-7eb7-4c09-aaeb-76e23e96f50a">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">exercise_1_interval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_chromosomes, gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># here, we collect the intervals for that gene</span></span>
<span id="cb31-2">exercise_1_interval</span></code></pre></div>
</div>
<p>Next, we use the <strong>run_predictions</strong> function</p>
<div class="cell" data-outputid="47b8f525-7b44-41df-9bc8-cfa848fd1744">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">exercise_1_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run_predictions(gene_intervals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_interval, tss_dataframe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_tss_dfs, individuals_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># here we make predictions and save it.</span></span></code></pre></div>
</div>
<p><strong>NB:</strong> If you intend to make predictions across many individuals and genes, it will be faster if you have larger GPU access. For now, we are using limited GPU. So, we have to limit our predictions.</p>
<p>Quite fast right? Very nice.</p>
<p>Our prediction object, <strong>exercise_1_predictions</strong> is a list of length two. - The first item in the list corresponds to the sum of predictions around each unique TSS, for each haplotype, for each individual, for each gene.</p>
<ul>
<li>The second item in the list corresponds to the CAGE:B lymphoblastoid cell line predictions across all 128bp bins for each haplotype, for each individual, for the genes. We will use the second item for plotting the tracks.</li>
</ul>
<p>Let us take a look at the object.</p>
<div class="cell" data-outputid="823cd61e-0778-485c-9fec-e64e401a2e77">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The exercise_1_predictions object is a </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> of length </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(exercise_1_predictions).<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(exercise_1_predictions)))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">exercise_1_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
</section>
<section id="plotting-the-cageb-lymphoblastoid-cell-line-tracks" class="level4">
<h4 class="anchored" data-anchor-id="plotting-the-cageb-lymphoblastoid-cell-line-tracks">Plotting the CAGE:B lymphoblastoid cell line tracks</h4>
<p>Next, we will plot the tracks. We have already defined two helper functions, <strong>prepare_for_plot_tracks</strong> and <strong>plot_tracks</strong> to plot the expression along the TSS for a gene, for an individual and for each haplotype.</p>
<p>For NUDT2…</p>
<div class="cell" data-outputid="cba34a3d-586a-4b86-f738-badedc155d37">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_for_plot_tracks(gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], individual<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], all_predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], chromosome<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span>])</span>
<span id="cb35-2">plot_tracks(tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_tracks'</span>], interval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_intervals'</span>])</span></code></pre></div>
</div>
<p>Looks nice!</p>
<p>Although it looks like there is no variation in the predictions for the haplotypes, we can take a look at the actual prediction values across the TSS.</p>
<p>The columns are the transcription start sites, and the rows are the haplotypes for the individual. The entries are the sum of the predictions at the <em>TSS</em>, at <em>TSS - 1</em>, and at the <em>TSS + 1</em>.</p>
<p>We will look at the first individual, <strong>NA11992</strong>, for <strong>NUDT2</strong>…</p>
<div class="cell" data-outputid="58d37046-c581-4d26-f662-7284c2320253">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">pd.DataFrame(exercise_1_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][exercise_1_individuals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype_1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype_2'</span>])</span></code></pre></div>
</div>
<p>We will look at the first individual, <strong>NA11992</strong>, for <strong>PEX6</strong>…</p>
<div class="cell" data-outputid="15b8a889-62a0-4a85-a272-ba02ca66a85e">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">pd.DataFrame(exercise_1_predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][exercise_1_individuals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype_1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haplotype_2'</span>])</span></code></pre></div>
</div>
<p>Merely looking at the values, it looks like there are variations in the predictions across the haplotypes and the TSS. We expected some variations because we are predicting expression for each haplotype, which tend to have variations in them. Very nice!</p>
</section>
</section>
</section>
<section id="comparing-with-true-expression-from-geuvadis-and-with-predixcan" class="level2">
<h2 class="anchored" data-anchor-id="comparing-with-true-expression-from-geuvadis-and-with-predixcan">Comparing with true expression from GEUVADIS and with Predixcan</h2>
<p>We should read in the GEUVADIS and Predixcan predictions.</p>
<div class="cell" data-outputid="4fe9f470-89e2-4935-e4fd-0d49d8f8df03">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">geuvadis_gene_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://uchicago.box.com/shared/static/5vwc7pjw9qmtv7298c4rc7bcuicoyemt.gz'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb38-2">                                         dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_id'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_name'</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TargetID'</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Chr'</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>})</span>
<span id="cb38-3">geuvadis_gene_expression.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<div class="cell" data-outputid="379f904b-a2fb-4184-e4c6-c1177e831f51">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">predixcan_gene_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://uchicago.box.com/shared/static/4k68u7x7rxjpoljfdva6qipjxwzd3l0g.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb39-2">predixcan_gene_expression.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<section id="question-3a" class="level4">
<h4 class="anchored" data-anchor-id="question-3a"><strong><em>QUESTION 3a</em></strong></h4>
<p>What is the dimension/size/shape of the <strong>geuvadis_gene_expression</strong> dataframe? Hint: You can use the .shape method on a dataframe.</p>
<div class="cell" data-outputid="39658489-75be-4942-dce8-7840cdccbfe4">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">geuvadis_dimension <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression.shape</span>
<span id="cb40-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print("The geuvadis_gene_expression dataframe has {} rows and {} columns".format(*geuvadis_dimension))</span></span></code></pre></div>
</div>
</section>
<section id="question-4b" class="level4">
<h4 class="anchored" data-anchor-id="question-4b"><strong><em>QUESTION 4b</em></strong></h4>
<p>What is the dimension/size/shape of the <strong>predixcan_gene_expression</strong> dataframe? Hint: You can use the .shape method on a dataframe.</p>
<div class="cell" data-outputid="95c1343b-16e3-4bf6-ad89-d48e213c2077">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1">predixcan_dimension <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predixcan_gene_expression.shape</span>
<span id="cb41-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The predixcan_gene_expression dataframe has </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> rows and </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> columns"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>predixcan_dimension))</span></code></pre></div>
</div>
<p>We select the individuals and the gene from the geuvadis_gene_expression dataframe.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">erap1_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]].loc[:,exercise_1_individuals]</span>
<span id="cb42-2">nudt2_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]].loc[:,exercise_1_individuals]</span>
<span id="cb42-3">erap2_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]].loc[:,exercise_1_individuals]</span>
<span id="cb42-4">pex6_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]].loc[:,exercise_1_individuals]</span></code></pre></div>
</div>
<div class="cell" data-outputid="5f4daab7-3313-4280-dc46-6d189c1e8801">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">nudt2_geuvadis_expression</span></code></pre></div>
</div>
<p>We will sum the prediction for both haplotypes for each TSS, and take the sum of the resulting values. The function used here can also take the max instead of the sums.</p>
<p>We have 3 utility functions to help us - plot_enformer_vs_guevadis - plot_predixcan_vs_geuvadis - plot_enformer_vs_predixcan (if you think this is necessary)</p>
<div class="cell" data-outputid="7739e0d6-0361-4fd6-82e1-7f06eba81cc5">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">erap1_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression,</span>
<span id="cb44-2">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb44-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(erap1_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="f86c49af-cc3d-43f8-80ec-062508155318">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">pex6_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression,</span>
<span id="cb45-2">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb45-3"></span>
<span id="cb45-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(pex6_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="a7da3825-9b21-4d56-932d-ec635525298a">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">nudt_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression,</span>
<span id="cb46-2">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb46-3"></span>
<span id="cb46-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(nudt_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="82b41343-c295-4b4d-b485-af291495e33f">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">erap2_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression,</span>
<span id="cb47-2">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb47-3"></span>
<span id="cb47-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(erap2_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<p>Now, we can see how Predixcan performs on these individuals</p>
<div class="cell" data-outputid="d245f45e-a45c-4c48-f819-95f7dee22ffb">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1">erap1_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb48-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(erap1_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="50e712e1-702c-4cd2-df84-40edb2e1dcb8">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">pex6_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb49-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(pex6_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="a93acdf3-c3d4-40bb-f19e-ad481e9b063d">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1">erap2_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb50-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(erap2_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell" data-outputid="845939e4-e00a-4897-a490-1534f73fc5b6">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1">nudt2_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>exercise_1_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb51-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(nudt2_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<p>Quite neat and impressive!</p>
</section>
</section>
<section id="exercise-2" class="level2">
<h2 class="anchored" data-anchor-id="exercise-2"><strong>EXERCISE 2</strong></h2>
<p>In this exercise, you will get your hands dirty, and run Enformer on your gene(s) of interest.</p>
<ol type="1">
<li><p>Select your favorite gene(s). <strong>Note that the more genes you use, the longer it will take to run</strong>.</p></li>
<li><p>Randomly select 10 individuals, just because we don’t have all the computational power.</p></li>
<li><p>Run predictions</p></li>
</ol>
<p>We only have data for a finite set of genes (sorry!). Here is a list of available genes you can use:</p>
<div class="cell" data-outputid="944612e4-f856-4624-e9a6-a025205575a4">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>curl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>L https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>uchicago.box.com<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>shared<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>static<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>x8d7dx1ykefz49ep6sxot42v44sfvcv5.tsv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s1mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>enformer_tutorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>all_genes.tsv</span>
<span id="cb52-2"></span>
<span id="cb52-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/s1mi/enformer_tutorial/all_genes.tsv"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ag:</span>
<span id="cb52-4">  all_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [line.strip() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> ag]</span>
<span id="cb52-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(all_genes))</span>
<span id="cb52-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First 5 genes all_genes:"</span>, all_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span></code></pre></div>
</div>
<ol type="1">
<li>Select your genes</li>
</ol>
<div class="cell" data-outputid="105b0902-3b12-4878-ddda-8c2d322d2473">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1">my_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ATAD3A'</span>]</span>
<span id="cb53-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My gene(s) is/are </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>.join(my_genes)))</span></code></pre></div>
</div>
<ol start="2" type="1">
<li>Read in the TSS txt files where those chromosome are located. If you have genes located on more than one chromosome, copy the <strong>pd.read_table</strong> line for each chromosome you have, and replace the chromosome number (ellipses) as appropriate.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1">my_chromosomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put in the chromosomes where the genes are located. Just the numbers will do, or you can put them in as a string type</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1">my_tss_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb55-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> my_chromosomes:</span>
<span id="cb55-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>)</span>
<span id="cb55-4">  bed_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/tss_by_chr/chr</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_tss_by_gene.txt'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>)</span>
<span id="cb55-5">  my_tss_list.append(pd.read_table(bed_file, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we read in the TSSs for each chromosome, and put them into a list</span></span></code></pre></div>
</div>
<ol start="3" type="1">
<li>Randomly select 10 individuals</li>
</ol>
<div class="cell" data-outputid="a3e1a0eb-3488-4634-8465-334ba3572e0e">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># let us set a seed to randomly select 10 individuals</span></span>
<span id="cb56-2">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># replace ... with an integer you want</span></span>
<span id="cb56-3"></span>
<span id="cb56-4">number_of_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb56-5"></span>
<span id="cb56-6">my_individuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>number_of_individuals, replace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># individuals we are interested in</span></span>
<span id="cb56-7">my_individuals</span></code></pre></div>
</div>
<ol start="4" type="1">
<li>We want to make sure that we have complete variation information for all 10 individuals.</li>
</ol>
<p>First, we need to download the variation bed files for these individuals</p>
<div class="cell" data-outputid="25de8c34-1e39-499c-bd99-7c2810b38eb3">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1">download_chrom_beds(chromosome<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>, genes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_genes) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remember that the genes should be on that chromosome, and you can use this code for each chromosome you have.</span></span></code></pre></div>
</div>
<p>Read in the variation bed files</p>
<div class="cell" data-outputid="f18fb43a-ca0b-4ad6-e571-f419e19347e0">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb58-2"></span>
<span id="cb58-3">my_missing_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb58-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> my_chromosomes:</span>
<span id="cb58-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> gene <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> my_genes:</span>
<span id="cb58-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>)</span>
<span id="cb58-7">    file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/s1mi/enformer_tutorial/individual_beds/chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/chr'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.bed'</span></span>
<span id="cb58-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.exists(file_path):</span>
<span id="cb58-9">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb58-10">    my_missing_list.append(check_individuals(file_path, my_individuals))</span></code></pre></div>
</div>
<section id="question-4" class="level4">
<h4 class="anchored" data-anchor-id="question-4"><strong><em>QUESTION 4</em></strong></h4>
<p>Are there missing individuals? All answers, based on your results are correct. If there are missing individuals, can you remove them? You can add new code blocks as you like.</p>
<div class="cell" data-outputid="06b151c0-3d6f-4f4a-f59b-d7246fa4c7f1">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1">my_missing_list</span></code></pre></div>
</div>
<p>It looks like we are almost set to make predictions.</p>
<ol start="5" type="1">
<li>Make predictions. First, we will collect the intervals for the genes we want, check the object and make sure we are on the right track. Next, we will call our <strong>run_predictions</strong> function.</li>
</ol>
<div class="cell" data-outputid="d651b2b2-d50d-4af3-e9f9-39722bdc7203">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1">my_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_chromosomes, gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_genes) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># here, we collect the intervals for that gene; replace ... with the right objects</span></span>
<span id="cb60-2">my_intervals</span></code></pre></div>
</div>
<div class="cell" data-outputid="3c7c3263-c304-4c31-ba57-d74ea116b251">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1">my_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run_predictions(gene_intervals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_intervals, tss_dataframe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_tss_list, individuals_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_individuals)</span></code></pre></div>
</div>
<p>At this point, we will leave you to make your own plots…</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1">atad3a_geuvadis_expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geuvadis_gene_expression[geuvadis_gene_expression.gene_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> my_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]].loc[:,my_individuals]</span>
<span id="cb62-2">atad3a_vs_geu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_enformer_vs_geuvadis(prediction_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_predictions, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, </span>
<span id="cb62-3">                            interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_individuals, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb62-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(atad3a_vs_geu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1">atad3a_predix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_predixcan_vs_geuvadis(interested_gene<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_genes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], interested_individuals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_individuals, geuvadis_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression, predixcan_expression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predixcan_gene_expression)</span>
<span id="cb63-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The correlation coefficient: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(atad3a_predix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
</section>
</section>
<section id="average-haplotype-vs-average-epigenome" class="level2">
<h2 class="anchored" data-anchor-id="average-haplotype-vs-average-epigenome">Average Haplotype vs Average Epigenome</h2>
<p>Get ERAP2 interval:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb64-1">ERAP2_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_intervals(chromosomes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>], gene_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERAP2'</span>])</span>
<span id="cb64-2">ERAP2_target_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect_target_intervals(ERAP2_intervals)</span>
<span id="cb64-3">ERAP2_intervals, ERAP2_target_intervals</span></code></pre></div>
</div>
<p>Select random individual</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1">rand_individual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geuvadis_gene_expression.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, replace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># individuals we are interested in</span></span>
<span id="cb65-2">rand_individual</span></code></pre></div>
</div>
<p>Run predictions (returns average epigenome):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1">my_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run_predictions(gene_intervals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_intervals, tss_dataframe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_tss_list, individuals_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_individuals)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://sabrinami.quarto.pub/deep-learning-in-genomics/posts/hackathon-enformer-usage/Hackathon_enformer_usage_participant.html</guid>
  <pubDate>Thu, 03 Aug 2023 02:47:03 GMT</pubDate>
</item>
</channel>
</rss>
