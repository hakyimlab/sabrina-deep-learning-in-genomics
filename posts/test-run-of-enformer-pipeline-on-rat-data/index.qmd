---
title: A test run of the Enformer pipeline on Palmer Lab rat data
description: This post will outline the steps I took to prepare rat data for the enformer pipeline.
author: Sabrina Mi
date: 7/20/23
---
All of the data is publicly available

* [Reference Genome](https://hgdownload.soe.ucsc.edu/goldenPath/rn7/bigZips/rn7.fa.gz | gunzip -c > {fasta_file}
)
* [Genotypes](https://ratgtex.org/data/geno/Brain.rn7.vcf.gz)
* [Gene Expression](https://ratgtex.org/data/expr/Brain.rn7.expr.tpm.bed.gz)

First, I checked that enformer could run on the rat data in python using code provided by deepmind. 

* [000789972A_chr1_1001138_1014540.py](https://github.com/hakyimlab/sabrina-deep-learning-in-genomics/blob/main/posts/test-run-of-enformer-pipeline-on-rat-data/code/000789972A_chr1_1001138_1014540.py): Personalized enformer run on individual 000789972A on chromosome 1, 1001138 to 1014540.
* [EnformerVCF.py](https://github.com/hakyimlab/sabrina-deep-learning-in-genomics/blob/main/posts/test-run-of-enformer-pipeline-on-rat-data/code/EnformerVCF.py): Helper functions provided by deepmind along with some VCF handling functions.

Next, I needed to [process the data for the pipeline](https://github.com/hakyimlab/sabrina-deep-learning-in-genomics/blob/main/posts/test-run-of-enformer-pipeline-on-rat-data/code/prepare_pipeline_inputs.sh). This included splitting the VCF by chromosome, indexing the new VCFs, and creating a list of individuals.

I wrote my config json (`/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/config_files/run_on_polaris_personalized.json` on polaris):
```json
{
  "individuals": "/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/metadata/individuals.txt",
  "project_dir": "/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/",
  "interval_list_file": "/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/metadata/intervals.txt",
  "prediction_data_name": "personalized_enformer_minimal",
  "prediction_id": "some_regions",
  "reverse_complement": false,
  "date": null,
  "exclude_regions": true,
  "n_individuals": 8,
  "batch_individuals": 4,
  "vcf_files": {
    "folder": "/home/s1mi/enformer_rat_data/BrainVCFs",
    "files": {
      "chr1": "chr1.vcf.gz",
      "chr2": "chr2.vcf.gz",
      "chr3": "chr3.vcf.gz",
      "chr4": "chr4.vcf.gz",
      "chr5": "chr5.vcf.gz",
      "chr6": "chr6.vcf.gz",
      "chr7": "chr7.vcf.gz",
      "chr8": "chr8.vcf.gz",
      "chr9": "chr9.vcf.gz",
      "chr10": "chr10.vcf.gz",
      "chr11": "chr11.vcf.gz",
      "chr12": "chr12.vcf.gz",
      "chr13": "chr13.vcf.gz",
      "chr14": "chr14.vcf.gz",
      "chr15": "chr15.vcf.gz",
      "chr16": "chr16.vcf.gz",
      "chr17": "chr17.vcf.gz",
      "chr18": "chr18.vcf.gz",
      "chr19": "chr19.vcf.gz",
      "chr20": "chr20.vcf.gz"
    }
  },
  "sub_dir": true,
  "use_parsl": true,
  "model_path": "/lus/grand/projects/TFXcan/imlab/data/enformer/raw",
  "fasta_file": "/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_data/rn7_genome.fasta",
  "metadata_dir": "/lus/grand/projects/TFXcan/imlab/users/sabrina/enformer_rat_pipeline/metadata",
  "output_dir": "enformer_predictions",
  "tracks_to_save":-1,
  "bins_to_save": -1,
  "sequence_source": "personalized",
  "predictions_log_dir": "predictions_log",
  "batch_regions": 3,
  "n_regions": 12,
  "write_log": {
    "logdir": "job_logs",
    "logtypes": {
      "memory": true,
      "error": true,
      "time": false,
      "cache": true
    }
  },
  "parsl_parameters": {
    "job_name": "enformer_predict_regions_personalized",
    "num_of_full_nodes": 1,
    "walltime": "00:30:00",
    "init_blocks":1,
    "min_num_blocks": 0,
    "max_num_blocks": 4,
    "queue": "preemptable",
    "account": "TFXcan",
    "hpc": "polaris",
    "provider": "highthroughput",
    "worker_init":"source ~/.bashrc; module load conda; conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools; which python; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools/lib"
  }

```

```
cd /home/s1mi/Github/shared_folder/enformer_pipeline

module load conda

conda activate /lus/grand/projects/TFXcan/imlab/shared/software/conda_envs/enformer-predict-tools

python3 scripts/enformer_predict.py --parameters /home/s1mi/enformer_rat_pipeline/config_files/run_on_polaris_personalized.json

```