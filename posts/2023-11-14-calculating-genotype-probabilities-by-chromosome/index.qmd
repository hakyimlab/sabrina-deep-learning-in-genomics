---
title: Testing qtl's founder haplotype probability inferences on a single chromosome
date: 11/14/2023
author: Sabrina Mi
engine: knitr
---

We are trying to work around memory limitations by splitting the genotype inferences by chromosome. We'll first try to get working results for chromosome 12.

### Convert Dan's Code

My first attempt was to copy his make_qtl_inputs and take out any loops iterating over each chromosome number. However, I run into an unexplainable `negative length vectors are not allowed` error, even though I checked that the files (gmap.csv, pmap.csv, geno.csv, founder_geno.csv) generated by the new code are identical to the original when subsetted to lines with "chr20".


```{python make_qtl_inputs, eval=FALSE}
from qtl2_helpers import make_qtl_inputs
import os
data_dir = '/Users/sabrinami/Desktop/qtl2_data'
individuals_dir = os.path.join(data_dir, 'BrainVCFs')
founders_dir = os.path.join(data_dir, 'FounderVCFs')
gmap_dir =os.path.join(data_dir, 'genetic_map')
output_dir = '/Users/sabrinami/Desktop/qtl2_data/qtl_inputs'
make_qtl_inputs('chr20', individuals_dir, founders_dir, gmap_dir, output_dir,snps=None)
```

Now run the R code:

```{r, error=TRUE}
setwd('/Users/sabrinami/Desktop/qtl2_data/qtl_inputs/chr20')
library(qtl2)
cross <- read_cross2("control.yaml"); saveRDS(cross, 'cross.rds')
pr <- calc_genoprob(cross, error_prob = 0.01, cores = 1); saveRDS(pr, 'genoprob.rds')
pr <- genoprob_to_alleleprob(pr); saveRDS(pr, "alleleprob.rds")

```

It's very puzzling to me why this cross object is causing issues that didn't appear when we marked the whole genome.

```{r}
print(cross)
print(readRDS("/Users/sabrinami/Github/qtl2-founder-haps/tmp-qtl2-founder-haps/cross.rds"))

```

### Original Code

I'm going back to Dan's original code, passing in chromosome 20 VCFs. My inital reasoning for converting Dan's code to a module was to 1) save memory by not reading in genetic mapping files for every chromosome and 2) have better control over file naming, and 3) break up the task into preparing input files (python) and qtl2 computations (R), but I realized it's not worth the trouble of debugging.

```
cd /Users/sabrinami/Desktop/qtl2_data
conda activate genomics
python /Users/sabrinami/Github/qtl2-founder-haps/qtl2-founder-haps.py BrainVCFs/chr20.vcf.gz FounderVCFs/chr20.vcf.gz output/chr20_prob.rds --working-dir chr20-qtl2-founder-haps

```

Since I'm getting the same error as before, I want to check that it's not an issue with chromosome 20.

```
cd /Users/sabrinami/Desktop/qtl2_data
conda activate genomics
python /Users/sabrinami/Github/qtl2-founder-haps/qtl2-founder-haps.py BrainVCFs/chr19.vcf.gz FounderVCFs/chr19.vcf.gz output/chr19_prob.rds --working-dir chr19-qtl2-founder-haps

```

It seems to run fine for chromosome 19, although I can't confirm until I try running it on Polaris or Expanse with sufficient memory. On my local computer (8G memory), the R code ran for just under 2 hours before being killed.

![R on MacBook](macbook_calc_genoprob_bug.png)